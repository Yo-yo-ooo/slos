#ifndef STRING
#define STRING

#include <inc/string.h>

namespace sstd{

class String
{
private:
    /* data */
    size_t size_;
    char* buffer_;
public:
    String();
	String(const String& str);
	String(const String& str, size_t pos, size_t len = npos);
	String(const char* s);
	String(const char* s, size_t n);
	String(size_t n, char c);
	~String();
    const char* c_str() const; 
	size_t length() const;
	size_t size() const;
	
	char& operator [] (size_t pos);
	const char& operator [] (size_t pos) const;
	String& operator = (const String& str);
	String& operator = (const char* s);
	String& operator = (char c);
	String& operator += (const String& str);
	String& operator += (const char* s);
	String& operator += (char c);
 
	String& append(const String& str);
	String& append(const char* s);
 
	String& assign(const String& str);
	String& assign(const char* s);
 
	char& at(size_t pos);
	const char& at(size_t pos) const;
 
	void clear();
 
	int compare(const String& str) const;
	int compare(const char* s) const;
 
	const char* data() const;
	bool empty() const;
 
	static const size_t npos = -1;
};

}

#endif