!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon11
ALT	kern/console.c	242;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnfaultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	26;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	29;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	47;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	31;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	309;"	d	file:
CAPSLOCK	kern/console.c	244;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	412;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon9
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon9
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon9
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	241;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	27;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	25;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnfaultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	248;"	d	file:
E1000_STATUS	kern/e1000.h	4;"	d
E1000_TCTL	kern/e1000.h	10;"	d
E1000_TCTL_BCE	kern/e1000.h	18;"	d
E1000_TCTL_COLD	kern/e1000.h	21;"	d
E1000_TCTL_CT	kern/e1000.h	20;"	d
E1000_TCTL_EN	kern/e1000.h	17;"	d
E1000_TCTL_PSP	kern/e1000.h	19;"	d
E1000_TDBAH	kern/e1000.h	12;"	d
E1000_TDBAL	kern/e1000.h	11;"	d
E1000_TDH	kern/e1000.h	14;"	d
E1000_TDLEN	kern/e1000.h	13;"	d
E1000_TDT	kern/e1000.h	15;"	d
E1000_TIPG	kern/e1000.h	16;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	24;"	d
E1000_TXD_CMD_RS	kern/e1000.h	22;"	d
E1000_TXD_STAT_DD	kern/e1000.h	23;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	20;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	18;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	40;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	21;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon2
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon2
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon2
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon2
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon2
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon2
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	45;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	32;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon4
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon4
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon4
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon4
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon4
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon4
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon4
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon4
FS_MAGIC	inc/fs.h	56;"	d
FTYPE_DIR	inc/fs.h	51;"	d
FTYPE_REG	inc/fs.h	50;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open { \/\/Open req->req_path in mode req->req_omode$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read { \/\/Return the bytes read from the file to the caller$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	33;"	d	file:
ICRLO	kern/lapic.c	22;"	d	file:
ID	kern/lapic.c	15;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	23;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	151;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon38	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	28;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	38;"	d	file:
LINT1	kern/lapic.c	39;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon42
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon42
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon42
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon42
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon42
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon42
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon42
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon39
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon42
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	41;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	96;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon12	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	44;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon40
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon22
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon23
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon23
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon38	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	238;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon5
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon5
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon5
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon5
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon5
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon5
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon5
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon5
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon5
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon5
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon5
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon5
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon6
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon38	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	245;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	30;"	d	file:
O_ACCMODE	inc/lib.h	145;"	d
O_CREAT	inc/lib.h	147;"	d
O_EXCL	inc/lib.h	149;"	d
O_MKDIR	inc/lib.h	150;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	142;"	d
O_RDWR	inc/lib.h	144;"	d
O_TRUNC	inc/lib.h	148;"	d
O_WRONLY	inc/lib.h	143;"	d
OpenFile	fs/serv.c	/^struct OpenFile { \/\/This memory is kept private to the file server.$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 24 20:46:05 EDT 2018$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon27
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon27
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon28
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon28
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon27
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon28
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon28
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon27
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	712;"	d
PCINT	kern/lapic.c	37;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	333;"	d
PCI_BHLC_REG	kern/pcireg.h	306;"	d
PCI_BIST	kern/pcireg.h	310;"	d
PCI_BIST_MASK	kern/pcireg.h	309;"	d
PCI_BIST_SHIFT	kern/pcireg.h	308;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	594;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	593;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	643;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	642;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	631;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	632;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	640;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	641;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	635;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	626;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	624;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	625;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	623;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	610;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	608;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	611;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	609;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	607;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	620;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	621;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	618;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	615;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	613;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	602;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	603;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	604;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	601;"	d
PCI_CACHELINE	kern/pcireg.h	330;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	329;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	328;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	416;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	420;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	419;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	418;"	d
PCI_CAP_AGP	kern/pcireg.h	424;"	d
PCI_CAP_AGP8	kern/pcireg.h	437;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	425;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	430;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	435;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	434;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	436;"	d
PCI_CAP_LDT	kern/pcireg.h	432;"	d
PCI_CAP_MSI	kern/pcireg.h	429;"	d
PCI_CAP_MSIX	kern/pcireg.h	440;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	439;"	d
PCI_CAP_PCIX	kern/pcireg.h	431;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	423;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	422;"	d
PCI_CAP_SECURE	kern/pcireg.h	438;"	d
PCI_CAP_SLOTID	kern/pcireg.h	428;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	433;"	d
PCI_CAP_VPD	kern/pcireg.h	427;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	417;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	404;"	d
PCI_CLASS	kern/pcireg.h	122;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	152;"	d
PCI_CLASS_CODE	kern/pcireg.h	140;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	153;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	162;"	d
PCI_CLASS_DASP	kern/pcireg.h	163;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	149;"	d
PCI_CLASS_DOCK	kern/pcireg.h	156;"	d
PCI_CLASS_I2O	kern/pcireg.h	160;"	d
PCI_CLASS_INPUT	kern/pcireg.h	155;"	d
PCI_CLASS_MASK	kern/pcireg.h	121;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	147;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	151;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	150;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	148;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	146;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	157;"	d
PCI_CLASS_REG	kern/pcireg.h	113;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	161;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	158;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	120;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	154;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	164;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	159;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	93;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_MASK	kern/pcireg.h	76;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	90;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	92;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	75;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	87;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	80;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	74;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	91;"	d
PCI_DEVICE_ID	kern/pcireg.h	56;"	d
PCI_HDRTYPE	kern/pcireg.h	315;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	343;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	314;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	320;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	345;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	344;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	313;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	318;"	d
PCI_ID_CODE	kern/pcireg.h	67;"	d
PCI_ID_REG	kern/pcireg.h	50;"	d
PCI_INTERFACE	kern/pcireg.h	132;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	131;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	130;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	579;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	561;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	560;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	559;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	566;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	565;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	564;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	576;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	575;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	574;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	571;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	587;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	588;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	589;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	590;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	569;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	542;"	d
PCI_LATTIMER	kern/pcireg.h	325;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	324;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	323;"	d
PCI_MAPREG_END	kern/pcireg.h	351;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	392;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	390;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	384;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	369;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	366;"	d
PCI_MAPREG_NUM	kern/pcireg.h	397;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	354;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	353;"	d
PCI_MAPREG_ROM	kern/pcireg.h	352;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	362;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	394;"	d
PCI_MAPREG_START	kern/pcireg.h	350;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	356;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	361;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	358;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	360;"	d
PCI_MAX_LAT	kern/pcireg.h	551;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	550;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	549;"	d
PCI_MIN_GNT	kern/pcireg.h	556;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	555;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	554;"	d
PCI_PCIX_CMD	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	486;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	496;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	497;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	498;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	495;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	490;"	d
PCI_PCIX_STATUS	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	506;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	535;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	533;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	534;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	536;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	510;"	d
PCI_PMCR	kern/pcireg.h	457;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	458;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	459;"	d
PCI_PMCSR	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	463;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	464;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	465;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	466;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	462;"	d
PCI_PRODUCT	kern/pcireg.h	64;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	63;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	62;"	d
PCI_REVISION	kern/pcireg.h	137;"	d
PCI_REVISION_MASK	kern/pcireg.h	136;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	135;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	96;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	98;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	95;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	100;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	103;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	101;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	102;"	d
PCI_STATUS_MASK	kern/pcireg.h	78;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	106;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	105;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	108;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	99;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	77;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	107;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	104;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	97;"	d
PCI_SUBCLASS	kern/pcireg.h	127;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	218;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	219;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	213;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	216;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	217;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	226;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	228;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	225;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	223;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	227;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	293;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	294;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	292;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	300;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	301;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	299;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	298;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	193;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	194;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	191;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	192;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	247;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	248;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	282;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	243;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	241;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	242;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	126;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	176;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	178;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	175;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	177;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	204;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	205;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	203;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	198;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	197;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	185;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	188;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	187;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	182;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	186;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	167;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	168;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	251;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	254;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	257;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	256;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	255;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	287;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	289;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	286;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	288;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	269;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	266;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	267;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	268;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	125;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	236;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	235;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	234;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	233;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	277;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	278;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	276;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	279;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	274;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	411;"	d
PCI_VENDOR	kern/pcireg.h	59;"	d
PCI_VENDOR_ID	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	58;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	57;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	661;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	666;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	663;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	670;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	672;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	669;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	673;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	447;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	445;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	446;"	d
PCI_VPD_DATAREG	kern/pcireg.h	449;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	450;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon41	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon41	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon41	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon41	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon41	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon41	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon41	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	36;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	137;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon39
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon39
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon39
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon39
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon39
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon39
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon39
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon41	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	81;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	246;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	240;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	24;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	19;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	196;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon6
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon6
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon6
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon6
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon6
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon6
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon6
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon6
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon6
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon6
SYS_packet_try_send	inc/syscall.h	/^	SYS_packet_try_send,$/;"	e	enum:__anon6
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon6
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon6
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon6
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon6
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon6
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	45;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	46;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	44;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	34;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	17;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TX_MAX	kern/e1000.h	26;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	116;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon38	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	16;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	95;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	195;"	d	file:
X1	kern/lapic.c	35;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	37;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultio.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnfaultio.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon17
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon24	typeref:struct:netifapi_msg_msg::__anon24::__anon25
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	kern/e1000.h	/^	uint64_t addr;   \/\/Address of the transmit descriptor in the host memory$/;"	m	struct:tx_desc
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^	addr = (void *)ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/net/ns.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr	obj/net/testinput.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/net/testoutput.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/primespipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/sendpage.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/sh.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr	obj/user/testshell.asm	/^	addr = ROUNDDOWN(addr, PGSIZE); \/\/这里也是没想到$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon14::__anon18
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon29	typeref:struct:tcpip_msg::__anon29::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon29::__anon32
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnfaultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnfaultio.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon14::__anon21
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 16;$/;"	d
base	obj/user/faultio.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 16;$/;"	d
base	obj/user/spawnfaultio.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon16
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnfaultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon40
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnfaultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buffer	kern/e1000.h	/^	char buffer[2048];$/;"	m	struct:packets
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary(主要的) bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnfaultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon29	typeref:struct:tcpip_msg::__anon29::__anon31
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnfaultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultio.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnfaultio.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0 所有字节之和必须为0 ？？？$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0 校验和$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnfaultio.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnfaultio.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000.h	/^	uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnfaultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR); \/\/memmove的参数得是虚拟地址$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon24	typeref:struct:netifapi_msg_msg::__anon24::__anon26
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon8	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnfaultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnfaultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon33::__anon34	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^	uint8_t cso;$/;"	m	struct:tx_desc
css	kern/e1000.h	/^	uint8_t css; \/\/The Checksum start field (TDESC.CSS) indicates where to begin computing the checksum. $/;"	m	struct:tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon43
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon43	typeref:struct:cstate::__anon43::ip
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon29::__anon31
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultio.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnfaultio.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon44
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon14::__anon18
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultio.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnfaultio.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st) \/\/stat状态？什么叫stat？$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon40
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^ dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnfaultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000_init	kern/e1000.c	/^e1000_init(struct pci_func *pcif)$/;"	f
e1000_print_status	kern/e1000.h	5;"	d
e1000_transmit_init	kern/e1000.c	/^e1000_transmit_init(){$/;"	f
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnfaultio.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^			env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultio.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnfaultio.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + ELF_Header->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultio.asm	/^				err = -err;$/;"	d
err	obj/user/faultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultio.asm	/^    err:$/;"	l
err	obj/user/faultio.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnfaultio.asm	/^				err = -err;$/;"	d
err	obj/user/spawnfaultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^    err:$/;"	l
err	obj/user/spawnfaultio.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultio.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnfaultio.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultio.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnfaultio.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultio.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnfaultio.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnfaultio.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon24::__anon26
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon29::__anon31
f	obj/fs/fs.asm	/^		f = (struct File*) blk; \/\/blk可以指向空块，也可以指向有文件内容的块$/;"	d
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 b0 00 00 00       	call   f01000ee <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	53                   	push   %ebx$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	68 60 6a 10 f0       	push   $0xf0106a60$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	e8 37 37 00 00       	call   f010378c <cprintf>$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	85 db                	test   %ebx,%ebx$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	7e 11                	jle    f010006d <test_backtrace+0x2d>$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	50                   	push   %eax$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 d8 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	83 c4 10             	add    $0x10,%esp$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	eb 11                	jmp    f010007e <test_backtrace+0x3e>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	6a 00                	push   $0x0$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	6a 00                	push   $0x0$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	6a 00                	push   $0x0$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	e8 b2 08 00 00       	call   f010092d <mon_backtrace>$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	53                   	push   %ebx$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	68 7c 6a 10 f0       	push   $0xf0106a7c$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 00 37 00 00       	call   f010378c <cprintf>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c9                   	leave  $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	c3                   	ret    $/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094 <_panic>:$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	55                   	push   %ebp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 e5                	mov    %esp,%ebp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	56                   	push   %esi$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	53                   	push   %ebx$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	83 3d 8c ce 2a f0 00 	cmpl   $0x0,0xf02ace8c$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	75 3a                	jne    f01000df <_panic+0x4b>$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	89 35 8c ce 2a f0    	mov    %esi,0xf02ace8c$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	fa                   	cli    $/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	fc                   	cld    $/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	e8 b5 5b 00 00       	call   f0105c6a <cpunum>$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	50                   	push   %eax$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	68 04 6b 10 f0       	push   $0xf0106b04$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	e8 c6 36 00 00       	call   f010378c <cprintf>$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	53                   	push   %ebx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	56                   	push   %esi$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	e8 96 36 00 00       	call   f0103766 <vcprintf>$/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	c7 04 24 f5 7c 10 f0 	movl   $0xf0107cf5,(%esp)$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	e8 b0 36 00 00       	call   f010378c <cprintf>$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	6a 00                	push   $0x0$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	e8 e7 08 00 00       	call   f01009d0 <monitor>$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	eb f1                	jmp    f01000df <_panic+0x4b>$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee <i386_init>:$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	55                   	push   %ebp$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	53                   	push   %ebx$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	e8 c3 05 00 00       	call   f01006bd <cons_init>$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	68 97 6a 10 f0       	push   $0xf0106a97$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	e8 80 36 00 00       	call   f010378c <cprintf>$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	e8 89 12 00 00       	call   f010139a <mem_init>$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	e8 8e 2e 00 00       	call   f0102fa4 <env_init>$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	e8 53 37 00 00       	call   f010386e <trap_init>$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	e8 40 58 00 00       	call   f0105960 <mp_init>$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	e8 60 5b 00 00       	call   f0105c85 <lapic_init>$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	e8 73 35 00 00       	call   f010369d <pic_init>$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	e8 39 66 00 00       	call   f0106768 <time_init>$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	e8 14 66 00 00       	call   f0106748 <pci_init>$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	c7 04 24 c0 33 12 f0 	movl   $0xf01233c0,(%esp)$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	e8 98 5d 00 00       	call   f0105ed8 <spin_lock>$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	83 3d c0 d2 2c f0 07 	cmpl   $0x7,0xf02cd2c0$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	77 19                	ja     f0100165 <i386_init+0x77>$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	68 90 00 00 00       	push   $0x90$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	68 b2 6a 10 f0       	push   $0xf0106ab2$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	e8 2f ff ff ff       	call   f0100094 <_panic>$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	b8 c6 58 10 f0       	mov    $0xf01058c6,%eax$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	2d 4c 58 10 f0       	sub    $0xf010584c,%eax$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	50                   	push   %eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	68 4c 58 10 f0       	push   $0xf010584c$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	e8 12 55 00 00       	call   f0105694 <memmove>$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	bb 20 e0 2c f0       	mov    $0xf02ce020,%ebx$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	eb 5b                	jmp    f01001e7 <i386_init+0xf9>$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	e8 d9 5a 00 00       	call   f0105c6a <cpunum>$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	39 c3                	cmp    %eax,%ebx$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	74 47                	je     f01001e4 <i386_init+0xf6>$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	89 d8                	mov    %ebx,%eax$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	2d 20 e0 2c f0       	sub    $0xf02ce020,%eax$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	05 00 70 2d f0       	add    $0xf02d7000,%eax$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	a3 90 ce 2a f0       	mov    %eax,0xf02ace90$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	50                   	push   %eax$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	68 be 6a 10 f0       	push   $0xf0106abe$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	e8 c4 35 00 00       	call   f010378c <cprintf>$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	68 00 70 00 00       	push   $0x7000$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	50                   	push   %eax$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	e8 fa 5b 00 00       	call   f0105dd3 <lapic_startap>$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	75 f8                	jne    f01001dc <i386_init+0xee>$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	6b 05 c4 e3 2c f0 74 	imul   $0x74,0xf02ce3c4,%eax$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	72 95                	jb     f010018c <i386_init+0x9e>$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	6a 01                	push   $0x1$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	68 b8 c2 1d f0       	push   $0xf01dc2b8$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	e8 72 2f 00 00       	call   f0103178 <env_create>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	6a 02                	push   $0x2$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	68 d0 38 23 f0       	push   $0xf02338d0$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	e8 63 2f 00 00       	call   f0103178 <env_create>$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	6a 00                	push   $0x0$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	68 74 61 1d f0       	push   $0xf01d6174$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	e8 54 2f 00 00       	call   f0103178 <env_create>$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	e8 38 04 00 00       	call   f0100661 <kbd_intr>$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	e8 5c 41 00 00       	call   f010438a <sched_yield>$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e <mp_main>:$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	55                   	push   %ebp$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	77 15                	ja     f0100255 <mp_main+0x27>$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	50                   	push   %eax$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	68 a9 00 00 00       	push   $0xa9$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	68 b2 6a 10 f0       	push   $0xf0106ab2$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	e8 3f fe ff ff       	call   f0100094 <_panic>$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	e8 08 5a 00 00       	call   f0105c6a <cpunum>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	50                   	push   %eax$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	68 d3 6a 10 f0       	push   $0xf0106ad3$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	e8 1c 35 00 00       	call   f010378c <cprintf>$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	e8 10 5a 00 00       	call   f0105c85 <lapic_init>$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	e8 fa 2c 00 00       	call   f0102f74 <env_init_percpu>$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	e8 21 35 00 00       	call   f01037a0 <trap_init_percpu>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	e8 e6 59 00 00       	call   f0105c6a <cpunum>$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	81 c2 20 e0 2c f0    	add    $0xf02ce020,%edx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	c7 04 24 c0 33 12 f0 	movl   $0xf01233c0,(%esp)$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	e8 36 5c 00 00       	call   f0105ed8 <spin_lock>$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	e8 e3 40 00 00       	call   f010438a <sched_yield>$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7 <_warn>:$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	55                   	push   %ebp$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	53                   	push   %ebx$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	68 e9 6a 10 f0       	push   $0xf0106ae9$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	e8 cb 34 00 00       	call   f010378c <cprintf>$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	53                   	push   %ebx$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	e8 99 34 00 00       	call   f0103766 <vcprintf>$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	c7 04 24 f5 7c 10 f0 	movl   $0xf0107cf5,(%esp)$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	e8 b3 34 00 00       	call   f010378c <cprintf>$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	c9                   	leave  $/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	c3                   	ret    $/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1 <serial_proc_data>:$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	55                   	push   %ebp$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	ec                   	in     (%dx),%al$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	a8 01                	test   $0x1,%al$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	74 0b                	je     f01002f9 <serial_proc_data+0x18>$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	ec                   	in     (%dx),%al$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	eb 05                	jmp    f01002fe <serial_proc_data+0x1d>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	5d                   	pop    %ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	c3                   	ret    $/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300 <cons_intr>:$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	55                   	push   %ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	89 e5                	mov    %esp,%ebp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	53                   	push   %ebx$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	89 c3                	mov    %eax,%ebx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	eb 2b                	jmp    f0100336 <cons_intr+0x36>$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	85 c0                	test   %eax,%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	74 27                	je     f0100336 <cons_intr+0x36>$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	8b 0d 24 c2 2a f0    	mov    0xf02ac224,%ecx$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	89 15 24 c2 2a f0    	mov    %edx,0xf02ac224$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	88 81 20 c0 2a f0    	mov    %al,-0xfd53fe0(%ecx)$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	75 0a                	jne    f0100336 <cons_intr+0x36>$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	c7 05 24 c2 2a f0 00 	movl   $0x0,0xf02ac224$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	00 00 00 $/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	ff d3                	call   *%ebx$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	75 ce                	jne    f010030b <cons_intr+0xb>$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	5b                   	pop    %ebx$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	5d                   	pop    %ebp$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	c3                   	ret    $/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343 <kbd_proc_data>:$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	ec                   	in     (%dx),%al$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	a8 01                	test   $0x1,%al$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	0f 84 f8 00 00 00    	je     f0100449 <kbd_proc_data+0x106>$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	a8 20                	test   $0x20,%al$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	0f 85 f6 00 00 00    	jne    f010044f <kbd_proc_data+0x10c>$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	ec                   	in     (%dx),%al$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	89 c2                	mov    %eax,%edx$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	75 0d                	jne    f0100372 <kbd_proc_data+0x2f>$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	83 0d 00 c0 2a f0 40 	orl    $0x40,0xf02ac000$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	c3                   	ret    $/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	55                   	push   %ebp$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 e5                	mov    %esp,%ebp$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	53                   	push   %ebx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	84 c0                	test   %al,%al$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	79 36                	jns    f01003b3 <kbd_proc_data+0x70>$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	8b 0d 00 c0 2a f0    	mov    0xf02ac000,%ecx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	85 db                	test   %ebx,%ebx$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	0f b6 82 c0 6c 10 f0 	movzbl -0xfef9340(%edx),%eax$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	83 c8 40             	or     $0x40,%eax$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	f7 d0                	not    %eax$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	21 c8                	and    %ecx,%eax$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	a3 00 c0 2a f0       	mov    %eax,0xf02ac000$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	e9 a4 00 00 00       	jmp    f0100457 <kbd_proc_data+0x114>$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	8b 0d 00 c0 2a f0    	mov    0xf02ac000,%ecx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	74 0e                	je     f01003cc <kbd_proc_data+0x89>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	89 c2                	mov    %eax,%edx$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	89 0d 00 c0 2a f0    	mov    %ecx,0xf02ac000$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	0f b6 82 c0 6c 10 f0 	movzbl -0xfef9340(%edx),%eax$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	0b 05 00 c0 2a f0    	or     0xf02ac000,%eax$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	0f b6 8a c0 6b 10 f0 	movzbl -0xfef9440(%edx),%ecx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	31 c8                	xor    %ecx,%eax$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	a3 00 c0 2a f0       	mov    %eax,0xf02ac000$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	89 c1                	mov    %eax,%ecx$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	8b 0c 8d a0 6b 10 f0 	mov    -0xfef9460(,%ecx,4),%ecx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	a8 08                	test   $0x8,%al$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	74 1b                	je     f010041c <kbd_proc_data+0xd9>$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	89 da                	mov    %ebx,%edx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	77 05                	ja     f0100410 <kbd_proc_data+0xcd>$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	eb 0c                	jmp    f010041c <kbd_proc_data+0xd9>$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	f7 d0                	not    %eax$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	a8 06                	test   $0x6,%al$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	75 33                	jne    f0100455 <kbd_proc_data+0x112>$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	75 2b                	jne    f0100455 <kbd_proc_data+0x112>$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	68 70 6b 10 f0       	push   $0xf0106b70$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	e8 55 33 00 00       	call   f010378c <cprintf>$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	ee                   	out    %al,(%dx)$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	89 d8                	mov    %ebx,%eax$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	eb 0e                	jmp    f0100457 <kbd_proc_data+0x114>$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	c3                   	ret    $/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	c3                   	ret    $/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	89 d8                	mov    %ebx,%eax$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	c9                   	leave  $/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	c3                   	ret    $/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c <cons_putc>:$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	55                   	push   %ebp$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	89 e5                	mov    %esp,%ebp$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	57                   	push   %edi$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	56                   	push   %esi$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	53                   	push   %ebx$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	89 c7                	mov    %eax,%edi$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	eb 09                	jmp    f0100481 <cons_putc+0x25>$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	89 ca                	mov    %ecx,%edx$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	ec                   	in     (%dx),%al$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	ec                   	in     (%dx),%al$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	ec                   	in     (%dx),%al$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	ec                   	in     (%dx),%al$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	89 f2                	mov    %esi,%edx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	ec                   	in     (%dx),%al$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	a8 20                	test   $0x20,%al$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	75 08                	jne    f0100490 <cons_putc+0x34>$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	7e e8                	jle    f0100478 <cons_putc+0x1c>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	89 f8                	mov    %edi,%eax$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	ee                   	out    %al,(%dx)$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	eb 09                	jmp    f01004b5 <cons_putc+0x59>$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 ca                	mov    %ecx,%edx$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	ec                   	in     (%dx),%al$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	ec                   	in     (%dx),%al$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	ec                   	in     (%dx),%al$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	ec                   	in     (%dx),%al$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	89 f2                	mov    %esi,%edx$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	ec                   	in     (%dx),%al$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	7f 04                	jg     f01004c4 <cons_putc+0x68>$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	84 c0                	test   %al,%al$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	79 e8                	jns    f01004ac <cons_putc+0x50>$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	ee                   	out    %al,(%dx)$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	ee                   	out    %al,(%dx)$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	ee                   	out    %al,(%dx)$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	89 fa                	mov    %edi,%edx$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	89 f8                	mov    %edi,%eax$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	85 d2                	test   %edx,%edx$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	89 f8                	mov    %edi,%eax$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	74 74                	je     f010056f <cons_putc+0x113>$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	7f 0a                	jg     f010050a <cons_putc+0xae>$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	74 14                	je     f0100519 <cons_putc+0xbd>$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	e9 99 00 00 00       	jmp    f01005a3 <cons_putc+0x147>$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	74 3a                	je     f0100549 <cons_putc+0xed>$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	74 3d                	je     f0100551 <cons_putc+0xf5>$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	e9 8a 00 00 00       	jmp    f01005a3 <cons_putc+0x147>$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	0f b7 05 28 c2 2a f0 	movzwl 0xf02ac228,%eax$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	66 85 c0             	test   %ax,%ax$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	0f 84 e6 00 00 00    	je     f010060f <cons_putc+0x1b3>$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	66 a3 28 c2 2a f0    	mov    %ax,0xf02ac228$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	83 cf 20             	or     $0x20,%edi$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	8b 15 2c c2 2a f0    	mov    0xf02ac22c,%edx$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	eb 78                	jmp    f01005c1 <cons_putc+0x165>$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	66 83 05 28 c2 2a f0 	addw   $0x50,0xf02ac228$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	50 $/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	0f b7 05 28 c2 2a f0 	movzwl 0xf02ac228,%eax$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	66 a3 28 c2 2a f0    	mov    %ax,0xf02ac228$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	eb 52                	jmp    f01005c1 <cons_putc+0x165>$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	e8 e3 fe ff ff       	call   f010045c <cons_putc>$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	e8 d9 fe ff ff       	call   f010045c <cons_putc>$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	e8 cf fe ff ff       	call   f010045c <cons_putc>$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	e8 c5 fe ff ff       	call   f010045c <cons_putc>$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	e8 bb fe ff ff       	call   f010045c <cons_putc>$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	eb 1e                	jmp    f01005c1 <cons_putc+0x165>$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	0f b7 05 28 c2 2a f0 	movzwl 0xf02ac228,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	66 89 15 28 c2 2a f0 	mov    %dx,0xf02ac228$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	8b 15 2c c2 2a f0    	mov    0xf02ac22c,%edx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	66 81 3d 28 c2 2a f0 	cmpw   $0x7cf,0xf02ac228$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	cf 07 $/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	76 43                	jbe    f010060f <cons_putc+0x1b3>$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	a1 2c c2 2a f0       	mov    0xf02ac22c,%eax$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	52                   	push   %edx$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	50                   	push   %eax$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	e8 ae 50 00 00       	call   f0105694 <memmove>$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	8b 15 2c c2 2a f0    	mov    0xf02ac22c,%edx$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	39 d0                	cmp    %edx,%eax$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	75 f4                	jne    f01005fb <cons_putc+0x19f>$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	66 83 2d 28 c2 2a f0 	subw   $0x50,0xf02ac228$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	50 $/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	8b 0d 30 c2 2a f0    	mov    0xf02ac230,%ecx$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	89 ca                	mov    %ecx,%edx$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	ee                   	out    %al,(%dx)$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	0f b7 1d 28 c2 2a f0 	movzwl 0xf02ac228,%ebx$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	89 d8                	mov    %ebx,%eax$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	89 f2                	mov    %esi,%edx$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	ee                   	out    %al,(%dx)$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	89 ca                	mov    %ecx,%edx$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	ee                   	out    %al,(%dx)$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	89 d8                	mov    %ebx,%eax$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	89 f2                	mov    %esi,%edx$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	ee                   	out    %al,(%dx)$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	5b                   	pop    %ebx$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	5e                   	pop    %esi$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	5f                   	pop    %edi$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	5d                   	pop    %ebp$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	c3                   	ret    $/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645 <serial_intr>:$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	80 3d 34 c2 2a f0 00 	cmpb   $0x0,0xf02ac234$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	74 11                	je     f010065f <serial_intr+0x1a>$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	55                   	push   %ebp$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	b8 e1 02 10 f0       	mov    $0xf01002e1,%eax$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	e8 a2 fc ff ff       	call   f0100300 <cons_intr>$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	c9                   	leave  $/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	f3 c3                	repz ret $/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661 <kbd_intr>:$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	55                   	push   %ebp$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	89 e5                	mov    %esp,%ebp$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	b8 43 03 10 f0       	mov    $0xf0100343,%eax$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	e8 8f fc ff ff       	call   f0100300 <cons_intr>$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	c9                   	leave  $/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	c3                   	ret    $/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673 <cons_getc>:$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	55                   	push   %ebp$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	89 e5                	mov    %esp,%ebp$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	e8 c7 ff ff ff       	call   f0100645 <serial_intr>$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	e8 de ff ff ff       	call   f0100661 <kbd_intr>$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	a1 20 c2 2a f0       	mov    0xf02ac220,%eax$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	3b 05 24 c2 2a f0    	cmp    0xf02ac224,%eax$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	74 26                	je     f01006b6 <cons_getc+0x43>$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	89 15 20 c2 2a f0    	mov    %edx,0xf02ac220$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	0f b6 88 20 c0 2a f0 	movzbl -0xfd53fe0(%eax),%ecx$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	89 c8                	mov    %ecx,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	75 11                	jne    f01006bb <cons_getc+0x48>$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	c7 05 20 c2 2a f0 00 	movl   $0x0,0xf02ac220$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	00 00 00 $/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	eb 05                	jmp    f01006bb <cons_getc+0x48>$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	c9                   	leave  $/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	c3                   	ret    $/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd <cons_init>:$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	55                   	push   %ebp$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	57                   	push   %edi$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	56                   	push   %esi$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	53                   	push   %ebx$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	5a a5 $/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	74 11                	je     f01006f4 <cons_init+0x37>$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	c7 05 30 c2 2a f0 b4 	movl   $0x3b4,0xf02ac230$/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	03 00 00 $/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	eb 16                	jmp    f010070a <cons_init+0x4d>$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	c7 05 30 c2 2a f0 d4 	movl   $0x3d4,0xf02ac230$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	03 00 00 $/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	8b 3d 30 c2 2a f0    	mov    0xf02ac230,%edi$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	89 fa                	mov    %edi,%edx$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	ee                   	out    %al,(%dx)$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	89 da                	mov    %ebx,%edx$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	ec                   	in     (%dx),%al$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	89 fa                	mov    %edi,%edx$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ee                   	out    %al,(%dx)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	89 da                	mov    %ebx,%edx$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	ec                   	in     (%dx),%al$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	89 35 2c c2 2a f0    	mov    %esi,0xf02ac22c$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	09 c8                	or     %ecx,%eax$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	66 a3 28 c2 2a f0    	mov    %ax,0xf02ac228$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	e8 1c ff ff ff       	call   f0100661 <kbd_intr>$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	50                   	push   %eax$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	e8 cb 2e 00 00       	call   f0103625 <irq_setmask_8259A>$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	89 f2                	mov    %esi,%edx$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	ee                   	out    %al,(%dx)$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	ee                   	out    %al,(%dx)$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	89 da                	mov    %ebx,%edx$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	ee                   	out    %al,(%dx)$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	ee                   	out    %al,(%dx)$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	ee                   	out    %al,(%dx)$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	ee                   	out    %al,(%dx)$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	ee                   	out    %al,(%dx)$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	ec                   	in     (%dx),%al$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	89 c1                	mov    %eax,%ecx$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	3c ff                	cmp    $0xff,%al$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	0f 95 05 34 c2 2a f0 	setne  0xf02ac234$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	89 f2                	mov    %esi,%edx$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	ec                   	in     (%dx),%al$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	89 da                	mov    %ebx,%edx$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	ec                   	in     (%dx),%al$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	74 21                	je     f01007eb <cons_init+0x12e>$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	50                   	push   %eax$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	e8 46 2e 00 00       	call   f0103625 <irq_setmask_8259A>$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	80 3d 34 c2 2a f0 00 	cmpb   $0x0,0xf02ac234$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	75 10                	jne    f01007fb <cons_init+0x13e>$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	68 7c 6b 10 f0       	push   $0xf0106b7c$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	e8 94 2f 00 00       	call   f010378c <cprintf>$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	5b                   	pop    %ebx$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	5e                   	pop    %esi$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	5f                   	pop    %edi$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	5d                   	pop    %ebp$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	c3                   	ret    $/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803 <cputchar>:$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	55                   	push   %ebp$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	89 e5                	mov    %esp,%ebp$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	e8 4b fc ff ff       	call   f010045c <cons_putc>$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	c9                   	leave  $/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	c3                   	ret    $/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813 <getchar>:$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	55                   	push   %ebp$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	89 e5                	mov    %esp,%ebp$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	e8 55 fe ff ff       	call   f0100673 <cons_getc>$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	85 c0                	test   %eax,%eax$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	74 f7                	je     f0100819 <getchar+0x6>$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	c9                   	leave  $/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	c3                   	ret    $/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824 <iscons>:$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	55                   	push   %ebp$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	89 e5                	mov    %esp,%ebp$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	5d                   	pop    %ebp$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	c3                   	ret    $/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e <mon_help>:$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	55                   	push   %ebp$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	68 c0 6d 10 f0       	push   $0xf0106dc0$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	68 de 6d 10 f0       	push   $0xf0106dde$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	68 e3 6d 10 f0       	push   $0xf0106de3$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	e8 44 2f 00 00       	call   f010378c <cprintf>$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	68 b4 6e 10 f0       	push   $0xf0106eb4$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	68 ec 6d 10 f0       	push   $0xf0106dec$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	68 e3 6d 10 f0       	push   $0xf0106de3$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	e8 2d 2f 00 00       	call   f010378c <cprintf>$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	68 f5 6d 10 f0       	push   $0xf0106df5$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	68 09 6e 10 f0       	push   $0xf0106e09$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	68 e3 6d 10 f0       	push   $0xf0106de3$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	e8 16 2f 00 00       	call   f010378c <cprintf>$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	c9                   	leave  $/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	c3                   	ret    $/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d <mon_kerninfo>:$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	55                   	push   %ebp$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	68 13 6e 10 f0       	push   $0xf0106e13$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	e8 ff 2e 00 00       	call   f010378c <cprintf>$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	68 dc 6e 10 f0       	push   $0xf0106edc$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	e8 ed 2e 00 00       	call   f010378c <cprintf>$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	68 04 6f 10 f0       	push   $0xf0106f04$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	e8 d6 2e 00 00       	call   f010378c <cprintf>$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	68 41 6a 10 00       	push   $0x106a41$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	68 41 6a 10 f0       	push   $0xf0106a41$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	68 28 6f 10 f0       	push   $0xf0106f28$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	e8 bf 2e 00 00       	call   f010378c <cprintf>$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	68 00 c0 2a 00       	push   $0x2ac000$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	68 00 c0 2a f0       	push   $0xf02ac000$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	68 4c 6f 10 f0       	push   $0xf0106f4c$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	e8 a8 2e 00 00       	call   f010378c <cprintf>$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	68 08 f0 30 00       	push   $0x30f008$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	68 08 f0 30 f0       	push   $0xf030f008$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	68 70 6f 10 f0       	push   $0xf0106f70$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	e8 91 2e 00 00       	call   f010378c <cprintf>$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	b8 07 f4 30 f0       	mov    $0xf030f407,%eax$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	85 c0                	test   %eax,%eax$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	50                   	push   %eax$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	68 94 6f 10 f0       	push   $0xf0106f94$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	e8 66 2e 00 00       	call   f010378c <cprintf>$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	c9                   	leave  $/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	c3                   	ret    $/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d <mon_backtrace>:$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	55                   	push   %ebp$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	57                   	push   %edi$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	56                   	push   %esi$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	53                   	push   %ebx$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	68 2c 6e 10 f0       	push   $0xf0106e2c$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	e8 4c 2e 00 00       	call   f010378c <cprintf>$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	89 ee                	mov    %ebp,%esi$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	eb 78                	jmp    f01009bf <mon_backtrace+0x92>$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	8d 5e 04             	lea    0x4(%esi),%ebx$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	89 c7                	mov    %eax,%edi$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	52                   	push   %edx$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	50                   	push   %eax$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	e8 e2 41 00 00       	call   f0104b41 <debuginfo_eip>$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	57                   	push   %edi$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	56                   	push   %esi$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	68 3e 6e 10 f0       	push   $0xf0106e3e$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	e8 1e 2e 00 00       	call   f010378c <cprintf>$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	8d 7e 18             	lea    0x18(%esi),%edi$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	ff 33                	pushl  (%ebx)$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	68 58 6e 10 f0       	push   $0xf0106e58$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	e8 06 2e 00 00       	call   f010378c <cprintf>$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	39 df                	cmp    %ebx,%edi$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	75 e7                	jne    f0100974 <mon_backtrace+0x47>$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	50                   	push   %eax$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	68 5e 6e 10 f0       	push   $0xf0106e5e$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	e8 df 2d 00 00       	call   f010378c <cprintf>$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	83 c4 14             	add    $0x14,%esp$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	68 f5 7c 10 f0       	push   $0xf0107cf5$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	e8 d2 2d 00 00       	call   f010378c <cprintf>$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	8b 36                	mov    (%esi),%esi$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	85 f6                	test   %esi,%esi$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	75 84                	jne    f0100947 <mon_backtrace+0x1a>$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	5b                   	pop    %ebx$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	5e                   	pop    %esi$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	5f                   	pop    %edi$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	5d                   	pop    %ebp$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	c3                   	ret    $/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0 <monitor>:$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	55                   	push   %ebp$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	57                   	push   %edi$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	56                   	push   %esi$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	53                   	push   %ebx$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	68 c0 6f 10 f0       	push   $0xf0106fc0$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	e8 a9 2d 00 00       	call   f010378c <cprintf>$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	c7 04 24 e4 6f 10 f0 	movl   $0xf0106fe4,(%esp)$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	e8 9d 2d 00 00       	call   f010378c <cprintf>$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	83 c4 08             	add    $0x8,%esp$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	6a 0a                	push   $0xa$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	68 6e 6e 10 f0       	push   $0xf0106e6e$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	e8 9f 57 00 00       	call   f010619d <transmit_packets>$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	74 0e                	je     f0100a15 <monitor+0x45>$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	e8 2a 33 00 00       	call   f0103d3c <print_trapframe>$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	68 77 6e 10 f0       	push   $0xf0106e77$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	e8 b6 49 00 00       	call   f01053d8 <readline>$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	85 c0                	test   %eax,%eax$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	74 ea                	je     f0100a15 <monitor+0x45>$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	eb 0a                	jmp    f0100a43 <monitor+0x73>$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	89 f7                	mov    %esi,%edi$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	89 fe                	mov    %edi,%esi$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	84 c0                	test   %al,%al$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	74 63                	je     f0100aad <monitor+0xdd>$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	50                   	push   %eax$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	68 7b 6e 10 f0       	push   $0xf0106e7b$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	e8 af 4b 00 00       	call   f010560a <strchr>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	85 c0                	test   %eax,%eax$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	75 d7                	jne    f0100a39 <monitor+0x69>$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	74 46                	je     f0100aad <monitor+0xdd>$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	75 14                	jne    f0100a80 <monitor+0xb0>$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	6a 10                	push   $0x10$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	68 80 6e 10 f0       	push   $0xf0106e80$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	e8 11 2d 00 00       	call   f010378c <cprintf>$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	eb 95                	jmp    f0100a15 <monitor+0x45>$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	eb 03                	jmp    f0100a8c <monitor+0xbc>$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	84 c0                	test   %al,%al$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	74 ae                	je     f0100a41 <monitor+0x71>$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	50                   	push   %eax$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	68 7b 6e 10 f0       	push   $0xf0106e7b$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	e8 66 4b 00 00       	call   f010560a <strchr>$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	85 c0                	test   %eax,%eax$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	74 de                	je     f0100a89 <monitor+0xb9>$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	eb 94                	jmp    f0100a41 <monitor+0x71>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	00 $/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	85 f6                	test   %esi,%esi$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	0f 84 58 ff ff ff    	je     f0100a15 <monitor+0x45>$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	ff 34 85 20 70 10 f0 	pushl  -0xfef8fe0(,%eax,4)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	e8 d5 4a 00 00       	call   f01055ac <strcmp>$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	85 c0                	test   %eax,%eax$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	75 21                	jne    f0100aff <monitor+0x12f>$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	52                   	push   %edx$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	56                   	push   %esi$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	ff 14 85 28 70 10 f0 	call   *-0xfef8fd8(,%eax,4)$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	85 c0                	test   %eax,%eax$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	78 25                	js     f0100b1f <monitor+0x14f>$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	e9 16 ff ff ff       	jmp    f0100a15 <monitor+0x45>$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	75 bb                	jne    f0100ac2 <monitor+0xf2>$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	68 9d 6e 10 f0       	push   $0xf0106e9d$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	e8 75 2c 00 00       	call   f010378c <cprintf>$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	e9 f6 fe ff ff       	jmp    f0100a15 <monitor+0x45>$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	5b                   	pop    %ebx$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	5e                   	pop    %esi$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	5f                   	pop    %edi$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	5d                   	pop    %ebp$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	c3                   	ret    $/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27 <boot_alloc>:$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	55                   	push   %ebp$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	83 3d 38 c2 2a f0 00 	cmpl   $0x0,0xf02ac238$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	75 11                	jne    f0100b44 <boot_alloc+0x1d>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	ba 07 00 31 f0       	mov    $0xf0310007,%edx$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	89 15 38 c2 2a f0    	mov    %edx,0xf02ac238$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	8b 0d 38 c2 2a f0    	mov    0xf02ac238,%ecx$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	8d 94 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%edx$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	89 15 38 c2 2a f0    	mov    %edx,0xf02ac238$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	89 c8                	mov    %ecx,%eax$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	5d                   	pop    %ebp$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	c3                   	ret    $/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61 <nvram_read>:$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	55                   	push   %ebp$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	56                   	push   %esi$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	53                   	push   %ebx$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	50                   	push   %eax$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	e8 86 2a 00 00       	call   f01035f7 <mc146818_read>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	89 c6                	mov    %eax,%esi$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	e8 79 2a 00 00       	call   f01035f7 <mc146818_read>$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	09 f0                	or     %esi,%eax$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	5b                   	pop    %ebx$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	5e                   	pop    %esi$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	5d                   	pop    %ebp$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c3                   	ret    $/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a <check_va2pa>:$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	89 d1                	mov    %edx,%ecx$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	a8 01                	test   $0x1,%al$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	74 52                	je     f0100be8 <check_va2pa+0x5e>$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	3b 0d c0 d2 2c f0    	cmp    0xf02cd2c0,%ecx$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	72 1b                	jb     f0100bc3 <check_va2pa+0x39>$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	55                   	push   %ebp$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	50                   	push   %eax$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	68 a6 03 00 00       	push   $0x3a6$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	e8 d1 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	89 c2                	mov    %eax,%edx$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	85 d2                	test   %edx,%edx$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	c3                   	ret    $/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	c3                   	ret    $/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee <check_page_free_list>:$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	55                   	push   %ebp$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	57                   	push   %edi$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	56                   	push   %esi$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	53                   	push   %ebx$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	84 c0                	test   %al,%al$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	0f 85 a0 02 00 00    	jne    f0100e9f <check_page_free_list+0x2b1>$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	e9 ad 02 00 00       	jmp    f0100eb1 <check_page_free_list+0x2c3>$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	68 44 70 10 f0       	push   $0xf0107044$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	68 d6 02 00 00       	push   $0x2d6$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	e8 79 f4 ff ff       	call   f0100094 <_panic>$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	89 c2                	mov    %eax,%edx$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	0f 95 c2             	setne  %dl$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	85 c0                	test   %eax,%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	75 dc                	jne    f0100c27 <check_page_free_list+0x39>$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	89 10                	mov    %edx,(%eax)$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	a3 40 c2 2a f0       	mov    %eax,0xf02ac240$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	8b 1d 40 c2 2a f0    	mov    0xf02ac240,%ebx$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	eb 53                	jmp    f0100cc4 <check_page_free_list+0xd6>$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	89 c2                	mov    %eax,%edx$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	39 f2                	cmp    %esi,%edx$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	73 3a                	jae    f0100cc2 <check_page_free_list+0xd4>$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	89 c2                	mov    %eax,%edx$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	72 12                	jb     f0100ca7 <check_page_free_list+0xb9>$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	50                   	push   %eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	6a 58                	push   $0x58$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	e8 ed f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	68 80 00 00 00       	push   $0x80$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	68 97 00 00 00       	push   $0x97$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	50                   	push   %eax$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	e8 88 49 00 00       	call   f0105647 <memset>$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	85 db                	test   %ebx,%ebx$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	75 a9                	jne    f0100c71 <check_page_free_list+0x83>$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	e8 55 fe ff ff       	call   f0100b27 <boot_alloc>$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	8b 15 40 c2 2a f0    	mov    0xf02ac240,%edx$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	8b 0d c8 d2 2c f0    	mov    0xf02cd2c8,%ecx$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	a1 c0 d2 2c f0       	mov    0xf02cd2c0,%eax$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	e9 52 01 00 00       	jmp    f0100e4e <check_page_free_list+0x260>$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	73 19                	jae    f0100d19 <check_page_free_list+0x12b>$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	68 ab 79 10 f0       	push   $0xf01079ab$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	68 f0 02 00 00       	push   $0x2f0$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	e8 7b f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	72 19                	jb     f0100d37 <check_page_free_list+0x149>$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	68 cc 79 10 f0       	push   $0xf01079cc$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	68 f1 02 00 00       	push   $0x2f1$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	e8 5d f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	89 d0                	mov    %edx,%eax$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	a8 07                	test   $0x7,%al$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	74 19                	je     f0100d59 <check_page_free_list+0x16b>$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	68 68 70 10 f0       	push   $0xf0107068$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	68 f2 02 00 00       	push   $0x2f2$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	e8 3b f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	85 c0                	test   %eax,%eax$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	75 19                	jne    f0100d7c <check_page_free_list+0x18e>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	68 e0 79 10 f0       	push   $0xf01079e0$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	68 f5 02 00 00       	push   $0x2f5$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	e8 18 f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	75 19                	jne    f0100d9c <check_page_free_list+0x1ae>$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	68 f1 79 10 f0       	push   $0xf01079f1$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	68 f6 02 00 00       	push   $0x2f6$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	e8 f8 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	75 19                	jne    f0100dbc <check_page_free_list+0x1ce>$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	68 9c 70 10 f0       	push   $0xf010709c$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	68 f7 02 00 00       	push   $0x2f7$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	e8 d8 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	75 19                	jne    f0100ddc <check_page_free_list+0x1ee>$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	68 0a 7a 10 f0       	push   $0xf0107a0a$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	68 f8 02 00 00       	push   $0x2f8$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	e8 b8 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	0f 86 f1 00 00 00    	jbe    f0100ed8 <check_page_free_list+0x2ea>$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	89 c7                	mov    %eax,%edi$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	77 12                	ja     f0100e03 <check_page_free_list+0x215>$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	50                   	push   %eax$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	6a 58                	push   $0x58$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	e8 91 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	0f 86 b6 00 00 00    	jbe    f0100ec8 <check_page_free_list+0x2da>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	68 c0 70 10 f0       	push   $0xf01070c0$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	68 f9 02 00 00       	push   $0x2f9$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	e8 69 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	68 24 7a 10 f0       	push   $0xf0107a24$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	68 fb 02 00 00       	push   $0x2fb$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	e8 50 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	eb 03                	jmp    f0100e4c <check_page_free_list+0x25e>$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	8b 12                	mov    (%edx),%edx$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	85 d2                	test   %edx,%edx$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	0f 85 a6 fe ff ff    	jne    f0100cfc <check_page_free_list+0x10e>$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	85 f6                	test   %esi,%esi$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	7f 19                	jg     f0100e73 <check_page_free_list+0x285>$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	68 41 7a 10 f0       	push   $0xf0107a41$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	68 03 03 00 00       	push   $0x303$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	e8 21 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	85 db                	test   %ebx,%ebx$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	7f 19                	jg     f0100e90 <check_page_free_list+0x2a2>$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	68 53 7a 10 f0       	push   $0xf0107a53$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	68 04 03 00 00       	push   $0x304$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	e8 04 f2 ff ff       	call   f0100094 <_panic>$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	68 08 71 10 f0       	push   $0xf0107108$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	e8 ef 28 00 00       	call   f010378c <cprintf>$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	eb 49                	jmp    f0100ee8 <check_page_free_list+0x2fa>$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	a1 40 c2 2a f0       	mov    0xf02ac240,%eax$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	85 c0                	test   %eax,%eax$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	0f 85 6f fd ff ff    	jne    f0100c1b <check_page_free_list+0x2d>$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	e9 53 fd ff ff       	jmp    f0100c04 <check_page_free_list+0x16>$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	83 3d 40 c2 2a f0 00 	cmpl   $0x0,0xf02ac240$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	0f 84 46 fd ff ff    	je     f0100c04 <check_page_free_list+0x16>$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	e9 a1 fd ff ff       	jmp    f0100c69 <check_page_free_list+0x7b>$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	0f 85 76 ff ff ff    	jne    f0100e49 <check_page_free_list+0x25b>$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	e9 53 ff ff ff       	jmp    f0100e2b <check_page_free_list+0x23d>$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	0f 85 61 ff ff ff    	jne    f0100e44 <check_page_free_list+0x256>$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	e9 43 ff ff ff       	jmp    f0100e2b <check_page_free_list+0x23d>$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	5b                   	pop    %ebx$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	5e                   	pop    %esi$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	5f                   	pop    %edi$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	5d                   	pop    %ebp$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	c3                   	ret    $/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0 <page_init>:$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	55                   	push   %ebp$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	57                   	push   %edi$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	56                   	push   %esi$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	53                   	push   %ebx$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	e8 24 fc ff ff       	call   f0100b27 <boot_alloc>$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	77 15                	ja     f0100f1f <page_init+0x2f>$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	50                   	push   %eax$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	68 48 01 00 00       	push   $0x148$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	e8 75 f1 ff ff       	call   f0100094 <_panic>$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	8b 3d 40 c2 2a f0    	mov    0xf02ac240,%edi$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	bb 00 00 f6 ff       	mov    $0xfff60000,%ebx$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	e9 88 00 00 00       	jmp    f0100fcd <page_init+0xdd>$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	85 d2                	test   %edx,%edx$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	75 0e                	jne    f0100f57 <page_init+0x67>$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	8b 35 c8 d2 2c f0    	mov    0xf02cd2c8,%esi$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	66 c7 46 04 01 00    	movw   $0x1,0x4(%esi)$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	eb 6a                	jmp    f0100fc1 <page_init+0xd1>$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	89 d6                	mov    %edx,%esi$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	81 fe 00 70 00 00    	cmp    $0x7000,%esi$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	75 0f                	jne    f0100f73 <page_init+0x83>$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	8b 35 c8 d2 2c f0    	mov    0xf02cd2c8,%esi$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	66 c7 44 0e 04 01 00 	movw   $0x1,0x4(%esi,%ecx,1)$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	eb 4e                	jmp    f0100fc1 <page_init+0xd1>$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	81 fb ff ff 05 00    	cmp    $0x5ffff,%ebx$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	77 0f                	ja     f0100f8a <page_init+0x9a>$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	8b 35 c8 d2 2c f0    	mov    0xf02cd2c8,%esi$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	66 c7 44 0e 04 01 00 	movw   $0x1,0x4(%esi,%ecx,1)$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	eb 37                	jmp    f0100fc1 <page_init+0xd1>$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	81 fa ff 00 00 00    	cmp    $0xff,%edx$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	76 13                	jbe    f0100fa5 <page_init+0xb5>$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	39 c2                	cmp    %eax,%edx$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	77 0f                	ja     f0100fa5 <page_init+0xb5>$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	8b 35 c8 d2 2c f0    	mov    0xf02cd2c8,%esi$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	66 c7 44 0e 04 01 00 	movw   $0x1,0x4(%esi,%ecx,1)$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	eb 1c                	jmp    f0100fc1 <page_init+0xd1>$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	89 ce                	mov    %ecx,%esi$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	03 35 c8 d2 2c f0    	add    0xf02cd2c8,%esi$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	89 3e                	mov    %edi,(%esi)$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	89 cf                	mov    %ecx,%edi$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	03 3d c8 d2 2c f0    	add    0xf02cd2c8,%edi$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	83 c1 08             	add    $0x8,%ecx$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	0f 82 6c ff ff ff    	jb     f0100f45 <page_init+0x55>$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	74 06                	je     f0100fe5 <page_init+0xf5>$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	89 3d 40 c2 2a f0    	mov    %edi,0xf02ac240$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	5b                   	pop    %ebx$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	5e                   	pop    %esi$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	5f                   	pop    %edi$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	5d                   	pop    %ebp$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	c3                   	ret    $/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed <page_alloc>:$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	55                   	push   %ebp$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	53                   	push   %ebx$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	8b 1d 40 c2 2a f0    	mov    0xf02ac240,%ebx$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	85 db                	test   %ebx,%ebx$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	74 58                	je     f0101056 <page_alloc+0x69>$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	a3 40 c2 2a f0       	mov    %eax,0xf02ac240$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	74 45                	je     f0101056 <page_alloc+0x69>$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	89 d8                	mov    %ebx,%eax$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	89 c2                	mov    %eax,%edx$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	72 12                	jb     f010103e <page_alloc+0x51>$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	50                   	push   %eax$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	6a 58                	push   $0x58$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	e8 56 f0 ff ff       	call   f0100094 <_panic>$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	6a 00                	push   $0x0$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	50                   	push   %eax$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	e8 f4 45 00 00       	call   f0105647 <memset>$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	89 d8                	mov    %ebx,%eax$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	c9                   	leave  $/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	c3                   	ret    $/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d <page_free>:$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	55                   	push   %ebp$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	75 14                	jne    f0101081 <page_free+0x24>$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	75 0f                	jne    f0101081 <page_free+0x24>$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	8b 15 40 c2 2a f0    	mov    0xf02ac240,%edx$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	89 10                	mov    %edx,(%eax)$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	a3 40 c2 2a f0       	mov    %eax,0xf02ac240$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	eb 17                	jmp    f0101098 <page_free+0x3b>$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	68 64 7a 10 f0       	push   $0xf0107a64$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	68 90 01 00 00       	push   $0x190$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	e8 fc ef ff ff       	call   f0100094 <_panic>$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	c9                   	leave  $/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	c3                   	ret    $/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a <page_decref>:$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	55                   	push   %ebp$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	89 e5                	mov    %esp,%ebp$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	66 85 c0             	test   %ax,%ax$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	75 0c                	jne    f01010bf <page_decref+0x25>$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	52                   	push   %edx$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	e8 a1 ff ff ff       	call   f010105d <page_free>$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	c9                   	leave  $/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	c3                   	ret    $/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1 <pgdir_walk>:$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	55                   	push   %ebp$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	56                   	push   %esi$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	53                   	push   %ebx$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	89 de                	mov    %ebx,%esi$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	75 2f                	jne    f0101111 <pgdir_walk+0x50>$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	74 5b                	je     f0101143 <pgdir_walk+0x82>$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	6a 01                	push   $0x1$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	e8 fb fe ff ff       	call   f0100fed <page_alloc>$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	85 c0                	test   %eax,%eax$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	74 51                	je     f010114a <pgdir_walk+0x89>$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	0d 07 0e 00 00       	or     $0xe07,%eax$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	89 c2                	mov    %eax,%edx$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	72 15                	jb     f010113a <pgdir_walk+0x79>$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	50                   	push   %eax$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	68 cd 01 00 00       	push   $0x1cd$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	e8 5a ef ff ff       	call   f0100094 <_panic>$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	8d 84 b0 00 00 00 f0 	lea    -0x10000000(%eax,%esi,4),%eax$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	eb 0c                	jmp    f010114f <pgdir_walk+0x8e>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	eb 05                	jmp    f010114f <pgdir_walk+0x8e>$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	5b                   	pop    %ebx$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	5e                   	pop    %esi$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	5d                   	pop    %ebp$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	c3                   	ret    $/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156 <boot_map_region>:$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	55                   	push   %ebp$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	89 e5                	mov    %esp,%ebp$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	57                   	push   %edi$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	56                   	push   %esi$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	53                   	push   %ebx$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	89 c7                	mov    %eax,%edi$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	89 d6                	mov    %edx,%esi$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	29 de                	sub    %ebx,%esi$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	eb 3c                	jmp    f01011b2 <boot_map_region+0x5c>$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	6a 01                	push   $0x1$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	50                   	push   %eax$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	57                   	push   %edi$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	e8 3c ff ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	85 c0                	test   %eax,%eax$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	75 19                	jne    f01011a5 <boot_map_region+0x4f>$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	68 7d 7a 10 f0       	push   $0xf0107a7d$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	68 e4 01 00 00       	push   $0x1e4$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	e8 ef ee ff ff       	call   f0100094 <_panic>$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	09 da                	or     %ebx,%edx$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	89 10                	mov    %edx,(%eax)$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	89 d8                	mov    %ebx,%eax$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	77 ba                	ja     f0101176 <boot_map_region+0x20>$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	5b                   	pop    %ebx$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	5e                   	pop    %esi$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	5f                   	pop    %edi$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	5d                   	pop    %ebp$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	c3                   	ret    $/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4 <page_lookup>:$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	55                   	push   %ebp$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	53                   	push   %ebx$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	89 d1                	mov    %edx,%ecx$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	f6 04 88 01          	testb  $0x1,(%eax,%ecx,4)$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	74 45                	je     f0101224 <page_lookup+0x60>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	6a 00                	push   $0x0$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	52                   	push   %edx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	50                   	push   %eax$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	e8 d6 fe ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	85 c0                	test   %eax,%eax$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	74 39                	je     f010122b <page_lookup+0x67>$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	85 db                	test   %ebx,%ebx$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	74 02                	je     f01011f8 <page_lookup+0x34>$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	8b 00                	mov    (%eax),%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	3b 05 c0 d2 2c f0    	cmp    0xf02cd2c0,%eax$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	72 14                	jb     f0101219 <page_lookup+0x55>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	68 2c 71 10 f0       	push   $0xf010712c$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	6a 51                	push   $0x51$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	e8 7b ee ff ff       	call   f0100094 <_panic>$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	8b 15 c8 d2 2c f0    	mov    0xf02cd2c8,%edx$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	eb 0c                	jmp    f0101230 <page_lookup+0x6c>$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	eb 05                	jmp    f0101230 <page_lookup+0x6c>$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	c9                   	leave  $/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	c3                   	ret    $/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235 <tlb_invalidate>:$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	55                   	push   %ebp$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	89 e5                	mov    %esp,%ebp$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	e8 2a 4a 00 00       	call   f0105c6a <cpunum>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	83 b8 28 e0 2c f0 00 	cmpl   $0x0,-0xfd31fd8(%eax)$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	74 16                	je     f0101262 <tlb_invalidate+0x2d>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	e8 19 4a 00 00       	call   f0105c6a <cpunum>$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	75 06                	jne    f0101268 <tlb_invalidate+0x33>$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	0f 01 38             	invlpg (%eax)$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	c9                   	leave  $/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	c3                   	ret    $/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a <page_remove>:$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	55                   	push   %ebp$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	89 e5                	mov    %esp,%ebp$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	57                   	push   %edi$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	56                   	push   %esi$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	53                   	push   %ebx$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	50                   	push   %eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	57                   	push   %edi$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	56                   	push   %esi$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	e8 40 ff ff ff       	call   f01011c4 <page_lookup>$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	85 c0                	test   %eax,%eax$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	74 28                	je     f01012b3 <page_remove+0x49>$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	89 c3                	mov    %eax,%ebx$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	74 1e                	je     f01012b3 <page_remove+0x49>$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	57                   	push   %edi$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	56                   	push   %esi$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	e8 96 ff ff ff       	call   f0101235 <tlb_invalidate>$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	e8 ea fd ff ff       	call   f010109a <page_decref>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	5b                   	pop    %ebx$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	5e                   	pop    %esi$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	5f                   	pop    %edi$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	5d                   	pop    %ebp$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	c3                   	ret    $/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb <page_insert>:$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	55                   	push   %ebp$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	57                   	push   %edi$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	56                   	push   %esi$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	53                   	push   %ebx$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	6a 01                	push   $0x1$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	57                   	push   %edi$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	e8 ec fd ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	85 c0                	test   %eax,%eax$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	74 38                	je     f0101314 <page_insert+0x59>$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	89 c6                	mov    %eax,%esi$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	74 0f                	je     f01012f7 <page_insert+0x3c>$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	57                   	push   %edi$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	e8 76 ff ff ff       	call   f010126a <page_remove>$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	2b 1d c8 d2 2c f0    	sub    0xf02cd2c8,%ebx$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	09 c3                	or     %eax,%ebx$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	89 1e                	mov    %ebx,(%esi)$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	eb 05                	jmp    f0101319 <page_insert+0x5e>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	5b                   	pop    %ebx$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	5e                   	pop    %esi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	5f                   	pop    %edi$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	5d                   	pop    %ebp$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	c3                   	ret    $/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321 <mmio_map_region>:$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	55                   	push   %ebp$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	89 e5                	mov    %esp,%ebp$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	56                   	push   %esi$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	53                   	push   %ebx$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	8b 1d 00 33 12 f0    	mov    0xf0123300,%ebx$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	89 c8                	mov    %ecx,%eax$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	f7 c1 ff 0f 00 00    	test   $0xfff,%ecx$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	74 08                	je     f0101344 <mmio_map_region+0x23>$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	89 c8                	mov    %ecx,%eax$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	01 d8                	add    %ebx,%eax$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	72 07                	jb     f0101352 <mmio_map_region+0x31>$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	76 17                	jbe    f0101369 <mmio_map_region+0x48>$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	68 4c 71 10 f0       	push   $0xf010714c$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	68 84 02 00 00       	push   $0x284$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	e8 2b ed ff ff       	call   f0100094 <_panic>$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	8d b1 ff 0f 00 00    	lea    0xfff(%ecx),%esi$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	6a 1a                	push   $0x1a$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	89 f1                	mov    %esi,%ecx$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	89 da                	mov    %ebx,%edx$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	e8 cb fd ff ff       	call   f0101156 <boot_map_region>$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	01 35 00 33 12 f0    	add    %esi,0xf0123300$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	89 d8                	mov    %ebx,%eax$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	5b                   	pop    %ebx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	5e                   	pop    %esi$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	5d                   	pop    %ebp$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	c3                   	ret    $/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a <mem_init>:$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	55                   	push   %ebp$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	89 e5                	mov    %esp,%ebp$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	57                   	push   %edi$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	56                   	push   %esi$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	53                   	push   %ebx$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	e8 b4 f7 ff ff       	call   f0100b61 <nvram_read>$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	89 c3                	mov    %eax,%ebx$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	e8 a8 f7 ff ff       	call   f0100b61 <nvram_read>$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	89 c6                	mov    %eax,%esi$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	e8 9c f7 ff ff       	call   f0100b61 <nvram_read>$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	85 c0                	test   %eax,%eax$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	74 07                	je     f01013d3 <mem_init+0x39>$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	eb 0b                	jmp    f01013de <mem_init+0x44>$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	85 f6                	test   %esi,%esi$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	89 c2                	mov    %eax,%edx$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	89 15 c0 d2 2c f0    	mov    %edx,0xf02cd2c0$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	89 c2                	mov    %eax,%edx$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	29 da                	sub    %ebx,%edx$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	52                   	push   %edx$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	53                   	push   %ebx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	50                   	push   %eax$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	68 78 71 10 f0       	push   $0xf0107178$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	e8 92 23 00 00       	call   f010378c <cprintf>$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	e8 23 f7 ff ff       	call   f0100b27 <boot_alloc>$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	a3 c4 d2 2c f0       	mov    %eax,0xf02cd2c4$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	6a 00                	push   $0x0$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	50                   	push   %eax$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	e8 2e 42 00 00       	call   f0105647 <memset>$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	77 15                	ja     f010143d <mem_init+0xa3>$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	50                   	push   %eax$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	68 97 00 00 00       	push   $0x97$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	e8 57 ec ff ff       	call   f0100094 <_panic>$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	a1 c0 d2 2c f0       	mov    0xf02cd2c0,%eax$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	e8 ce f6 ff ff       	call   f0100b27 <boot_alloc>$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	a3 c8 d2 2c f0       	mov    %eax,0xf02cd2c8$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	8b 0d c0 d2 2c f0    	mov    0xf02cd2c0,%ecx$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	52                   	push   %edx$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	6a 00                	push   $0x0$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	50                   	push   %eax$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	e8 d0 41 00 00       	call   f0105647 <memset>$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	e8 a6 f6 ff ff       	call   f0100b27 <boot_alloc>$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	a3 44 c2 2a f0       	mov    %eax,0xf02ac244$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	6a 00                	push   $0x0$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	50                   	push   %eax$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	e8 b1 41 00 00       	call   f0105647 <memset>$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	e8 55 fa ff ff       	call   f0100ef0 <page_init>$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	e8 49 f7 ff ff       	call   f0100bee <check_page_free_list>$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	83 3d c8 d2 2c f0 00 	cmpl   $0x0,0xf02cd2c8$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	75 17                	jne    f01014c8 <mem_init+0x12e>$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	68 81 7a 10 f0       	push   $0xf0107a81$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	68 17 03 00 00       	push   $0x317$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	e8 cc eb ff ff       	call   f0100094 <_panic>$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	a1 40 c2 2a f0       	mov    0xf02ac240,%eax$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	eb 05                	jmp    f01014d9 <mem_init+0x13f>$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	8b 00                	mov    (%eax),%eax$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	85 c0                	test   %eax,%eax$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	75 f7                	jne    f01014d4 <mem_init+0x13a>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	6a 00                	push   $0x0$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	e8 06 fb ff ff       	call   f0100fed <page_alloc>$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	89 c7                	mov    %eax,%edi$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	85 c0                	test   %eax,%eax$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	75 19                	jne    f0101509 <mem_init+0x16f>$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	68 9c 7a 10 f0       	push   $0xf0107a9c$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	68 1f 03 00 00       	push   $0x31f$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	e8 8b eb ff ff       	call   f0100094 <_panic>$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	6a 00                	push   $0x0$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	e8 da fa ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	89 c6                	mov    %eax,%esi$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	85 c0                	test   %eax,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	75 19                	jne    f0101535 <mem_init+0x19b>$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	68 b2 7a 10 f0       	push   $0xf0107ab2$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	68 20 03 00 00       	push   $0x320$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	e8 5f eb ff ff       	call   f0100094 <_panic>$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	6a 00                	push   $0x0$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	e8 ae fa ff ff       	call   f0100fed <page_alloc>$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	85 c0                	test   %eax,%eax$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	75 19                	jne    f0101562 <mem_init+0x1c8>$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	68 c8 7a 10 f0       	push   $0xf0107ac8$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	68 21 03 00 00       	push   $0x321$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	e8 32 eb ff ff       	call   f0100094 <_panic>$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	39 f7                	cmp    %esi,%edi$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	75 19                	jne    f010157f <mem_init+0x1e5>$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	68 de 7a 10 f0       	push   $0xf0107ade$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	68 24 03 00 00       	push   $0x324$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	e8 15 eb ff ff       	call   f0100094 <_panic>$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	39 c6                	cmp    %eax,%esi$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	74 04                	je     f010158a <mem_init+0x1f0>$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	39 c7                	cmp    %eax,%edi$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	75 19                	jne    f01015a3 <mem_init+0x209>$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	68 b4 71 10 f0       	push   $0xf01071b4$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	68 25 03 00 00       	push   $0x325$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	e8 f1 ea ff ff       	call   f0100094 <_panic>$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	8b 0d c8 d2 2c f0    	mov    0xf02cd2c8,%ecx$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	8b 15 c0 d2 2c f0    	mov    0xf02cd2c0,%edx$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	89 f8                	mov    %edi,%eax$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	29 c8                	sub    %ecx,%eax$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	39 d0                	cmp    %edx,%eax$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	72 19                	jb     f01015d9 <mem_init+0x23f>$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	68 f0 7a 10 f0       	push   $0xf0107af0$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	68 26 03 00 00       	push   $0x326$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	e8 bb ea ff ff       	call   f0100094 <_panic>$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	89 f0                	mov    %esi,%eax$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	29 c8                	sub    %ecx,%eax$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	39 c2                	cmp    %eax,%edx$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	77 19                	ja     f0101600 <mem_init+0x266>$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	68 0d 7b 10 f0       	push   $0xf0107b0d$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	68 27 03 00 00       	push   $0x327$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	e8 94 ea ff ff       	call   f0100094 <_panic>$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	29 c8                	sub    %ecx,%eax$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	39 c2                	cmp    %eax,%edx$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	77 19                	ja     f0101628 <mem_init+0x28e>$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	68 2a 7b 10 f0       	push   $0xf0107b2a$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	68 28 03 00 00       	push   $0x328$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	e8 6c ea ff ff       	call   f0100094 <_panic>$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	a1 40 c2 2a f0       	mov    0xf02ac240,%eax$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	c7 05 40 c2 2a f0 00 	movl   $0x0,0xf02ac240$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	00 00 00 $/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	6a 00                	push   $0x0$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	e8 a9 f9 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	85 c0                	test   %eax,%eax$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	74 19                	je     f0101664 <mem_init+0x2ca>$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	68 47 7b 10 f0       	push   $0xf0107b47$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	68 2f 03 00 00       	push   $0x32f$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	e8 30 ea ff ff       	call   f0100094 <_panic>$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	57                   	push   %edi$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	e8 f0 f9 ff ff       	call   f010105d <page_free>$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	e8 e8 f9 ff ff       	call   f010105d <page_free>$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	e8 dd f9 ff ff       	call   f010105d <page_free>$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	e8 61 f9 ff ff       	call   f0100fed <page_alloc>$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	89 c6                	mov    %eax,%esi$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	85 c0                	test   %eax,%eax$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	75 19                	jne    f01016ae <mem_init+0x314>$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	68 9c 7a 10 f0       	push   $0xf0107a9c$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	68 39 03 00 00       	push   $0x339$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	e8 e6 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	6a 00                	push   $0x0$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	e8 35 f9 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	89 c7                	mov    %eax,%edi$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	85 c0                	test   %eax,%eax$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	75 19                	jne    f01016da <mem_init+0x340>$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	68 b2 7a 10 f0       	push   $0xf0107ab2$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	68 3a 03 00 00       	push   $0x33a$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	e8 ba e9 ff ff       	call   f0100094 <_panic>$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	6a 00                	push   $0x0$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	e8 09 f9 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	85 c0                	test   %eax,%eax$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	75 19                	jne    f0101707 <mem_init+0x36d>$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	68 c8 7a 10 f0       	push   $0xf0107ac8$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	68 3b 03 00 00       	push   $0x33b$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	e8 8d e9 ff ff       	call   f0100094 <_panic>$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	39 fe                	cmp    %edi,%esi$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	75 19                	jne    f0101724 <mem_init+0x38a>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	68 de 7a 10 f0       	push   $0xf0107ade$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	68 3d 03 00 00       	push   $0x33d$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	e8 70 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	39 c7                	cmp    %eax,%edi$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	74 04                	je     f010172f <mem_init+0x395>$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	39 c6                	cmp    %eax,%esi$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	75 19                	jne    f0101748 <mem_init+0x3ae>$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	68 b4 71 10 f0       	push   $0xf01071b4$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	68 3e 03 00 00       	push   $0x33e$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	e8 4c e9 ff ff       	call   f0100094 <_panic>$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	6a 00                	push   $0x0$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	e8 9b f8 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	85 c0                	test   %eax,%eax$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	74 19                	je     f0101772 <mem_init+0x3d8>$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	68 47 7b 10 f0       	push   $0xf0107b47$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	68 3f 03 00 00       	push   $0x33f$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	e8 22 e9 ff ff       	call   f0100094 <_panic>$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	89 f0                	mov    %esi,%eax$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	89 c2                	mov    %eax,%edx$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	72 12                	jb     f010179f <mem_init+0x405>$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	50                   	push   %eax$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	6a 58                	push   $0x58$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	e8 f5 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	68 00 10 00 00       	push   $0x1000$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	6a 01                	push   $0x1$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	50                   	push   %eax$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	e8 93 3e 00 00       	call   f0105647 <memset>$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	e8 a1 f8 ff ff       	call   f010105d <page_free>$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	e8 25 f8 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	85 c0                	test   %eax,%eax$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	75 19                	jne    f01017e8 <mem_init+0x44e>$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	68 56 7b 10 f0       	push   $0xf0107b56$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	68 44 03 00 00       	push   $0x344$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	e8 ac e8 ff ff       	call   f0100094 <_panic>$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	39 c6                	cmp    %eax,%esi$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	74 19                	je     f0101805 <mem_init+0x46b>$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	68 74 7b 10 f0       	push   $0xf0107b74$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	68 45 03 00 00       	push   $0x345$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	e8 8f e8 ff ff       	call   f0100094 <_panic>$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	89 f0                	mov    %esi,%eax$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	89 c2                	mov    %eax,%edx$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	72 12                	jb     f0101832 <mem_init+0x498>$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	50                   	push   %eax$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	6a 58                	push   $0x58$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	e8 62 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	74 19                	je     f010185c <mem_init+0x4c2>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	68 84 7b 10 f0       	push   $0xf0107b84$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	68 48 03 00 00       	push   $0x348$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	e8 38 e8 ff ff       	call   f0100094 <_panic>$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	39 d0                	cmp    %edx,%eax$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	75 db                	jne    f010183e <mem_init+0x4a4>$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	a3 40 c2 2a f0       	mov    %eax,0xf02ac240$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	56                   	push   %esi$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	e8 e9 f7 ff ff       	call   f010105d <page_free>$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	e8 e1 f7 ff ff       	call   f010105d <page_free>$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	83 c4 04             	add    $0x4,%esp$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	e8 d6 f7 ff ff       	call   f010105d <page_free>$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	a1 40 c2 2a f0       	mov    0xf02ac240,%eax$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	eb 05                	jmp    f0101896 <mem_init+0x4fc>$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	8b 00                	mov    (%eax),%eax$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	85 c0                	test   %eax,%eax$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	75 f7                	jne    f0101891 <mem_init+0x4f7>$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	85 db                	test   %ebx,%ebx$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	74 19                	je     f01018b7 <mem_init+0x51d>$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	68 8e 7b 10 f0       	push   $0xf0107b8e$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	68 55 03 00 00       	push   $0x355$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	e8 dd e7 ff ff       	call   f0100094 <_panic>$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	68 d4 71 10 f0       	push   $0xf01071d4$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	e8 c8 1e 00 00       	call   f010378c <cprintf>$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	e8 1d f7 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	85 c0                	test   %eax,%eax$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	75 19                	jne    f01018f3 <mem_init+0x559>$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	68 9c 7a 10 f0       	push   $0xf0107a9c$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	68 bb 03 00 00       	push   $0x3bb$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	e8 a1 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	6a 00                	push   $0x0$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	e8 f0 f6 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	89 c3                	mov    %eax,%ebx$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	85 c0                	test   %eax,%eax$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	75 19                	jne    f010191f <mem_init+0x585>$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	68 b2 7a 10 f0       	push   $0xf0107ab2$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	68 bc 03 00 00       	push   $0x3bc$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	e8 75 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	6a 00                	push   $0x0$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	e8 c4 f6 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	89 c6                	mov    %eax,%esi$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	85 c0                	test   %eax,%eax$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	75 19                	jne    f010194b <mem_init+0x5b1>$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	68 c8 7a 10 f0       	push   $0xf0107ac8$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	68 bd 03 00 00       	push   $0x3bd$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	e8 49 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	75 19                	jne    f0101969 <mem_init+0x5cf>$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	68 de 7a 10 f0       	push   $0xf0107ade$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	68 c0 03 00 00       	push   $0x3c0$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	e8 2b e7 ff ff       	call   f0100094 <_panic>$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	74 04                	je     f0101972 <mem_init+0x5d8>$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	75 19                	jne    f010198b <mem_init+0x5f1>$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	68 b4 71 10 f0       	push   $0xf01071b4$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	e8 09 e7 ff ff       	call   f0100094 <_panic>$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	a1 40 c2 2a f0       	mov    0xf02ac240,%eax$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	c7 05 40 c2 2a f0 00 	movl   $0x0,0xf02ac240$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	00 00 00 $/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	6a 00                	push   $0x0$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	e8 46 f6 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	85 c0                	test   %eax,%eax$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	74 19                	je     f01019c7 <mem_init+0x62d>$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	68 47 7b 10 f0       	push   $0xf0107b47$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	68 c8 03 00 00       	push   $0x3c8$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	e8 cd e6 ff ff       	call   f0100094 <_panic>$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	50                   	push   %eax$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	6a 00                	push   $0x0$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	e8 e9 f7 ff ff       	call   f01011c4 <page_lookup>$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	85 c0                	test   %eax,%eax$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	74 19                	je     f01019fb <mem_init+0x661>$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	68 f4 71 10 f0       	push   $0xf01071f4$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	68 cb 03 00 00       	push   $0x3cb$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	e8 99 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	6a 02                	push   $0x2$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	6a 00                	push   $0x0$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	53                   	push   %ebx$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	e8 b0 f8 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	85 c0                	test   %eax,%eax$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	78 19                	js     f0101a2b <mem_init+0x691>$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	68 2c 72 10 f0       	push   $0xf010722c$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	e8 69 e6 ff ff       	call   f0100094 <_panic>$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	e8 27 f6 ff ff       	call   f010105d <page_free>$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	6a 02                	push   $0x2$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	6a 00                	push   $0x0$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	53                   	push   %ebx$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	e8 75 f8 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	85 c0                	test   %eax,%eax$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	74 19                	je     f0101a66 <mem_init+0x6cc>$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	68 5c 72 10 f0       	push   $0xf010725c$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	68 d2 03 00 00       	push   $0x3d2$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	e8 2e e6 ff ff       	call   f0100094 <_panic>$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	a1 c8 d2 2c f0       	mov    0xf02cd2c8,%eax$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	89 c1                	mov    %eax,%ecx$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	8b 17                	mov    (%edi),%edx$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	29 c8                	sub    %ecx,%eax$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	74 19                	je     f0101aa6 <mem_init+0x70c>$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	68 8c 72 10 f0       	push   $0xf010728c$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101aa1	obj/kern/kernel.asm	/^f0101aa1:	e8 ee e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	89 f8                	mov    %edi,%eax$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	e8 d8 f0 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	89 da                	mov    %ebx,%edx$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	39 d0                	cmp    %edx,%eax$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	74 19                	je     f0101ada <mem_init+0x740>$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	68 b4 72 10 f0       	push   $0xf01072b4$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	68 d4 03 00 00       	push   $0x3d4$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	e8 ba e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	74 19                	je     f0101afa <mem_init+0x760>$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	68 99 7b 10 f0       	push   $0xf0107b99$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	68 d5 03 00 00       	push   $0x3d5$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	e8 9a e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	74 19                	je     f0101b1d <mem_init+0x783>$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	68 aa 7b 10 f0       	push   $0xf0107baa$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	68 d6 03 00 00       	push   $0x3d6$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	e8 77 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	6a 02                	push   $0x2$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	56                   	push   %esi$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	57                   	push   %edi$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	e8 90 f7 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	85 c0                	test   %eax,%eax$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	74 19                	je     f0101b4b <mem_init+0x7b1>$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	68 e4 72 10 f0       	push   $0xf01072e4$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	e8 49 e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	e8 30 f0 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	89 f2                	mov    %esi,%edx$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	74 19                	je     f0101b85 <mem_init+0x7eb>$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	68 20 73 10 f0       	push   $0xf0107320$/;"	l
f0101b71	obj/kern/kernel.asm	/^f0101b71:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	68 da 03 00 00       	push   $0x3da$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	e8 0f e5 ff ff       	call   f0100094 <_panic>$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	74 19                	je     f0101ba5 <mem_init+0x80b>$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	68 bb 7b 10 f0       	push   $0xf0107bbb$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	68 db 03 00 00       	push   $0x3db$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	e8 ef e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	6a 00                	push   $0x0$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	e8 3e f4 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	85 c0                	test   %eax,%eax$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	74 19                	je     f0101bcf <mem_init+0x835>$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	68 47 7b 10 f0       	push   $0xf0107b47$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	68 de 03 00 00       	push   $0x3de$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	e8 c5 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	6a 02                	push   $0x2$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	56                   	push   %esi$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	e8 d9 f6 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	85 c0                	test   %eax,%eax$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	74 19                	je     f0101c02 <mem_init+0x868>$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	68 e4 72 10 f0       	push   $0xf01072e4$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	68 e1 03 00 00       	push   $0x3e1$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	e8 92 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	e8 79 ef ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	89 f2                	mov    %esi,%edx$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	74 19                	je     f0101c3c <mem_init+0x8a2>$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	68 20 73 10 f0       	push   $0xf0107320$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	68 e2 03 00 00       	push   $0x3e2$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	e8 58 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	74 19                	je     f0101c5c <mem_init+0x8c2>$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	68 bb 7b 10 f0       	push   $0xf0107bbb$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101c4d	obj/kern/kernel.asm	/^f0101c4d:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	e8 38 e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	6a 00                	push   $0x0$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	e8 87 f3 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	85 c0                	test   %eax,%eax$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	74 19                	je     f0101c86 <mem_init+0x8ec>$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	68 47 7b 10 f0       	push   $0xf0107b47$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	e8 0e e4 ff ff       	call   f0100094 <_panic>$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	8b 15 c4 d2 2c f0    	mov    0xf02cd2c4,%edx$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	8b 02                	mov    (%edx),%eax$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	3b 0d c0 d2 2c f0    	cmp    0xf02cd2c0,%ecx$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	72 15                	jb     f0101cb5 <mem_init+0x91b>$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	50                   	push   %eax$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	68 ea 03 00 00       	push   $0x3ea$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	e8 df e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	6a 00                	push   $0x0$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	52                   	push   %edx$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	e8 f4 f3 ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	74 19                	je     f0101cf3 <mem_init+0x959>$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	68 50 73 10 f0       	push   $0xf0107350$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	68 eb 03 00 00       	push   $0x3eb$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	e8 a1 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	6a 06                	push   $0x6$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	56                   	push   %esi$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	e8 b5 f5 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	85 c0                	test   %eax,%eax$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	74 19                	je     f0101d26 <mem_init+0x98c>$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	68 90 73 10 f0       	push   $0xf0107390$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	e8 6e e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	89 f8                	mov    %edi,%eax$/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	e8 52 ee ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	89 f2                	mov    %esi,%edx$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	74 19                	je     f0101d63 <mem_init+0x9c9>$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	68 20 73 10 f0       	push   $0xf0107320$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	e8 31 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	74 19                	je     f0101d83 <mem_init+0x9e9>$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	68 bb 7b 10 f0       	push   $0xf0107bbb$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	e8 11 e3 ff ff       	call   f0100094 <_panic>$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	6a 00                	push   $0x0$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	57                   	push   %edi$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	e8 2e f3 ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	75 19                	jne    f0101db4 <mem_init+0xa1a>$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	68 d0 73 10 f0       	push   $0xf01073d0$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	e8 e0 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	75 19                	jne    f0101dd7 <mem_init+0xa3d>$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	68 cc 7b 10 f0       	push   $0xf0107bcc$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	e8 bd e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	6a 02                	push   $0x2$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	56                   	push   %esi$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	50                   	push   %eax$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	e8 d6 f4 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	85 c0                	test   %eax,%eax$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	74 19                	je     f0101e05 <mem_init+0xa6b>$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	68 e4 72 10 f0       	push   $0xf01072e4$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	e8 8f e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	6a 00                	push   $0x0$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	e8 a7 f2 ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101e20	obj/kern/kernel.asm	/^f0101e20:	75 19                	jne    f0101e3b <mem_init+0xaa1>$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	68 04 74 10 f0       	push   $0xf0107404$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	e8 59 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	6a 00                	push   $0x0$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	e8 71 f2 ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	74 19                	je     f0101e71 <mem_init+0xad7>$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	68 38 74 10 f0       	push   $0xf0107438$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101e62	obj/kern/kernel.asm	/^f0101e62:	68 f7 03 00 00       	push   $0x3f7$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	e8 23 e2 ff ff       	call   f0100094 <_panic>$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	6a 02                	push   $0x2$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	e8 35 f4 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	85 c0                	test   %eax,%eax$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	78 19                	js     f0101ea6 <mem_init+0xb0c>$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	68 70 74 10 f0       	push   $0xf0107470$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	e8 ee e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	6a 02                	push   $0x2$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	53                   	push   %ebx$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	e8 02 f4 ff ff       	call   f01012bb <page_insert>$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	85 c0                	test   %eax,%eax$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	74 19                	je     f0101ed9 <mem_init+0xb3f>$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	68 a8 74 10 f0       	push   $0xf01074a8$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	e8 bb e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	6a 00                	push   $0x0$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	e8 d3 f1 ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	74 19                	je     f0101f0f <mem_init+0xb75>$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	68 38 74 10 f0       	push   $0xf0107438$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	e8 85 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	89 f8                	mov    %edi,%eax$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	e8 69 ec ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	89 c1                	mov    %eax,%ecx$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	89 d8                	mov    %ebx,%eax$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	74 19                	je     f0101f51 <mem_init+0xbb7>$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	68 e4 74 10 f0       	push   $0xf01074e4$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	68 01 04 00 00       	push   $0x401$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	e8 43 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	89 f8                	mov    %edi,%eax$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	e8 2d ec ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	74 19                	je     f0101f7b <mem_init+0xbe1>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	68 10 75 10 f0       	push   $0xf0107510$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	68 02 04 00 00       	push   $0x402$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	e8 19 e1 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	74 19                	je     f0101f9b <mem_init+0xc01>$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	68 e2 7b 10 f0       	push   $0xf0107be2$/;"	l
f0101f87	obj/kern/kernel.asm	/^f0101f87:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	68 04 04 00 00       	push   $0x404$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	e8 f9 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	74 19                	je     f0101fbb <mem_init+0xc21>$/;"	l
f0101fa2	obj/kern/kernel.asm	/^f0101fa2:	68 f3 7b 10 f0       	push   $0xf0107bf3$/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	68 05 04 00 00       	push   $0x405$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	e8 d9 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	6a 00                	push   $0x0$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	e8 28 f0 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	39 c6                	cmp    %eax,%esi$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	75 04                	jne    f0101fd0 <mem_init+0xc36>$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	85 c0                	test   %eax,%eax$/;"	l
f0101fce	obj/kern/kernel.asm	/^f0101fce:	75 19                	jne    f0101fe9 <mem_init+0xc4f>$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	68 40 75 10 f0       	push   $0xf0107540$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	68 08 04 00 00       	push   $0x408$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	e8 ab e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	6a 00                	push   $0x0$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	e8 71 f2 ff ff       	call   f010126a <page_remove>$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	89 f8                	mov    %edi,%eax$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	e8 7f eb ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	74 19                	je     f010202c <mem_init+0xc92>$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	68 64 75 10 f0       	push   $0xf0107564$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	e8 68 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	89 f8                	mov    %edi,%eax$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	e8 52 eb ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	89 da                	mov    %ebx,%edx$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	39 d0                	cmp    %edx,%eax$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	74 19                	je     f0102063 <mem_init+0xcc9>$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	68 10 75 10 f0       	push   $0xf0107510$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010205e	obj/kern/kernel.asm	/^f010205e:	e8 31 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	74 19                	je     f0102083 <mem_init+0xce9>$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	68 99 7b 10 f0       	push   $0xf0107b99$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	68 0e 04 00 00       	push   $0x40e$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	e8 11 e0 ff ff       	call   f0100094 <_panic>$/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	74 19                	je     f01020a3 <mem_init+0xd09>$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	68 f3 7b 10 f0       	push   $0xf0107bf3$/;"	l
f010208f	obj/kern/kernel.asm	/^f010208f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	68 0f 04 00 00       	push   $0x40f$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	e8 f1 df ff ff       	call   f0100094 <_panic>$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	6a 00                	push   $0x0$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	68 00 10 00 00       	push   $0x1000$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	53                   	push   %ebx$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	57                   	push   %edi$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	e8 0a f2 ff ff       	call   f01012bb <page_insert>$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	85 c0                	test   %eax,%eax$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	74 19                	je     f01020d1 <mem_init+0xd37>$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	68 88 75 10 f0       	push   $0xf0107588$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	68 12 04 00 00       	push   $0x412$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	e8 c3 df ff ff       	call   f0100094 <_panic>$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	75 19                	jne    f01020f1 <mem_init+0xd57>$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	68 04 7c 10 f0       	push   $0xf0107c04$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	68 13 04 00 00       	push   $0x413$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	e8 a3 df ff ff       	call   f0100094 <_panic>$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	74 19                	je     f010210f <mem_init+0xd75>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	68 10 7c 10 f0       	push   $0xf0107c10$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	68 14 04 00 00       	push   $0x414$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	e8 85 df ff ff       	call   f0100094 <_panic>$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	e8 48 f1 ff ff       	call   f010126a <page_remove>$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	89 f8                	mov    %edi,%eax$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	e8 56 ea ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	74 19                	je     f0102155 <mem_init+0xdbb>$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	68 64 75 10 f0       	push   $0xf0107564$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	68 18 04 00 00       	push   $0x418$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	e8 3f df ff ff       	call   f0100094 <_panic>$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	89 f8                	mov    %edi,%eax$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	e8 29 ea ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	74 19                	je     f010217f <mem_init+0xde5>$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	68 c0 75 10 f0       	push   $0xf01075c0$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	68 19 04 00 00       	push   $0x419$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	e8 15 df ff ff       	call   f0100094 <_panic>$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	74 19                	je     f010219f <mem_init+0xe05>$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	68 25 7c 10 f0       	push   $0xf0107c25$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	68 1a 04 00 00       	push   $0x41a$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	e8 f5 de ff ff       	call   f0100094 <_panic>$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	74 19                	je     f01021bf <mem_init+0xe25>$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	68 f3 7b 10 f0       	push   $0xf0107bf3$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	68 1b 04 00 00       	push   $0x41b$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	e8 d5 de ff ff       	call   f0100094 <_panic>$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	6a 00                	push   $0x0$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	e8 24 ee ff ff       	call   f0100fed <page_alloc>$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021cc	obj/kern/kernel.asm	/^f01021cc:	85 c0                	test   %eax,%eax$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	74 04                	je     f01021d4 <mem_init+0xe3a>$/;"	l
f01021d0	obj/kern/kernel.asm	/^f01021d0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	74 19                	je     f01021ed <mem_init+0xe53>$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	68 e8 75 10 f0       	push   $0xf01075e8$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	68 1e 04 00 00       	push   $0x41e$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	e8 a7 de ff ff       	call   f0100094 <_panic>$/;"	l
f01021ed	obj/kern/kernel.asm	/^f01021ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	6a 00                	push   $0x0$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	e8 f6 ed ff ff       	call   f0100fed <page_alloc>$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	85 c0                	test   %eax,%eax$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	74 19                	je     f0102217 <mem_init+0xe7d>$/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	68 47 7b 10 f0       	push   $0xf0107b47$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	68 21 04 00 00       	push   $0x421$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	e8 7d de ff ff       	call   f0100094 <_panic>$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	8b 0d c4 d2 2c f0    	mov    0xf02cd2c4,%ecx$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	8b 11                	mov    (%ecx),%edx$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	39 c2                	cmp    %eax,%edx$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	74 19                	je     f0102251 <mem_init+0xeb7>$/;"	l
f0102238	obj/kern/kernel.asm	/^f0102238:	68 8c 72 10 f0       	push   $0xf010728c$/;"	l
f010223d	obj/kern/kernel.asm	/^f010223d:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	68 24 04 00 00       	push   $0x424$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	e8 43 de ff ff       	call   f0100094 <_panic>$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	74 19                	je     f010227a <mem_init+0xee0>$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	68 aa 7b 10 f0       	push   $0xf0107baa$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	68 26 04 00 00       	push   $0x426$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	e8 1a de ff ff       	call   f0100094 <_panic>$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	50                   	push   %eax$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	e8 d1 ed ff ff       	call   f010105d <page_free>$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	6a 01                	push   $0x1$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	68 00 10 40 00       	push   $0x401000$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	e8 20 ee ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	89 c7                	mov    %eax,%edi$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	8b 0d c0 d2 2c f0    	mov    0xf02cd2c0,%ecx$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	89 c2                	mov    %eax,%edx$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	39 ca                	cmp    %ecx,%edx$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	72 15                	jb     f01022dd <mem_init+0xf43>$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	50                   	push   %eax$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	68 2d 04 00 00       	push   $0x42d$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	e8 b7 dd ff ff       	call   f0100094 <_panic>$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	39 c7                	cmp    %eax,%edi$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	74 19                	je     f01022ff <mem_init+0xf65>$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	68 36 7c 10 f0       	push   $0xf0107c36$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	68 2e 04 00 00       	push   $0x42e$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	e8 95 dd ff ff       	call   f0100094 <_panic>$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	89 c2                	mov    %eax,%edx$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	77 12                	ja     f0102339 <mem_init+0xf9f>$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	50                   	push   %eax$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f010232d	obj/kern/kernel.asm	/^f010232d:	6a 58                	push   $0x58$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	e8 5b dd ff ff       	call   f0100094 <_panic>$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	50                   	push   %eax$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	e8 f6 32 00 00       	call   f0105647 <memset>$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	e8 01 ed ff ff       	call   f010105d <page_free>$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	6a 01                	push   $0x1$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	6a 00                	push   $0x0$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	e8 53 ed ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	89 fa                	mov    %edi,%edx$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	89 d0                	mov    %edx,%eax$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	3b 05 c0 d2 2c f0    	cmp    0xf02cd2c0,%eax$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	72 12                	jb     f010239e <mem_init+0x1004>$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	52                   	push   %edx$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	6a 58                	push   $0x58$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	e8 f6 dc ff ff       	call   f0100094 <_panic>$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01023a7	obj/kern/kernel.asm	/^f01023a7:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	74 19                	je     f01023cb <mem_init+0x1031>$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	68 4e 7c 10 f0       	push   $0xf0107c4e$/;"	l
f01023b7	obj/kern/kernel.asm	/^f01023b7:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	68 38 04 00 00       	push   $0x438$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	e8 c9 dc ff ff       	call   f0100094 <_panic>$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	83 c0 04             	add    $0x4,%eax$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	39 d0                	cmp    %edx,%eax$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	75 db                	jne    f01023ad <mem_init+0x1013>$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	89 0d 40 c2 2a f0    	mov    %ecx,0xf02ac240$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	50                   	push   %eax$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	e8 65 ec ff ff       	call   f010105d <page_free>$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	e8 5d ec ff ff       	call   f010105d <page_free>$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	e8 55 ec ff ff       	call   f010105d <page_free>$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	83 c4 08             	add    $0x8,%esp$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	6a 00                	push   $0x0$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	e8 0a ef ff ff       	call   f0101321 <mmio_map_region>$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	89 c3                	mov    %eax,%ebx$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	83 c4 08             	add    $0x8,%esp$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	6a 00                	push   $0x0$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	e8 f9 ee ff ff       	call   f0101321 <mmio_map_region>$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	89 c6                	mov    %eax,%esi$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	76 07                	jbe    f0102442 <mem_init+0x10a8>$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	76 19                	jbe    f010245b <mem_init+0x10c1>$/;"	l
f0102442	obj/kern/kernel.asm	/^f0102442:	68 0c 76 10 f0       	push   $0xf010760c$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	68 48 04 00 00       	push   $0x448$/;"	l
f0102451	obj/kern/kernel.asm	/^f0102451:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	e8 39 dc ff ff       	call   f0100094 <_panic>$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	77 08                	ja     f0102471 <mem_init+0x10d7>$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	77 19                	ja     f010248a <mem_init+0x10f0>$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	68 34 76 10 f0       	push   $0xf0107634$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	68 49 04 00 00       	push   $0x449$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	e8 0a dc ff ff       	call   f0100094 <_panic>$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	89 da                	mov    %ebx,%edx$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	09 f2                	or     %esi,%edx$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	74 19                	je     f01024af <mem_init+0x1115>$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	68 5c 76 10 f0       	push   $0xf010765c$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01024a0	obj/kern/kernel.asm	/^f01024a0:	68 4b 04 00 00       	push   $0x44b$/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	e8 e5 db ff ff       	call   f0100094 <_panic>$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	39 c6                	cmp    %eax,%esi$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	73 19                	jae    f01024cc <mem_init+0x1132>$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	68 65 7c 10 f0       	push   $0xf0107c65$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	68 4d 04 00 00       	push   $0x44d$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	e8 c8 db ff ff       	call   f0100094 <_panic>$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	89 da                	mov    %ebx,%edx$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	89 f8                	mov    %edi,%eax$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	e8 af e6 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	85 c0                	test   %eax,%eax$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	74 19                	je     f01024f8 <mem_init+0x115e>$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	68 84 76 10 f0       	push   $0xf0107684$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	68 4f 04 00 00       	push   $0x44f$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	e8 9c db ff ff       	call   f0100094 <_panic>$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	89 c2                	mov    %eax,%edx$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	89 f8                	mov    %edi,%eax$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	e8 80 e6 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	74 19                	je     f010252a <mem_init+0x1190>$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	68 a8 76 10 f0       	push   $0xf01076a8$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	68 50 04 00 00       	push   $0x450$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	e8 6a db ff ff       	call   f0100094 <_panic>$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	89 f2                	mov    %esi,%edx$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	89 f8                	mov    %edi,%eax$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	e8 57 e6 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	85 c0                	test   %eax,%eax$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	74 19                	je     f0102550 <mem_init+0x11b6>$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	68 d8 76 10 f0       	push   $0xf01076d8$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	68 51 04 00 00       	push   $0x451$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	e8 44 db ff ff       	call   f0100094 <_panic>$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	89 f8                	mov    %edi,%eax$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	e8 2d e6 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	74 19                	je     f010257b <mem_init+0x11e1>$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	68 fc 76 10 f0       	push   $0xf01076fc$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	68 52 04 00 00       	push   $0x452$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	e8 19 db ff ff       	call   f0100094 <_panic>$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	6a 00                	push   $0x0$/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	53                   	push   %ebx$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	57                   	push   %edi$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	e8 3a eb ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	83 c4 10             	add    $0x10,%esp$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	75 19                	jne    f01025a8 <mem_init+0x120e>$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	68 28 77 10 f0       	push   $0xf0107728$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	68 54 04 00 00       	push   $0x454$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	e8 ec da ff ff       	call   f0100094 <_panic>$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	6a 00                	push   $0x0$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	53                   	push   %ebx$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	e8 08 eb ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	8b 00                	mov    (%eax),%eax$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	83 e0 04             	and    $0x4,%eax$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	74 19                	je     f01025df <mem_init+0x1245>$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	68 6c 77 10 f0       	push   $0xf010776c$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	68 55 04 00 00       	push   $0x455$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	e8 b5 da ff ff       	call   f0100094 <_panic>$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	6a 00                	push   $0x0$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	53                   	push   %ebx$/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f01025eb	obj/kern/kernel.asm	/^f01025eb:	e8 d1 ea ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	6a 00                	push   $0x0$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	e8 b8 ea ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	6a 00                	push   $0x0$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	56                   	push   %esi$/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	e8 a1 ea ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102626	obj/kern/kernel.asm	/^f0102626:	c7 04 24 77 7c 10 f0 	movl   $0xf0107c77,(%esp)$/;"	l
f010262d	obj/kern/kernel.asm	/^f010262d:	e8 5a 11 00 00       	call   f010378c <cprintf>$/;"	l
f0102632	obj/kern/kernel.asm	/^f0102632:	a1 c8 d2 2c f0       	mov    0xf02cd2c8,%eax$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	83 c4 10             	add    $0x10,%esp$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	77 15                	ja     f0102656 <mem_init+0x12bc>$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	50                   	push   %eax$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	68 c6 00 00 00       	push   $0xc6$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	e8 3e da ff ff       	call   f0100094 <_panic>$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	6a 05                	push   $0x5$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	50                   	push   %eax$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	e8 e1 ea ff ff       	call   f0101156 <boot_map_region>$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	a1 44 c2 2a f0       	mov    0xf02ac244,%eax$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010267d	obj/kern/kernel.asm	/^f010267d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	77 15                	ja     f0102699 <mem_init+0x12ff>$/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	50                   	push   %eax$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	68 ce 00 00 00       	push   $0xce$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	e8 fb d9 ff ff       	call   f0100094 <_panic>$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	6a 05                	push   $0x5$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	50                   	push   %eax$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	e8 9e ea ff ff       	call   f0101156 <boot_map_region>$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	77 15                	ja     f01026dc <mem_init+0x1342>$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	50                   	push   %eax$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	68 da 00 00 00       	push   $0xda$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	e8 b8 d9 ff ff       	call   f0100094 <_panic>$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	6a 03                	push   $0x3$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	68 00 90 11 00       	push   $0x119000$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	e8 5c ea ff ff       	call   f0101156 <boot_map_region>$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	c7 45 c4 00 f0 2c f0 	movl   $0xf02cf000,-0x3c(%ebp)$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	bb 00 f0 2c f0       	mov    $0xf02cf000,%ebx$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	77 15                	ja     f010272b <mem_init+0x1391>$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	53                   	push   %ebx$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	68 1e 01 00 00       	push   $0x11e$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	e8 69 d9 ff ff       	call   f0100094 <_panic>$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	6a 02                	push   $0x2$/;"	l
f0102730	obj/kern/kernel.asm	/^f0102730:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	50                   	push   %eax$/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	89 f2                	mov    %esi,%edx$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	e8 0e ea ff ff       	call   f0101156 <boot_map_region>$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	b8 00 f0 30 f0       	mov    $0xf030f000,%eax$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	75 ae                	jne    f010270e <mem_init+0x1374>$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	6a 03                	push   $0x3$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	6a 00                	push   $0x0$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	e8 db e9 ff ff       	call   f0101156 <boot_map_region>$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	8b 3d c4 d2 2c f0    	mov    0xf02cd2c4,%edi$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	a1 c0 d2 2c f0       	mov    0xf02cd2c0,%eax$/;"	l
f0102786	obj/kern/kernel.asm	/^f0102786:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	8b 35 c8 d2 2c f0    	mov    0xf02cd2c8,%esi$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	eb 55                	jmp    f0102800 <mem_init+0x1466>$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	89 f8                	mov    %edi,%eax$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	e8 d2 e3 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	77 15                	ja     f01027d6 <mem_init+0x143c>$/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	56                   	push   %esi$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	68 6d 03 00 00       	push   $0x36d$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	e8 be d8 ff ff       	call   f0100094 <_panic>$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	39 c2                	cmp    %eax,%edx$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	74 19                	je     f01027fa <mem_init+0x1460>$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	68 a0 77 10 f0       	push   $0xf01077a0$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	68 6d 03 00 00       	push   $0x36d$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	e8 9a d8 ff ff       	call   f0100094 <_panic>$/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	77 a6                	ja     f01027ab <mem_init+0x1411>$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	8b 35 44 c2 2a f0    	mov    0xf02ac244,%esi$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	89 da                	mov    %ebx,%edx$/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	89 f8                	mov    %edi,%eax$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	e8 6e e3 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	77 15                	ja     f010283a <mem_init+0x14a0>$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	56                   	push   %esi$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	68 72 03 00 00       	push   $0x372$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	e8 5a d8 ff ff       	call   f0100094 <_panic>$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	39 d0                	cmp    %edx,%eax$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	74 19                	je     f010285e <mem_init+0x14c4>$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	68 d4 77 10 f0       	push   $0xf01077d4$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	68 72 03 00 00       	push   $0x372$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	e8 36 d8 ff ff       	call   f0100094 <_panic>$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102864	obj/kern/kernel.asm	/^f0102864:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	75 a7                	jne    f0102813 <mem_init+0x1479>$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	eb 30                	jmp    f01028a9 <mem_init+0x150f>$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	89 f8                	mov    %edi,%eax$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	e8 04 e3 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	74 19                	je     f01028a3 <mem_init+0x1509>$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	68 08 78 10 f0       	push   $0xf0107808$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	68 76 03 00 00       	push   $0x376$/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	e8 f1 d7 ff ff       	call   f0100094 <_panic>$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	39 f3                	cmp    %esi,%ebx$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	72 cc                	jb     f0102879 <mem_init+0x14df>$/;"	l
f01028ad	obj/kern/kernel.asm	/^f01028ad:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	89 c3                	mov    %eax,%ebx$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	89 da                	mov    %ebx,%edx$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	89 f8                	mov    %edi,%eax$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	e8 b0 e2 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	77 15                	ja     f01028f7 <mem_init+0x155d>$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	56                   	push   %esi$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	68 7e 03 00 00       	push   $0x37e$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	e8 9d d7 ff ff       	call   f0100094 <_panic>$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	8d 94 0b 00 f0 2c f0 	lea    -0xfd31000(%ebx,%ecx,1),%edx$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	39 d0                	cmp    %edx,%eax$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	74 19                	je     f010291e <mem_init+0x1584>$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	68 30 78 10 f0       	push   $0xf0107830$/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	68 7e 03 00 00       	push   $0x37e$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	e8 76 d7 ff ff       	call   f0100094 <_panic>$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	75 a8                	jne    f01028d1 <mem_init+0x1537>$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	89 c6                	mov    %eax,%esi$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	89 da                	mov    %ebx,%edx$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	89 f8                	mov    %edi,%eax$/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	e8 4a e2 ff ff       	call   f0100b8a <check_va2pa>$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	74 19                	je     f010295e <mem_init+0x15c4>$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	68 78 78 10 f0       	push   $0xf0107878$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010294f	obj/kern/kernel.asm	/^f010294f:	68 80 03 00 00       	push   $0x380$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102959	obj/kern/kernel.asm	/^f0102959:	e8 36 d7 ff ff       	call   f0100094 <_panic>$/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	75 cf                	jne    f0102937 <mem_init+0x159d>$/;"	l
f0102968	obj/kern/kernel.asm	/^f0102968:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	b8 00 f0 30 f0       	mov    $0xf030f000,%eax$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	39 f0                	cmp    %esi,%eax$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	0f 85 2c ff ff ff    	jne    f01028b8 <mem_init+0x151e>$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	eb 2a                	jmp    f01029bd <mem_init+0x1623>$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	77 1f                	ja     f01029bd <mem_init+0x1623>$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	75 7e                	jne    f0102a22 <mem_init+0x1688>$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	68 90 7c 10 f0       	push   $0xf0107c90$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	68 8b 03 00 00       	push   $0x38b$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	e8 d7 d6 ff ff       	call   f0100094 <_panic>$/;"	l
f01029bd	obj/kern/kernel.asm	/^f01029bd:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	76 3f                	jbe    f0102a03 <mem_init+0x1669>$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	75 19                	jne    f01029e5 <mem_init+0x164b>$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	68 90 7c 10 f0       	push   $0xf0107c90$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	68 8f 03 00 00       	push   $0x38f$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	e8 af d6 ff ff       	call   f0100094 <_panic>$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	75 38                	jne    f0102a22 <mem_init+0x1688>$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	68 a1 7c 10 f0       	push   $0xf0107ca1$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	68 90 03 00 00       	push   $0x390$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f01029fe	obj/kern/kernel.asm	/^f01029fe:	e8 91 d6 ff ff       	call   f0100094 <_panic>$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	74 19                	je     f0102a22 <mem_init+0x1688>$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	68 b2 7c 10 f0       	push   $0xf0107cb2$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	68 92 03 00 00       	push   $0x392$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	e8 72 d6 ff ff       	call   f0100094 <_panic>$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	0f 86 63 ff ff ff    	jbe    f0102993 <mem_init+0x15f9>$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	68 9c 78 10 f0       	push   $0xf010789c$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	e8 4f 0d 00 00       	call   f010378c <cprintf>$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	77 15                	ja     f0102a61 <mem_init+0x16c7>$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	50                   	push   %eax$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	68 f6 00 00 00       	push   $0xf6$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	e8 33 d6 ff ff       	call   f0100094 <_panic>$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	e8 7b e1 ff ff       	call   f0100bee <check_page_free_list>$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102a79	obj/kern/kernel.asm	/^f0102a79:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102a81	obj/kern/kernel.asm	/^f0102a81:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	6a 00                	push   $0x0$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	e8 62 e5 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	89 c3                	mov    %eax,%ebx$/;"	l
f0102a8d	obj/kern/kernel.asm	/^f0102a8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	85 c0                	test   %eax,%eax$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	75 19                	jne    f0102aad <mem_init+0x1713>$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	68 9c 7a 10 f0       	push   $0xf0107a9c$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	68 6a 04 00 00       	push   $0x46a$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	e8 e7 d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	6a 00                	push   $0x0$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	e8 36 e5 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	89 c7                	mov    %eax,%edi$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	85 c0                	test   %eax,%eax$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	75 19                	jne    f0102ad9 <mem_init+0x173f>$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	68 b2 7a 10 f0       	push   $0xf0107ab2$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	68 6b 04 00 00       	push   $0x46b$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	e8 bb d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	6a 00                	push   $0x0$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	e8 0a e5 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	89 c6                	mov    %eax,%esi$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	85 c0                	test   %eax,%eax$/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	75 19                	jne    f0102b05 <mem_init+0x176b>$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	68 c8 7a 10 f0       	push   $0xf0107ac8$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	68 6c 04 00 00       	push   $0x46c$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	e8 8f d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	53                   	push   %ebx$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	e8 4f e5 ff ff       	call   f010105d <page_free>$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	89 f8                	mov    %edi,%eax$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	89 c2                	mov    %eax,%edx$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	72 12                	jb     f0102b3e <mem_init+0x17a4>$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	50                   	push   %eax$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	6a 58                	push   $0x58$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	e8 56 d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	6a 01                	push   $0x1$/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	50                   	push   %eax$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	e8 f4 2a 00 00       	call   f0105647 <memset>$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	89 f0                	mov    %esi,%eax$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	89 c2                	mov    %eax,%edx$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	72 12                	jb     f0102b83 <mem_init+0x17e9>$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	50                   	push   %eax$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	6a 58                	push   $0x58$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	e8 11 d5 ff ff       	call   f0100094 <_panic>$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	6a 02                	push   $0x2$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102b92	obj/kern/kernel.asm	/^f0102b92:	50                   	push   %eax$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	e8 af 2a 00 00       	call   f0105647 <memset>$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	6a 02                	push   $0x2$/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	57                   	push   %edi$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	e8 10 e7 ff ff       	call   f01012bb <page_insert>$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	74 19                	je     f0102bce <mem_init+0x1834>$/;"	l
f0102bb5	obj/kern/kernel.asm	/^f0102bb5:	68 99 7b 10 f0       	push   $0xf0107b99$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	68 71 04 00 00       	push   $0x471$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	e8 c6 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	01 01 01 $/;"	l
f0102bd8	obj/kern/kernel.asm	/^f0102bd8:	74 19                	je     f0102bf3 <mem_init+0x1859>$/;"	l
f0102bda	obj/kern/kernel.asm	/^f0102bda:	68 bc 78 10 f0       	push   $0xf01078bc$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	68 72 04 00 00       	push   $0x472$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	e8 a1 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	6a 02                	push   $0x2$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	56                   	push   %esi$/;"	l
f0102bfb	obj/kern/kernel.asm	/^f0102bfb:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	e8 b5 e6 ff ff       	call   f01012bb <page_insert>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	02 02 02 $/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	74 19                	je     f0102c2e <mem_init+0x1894>$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	68 e0 78 10 f0       	push   $0xf01078e0$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	68 74 04 00 00       	push   $0x474$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	e8 66 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	74 19                	je     f0102c4e <mem_init+0x18b4>$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	68 bb 7b 10 f0       	push   $0xf0107bbb$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	68 75 04 00 00       	push   $0x475$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	e8 46 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	74 19                	je     f0102c6e <mem_init+0x18d4>$/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	68 25 7c 10 f0       	push   $0xf0107c25$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	68 76 04 00 00       	push   $0x476$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	e8 26 d4 ff ff       	call   f0100094 <_panic>$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	03 03 03 $/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	89 f0                	mov    %esi,%eax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c86	obj/kern/kernel.asm	/^f0102c86:	89 c2                	mov    %eax,%edx$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	3b 15 c0 d2 2c f0    	cmp    0xf02cd2c0,%edx$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	72 12                	jb     f0102ca5 <mem_init+0x190b>$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	50                   	push   %eax$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	6a 58                	push   $0x58$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	e8 ef d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	03 03 03 $/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	74 19                	je     f0102cca <mem_init+0x1930>$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	68 04 79 10 f0       	push   $0xf0107904$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	68 78 04 00 00       	push   $0x478$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	e8 ca d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	ff 35 c4 d2 2c f0    	pushl  0xf02cd2c4$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	e8 8d e5 ff ff       	call   f010126a <page_remove>$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	74 19                	je     f0102d00 <mem_init+0x1966>$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	68 f3 7b 10 f0       	push   $0xf0107bf3$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	68 7a 04 00 00       	push   $0x47a$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	e8 94 d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	8b 0d c4 d2 2c f0    	mov    0xf02cd2c4,%ecx$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	89 d8                	mov    %ebx,%eax$/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	2b 05 c8 d2 2c f0    	sub    0xf02cd2c8,%eax$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	39 c2                	cmp    %eax,%edx$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	74 19                	je     f0102d39 <mem_init+0x199f>$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	68 8c 72 10 f0       	push   $0xf010728c$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	68 7d 04 00 00       	push   $0x47d$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	e8 5b d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	74 19                	je     f0102d5f <mem_init+0x19c5>$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	68 aa 7b 10 f0       	push   $0xf0107baa$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	68 7f 04 00 00       	push   $0x47f$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	68 91 79 10 f0       	push   $0xf0107991$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	e8 35 d3 ff ff       	call   f0100094 <_panic>$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	53                   	push   %ebx$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	e8 ef e2 ff ff       	call   f010105d <page_free>$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	c7 04 24 30 79 10 f0 	movl   $0xf0107930,(%esp)$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	e8 12 0a 00 00       	call   f010378c <cprintf>$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	5b                   	pop    %ebx$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	5e                   	pop    %esi$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	5f                   	pop    %edi$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	5d                   	pop    %ebp$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	c3                   	ret    $/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85 <user_mem_check>:$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	55                   	push   %ebp$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	57                   	push   %edi$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	56                   	push   %esi$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	53                   	push   %ebx$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102d91	obj/kern/kernel.asm	/^f0102d91:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	eb 43                	jmp    f0102df5 <user_mem_check+0x70>$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	6a 00                	push   $0x0$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	53                   	push   %ebx$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	e8 01 e3 ff ff       	call   f01010c1 <pgdir_walk>$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	77 10                	ja     f0102ddb <user_mem_check+0x56>$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	85 c0                	test   %eax,%eax$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	74 0c                	je     f0102ddb <user_mem_check+0x56>$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	8b 00                	mov    (%eax),%eax$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	a8 01                	test   $0x1,%al$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	74 06                	je     f0102ddb <user_mem_check+0x56>$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	21 f0                	and    %esi,%eax$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	39 c6                	cmp    %eax,%esi$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	74 14                	je     f0102def <user_mem_check+0x6a>$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	0f 42 5d 0c          	cmovb  0xc(%ebp),%ebx$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	89 1d 3c c2 2a f0    	mov    %ebx,0xf02ac23c$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	eb 10                	jmp    f0102dff <user_mem_check+0x7a>$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	72 b8                	jb     f0102db2 <user_mem_check+0x2d>$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	5b                   	pop    %ebx$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	5e                   	pop    %esi$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	5f                   	pop    %edi$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	5d                   	pop    %ebp$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	c3                   	ret    $/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07 <user_mem_assert>:$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	55                   	push   %ebp$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e0a	obj/kern/kernel.asm	/^f0102e0a:	53                   	push   %ebx$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	50                   	push   %eax$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	53                   	push   %ebx$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	e8 61 ff ff ff       	call   f0102d85 <user_mem_check>$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	85 c0                	test   %eax,%eax$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	79 21                	jns    f0102e4c <user_mem_assert+0x45>$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	ff 35 3c c2 2a f0    	pushl  0xf02ac23c$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	68 5c 79 10 f0       	push   $0xf010795c$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	e8 4b 09 00 00       	call   f010378c <cprintf>$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	e8 3d 06 00 00       	call   f0103486 <env_destroy>$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	c9                   	leave  $/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	c3                   	ret    $/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51 <region_alloc>:$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	55                   	push   %ebp$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	57                   	push   %edi$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	56                   	push   %esi$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	53                   	push   %ebx$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	89 c7                	mov    %eax,%edi$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	89 d3                	mov    %edx,%ebx$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	eb 58                	jmp    f0102ecb <region_alloc+0x7a>$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	6a 00                	push   $0x0$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	e8 70 e1 ff ff       	call   f0100fed <page_alloc>$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	85 c0                	test   %eax,%eax$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	75 17                	jne    f0102e9b <region_alloc+0x4a>$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	68 c0 7c 10 f0       	push   $0xf0107cc0$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	68 3e 01 00 00       	push   $0x13e$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	e8 f9 d1 ff ff       	call   f0100094 <_panic>$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	6a 06                	push   $0x6$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	53                   	push   %ebx$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	50                   	push   %eax$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	e8 14 e4 ff ff       	call   f01012bb <page_insert>$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	85 c0                	test   %eax,%eax$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	74 17                	je     f0102ec5 <region_alloc+0x74>$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	68 e0 7c 10 f0       	push   $0xf0107ce0$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	68 40 01 00 00       	push   $0x140$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	e8 cf d1 ff ff       	call   f0100094 <_panic>$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	72 a4                	jb     f0102e73 <region_alloc+0x22>$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	5b                   	pop    %ebx$/;"	l
f0102ed3	obj/kern/kernel.asm	/^f0102ed3:	5e                   	pop    %esi$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	5f                   	pop    %edi$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	5d                   	pop    %ebp$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	c3                   	ret    $/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7 <envid2env>:$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	55                   	push   %ebp$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	89 e5                	mov    %esp,%ebp$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	56                   	push   %esi$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	53                   	push   %ebx$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	85 c0                	test   %eax,%eax$/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	75 1a                	jne    f0102f00 <envid2env+0x29>$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	e8 7f 2d 00 00       	call   f0105c6a <cpunum>$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	eb 70                	jmp    f0102f70 <envid2env+0x99>$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	89 c3                	mov    %eax,%ebx$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	03 1d 44 c2 2a f0    	add    0xf02ac244,%ebx$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	74 05                	je     f0102f1c <envid2env+0x45>$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	74 10                	je     f0102f2c <envid2env+0x55>$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	eb 44                	jmp    f0102f70 <envid2env+0x99>$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	84 d2                	test   %dl,%dl$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	74 36                	je     f0102f66 <envid2env+0x8f>$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	e8 35 2d 00 00       	call   f0105c6a <cpunum>$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	3b 98 28 e0 2c f0    	cmp    -0xfd31fd8(%eax),%ebx$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	74 26                	je     f0102f66 <envid2env+0x8f>$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	e8 22 2d 00 00       	call   f0105c6a <cpunum>$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	74 10                	je     f0102f66 <envid2env+0x8f>$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	eb 0a                	jmp    f0102f70 <envid2env+0x99>$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	5b                   	pop    %ebx$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	5e                   	pop    %esi$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	5d                   	pop    %ebp$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	c3                   	ret    $/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74 <env_init_percpu>:$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	55                   	push   %ebp$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	b8 20 33 12 f0       	mov    $0xf0123320,%eax$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	8e e8                	mov    %eax,%gs$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	8e e0                	mov    %eax,%fs$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	8e c0                	mov    %eax,%es$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	8e d8                	mov    %eax,%ds$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	8e d0                	mov    %eax,%ss$/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	ea 9a 2f 10 f0 08 00 	ljmp   $0x8,$0xf0102f9a$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	0f 00 d0             	lldt   %ax$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	5d                   	pop    %ebp$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	c3                   	ret    $/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4 <env_init>:$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	55                   	push   %ebp$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	56                   	push   %esi$/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8:	53                   	push   %ebx$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	8b 35 48 c2 2a f0    	mov    0xf02ac248,%esi$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	a1 44 c2 2a f0       	mov    0xf02ac244,%eax$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	89 c1                	mov    %eax,%ecx$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	85 d2                	test   %edx,%edx$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	74 22                	je     f0102ff4 <env_init+0x50>$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	89 40 c8             	mov    %eax,-0x38(%eax)$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	75 db                	jne    f0102fbe <env_init+0x1a>$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	84 db                	test   %bl,%bl$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	74 06                	je     f0102fed <env_init+0x49>$/;"	l
f0102fe7	obj/kern/kernel.asm	/^f0102fe7:	89 35 48 c2 2a f0    	mov    %esi,0xf02ac248$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	e8 82 ff ff ff       	call   f0102f74 <env_init_percpu>$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	eb 0f                	jmp    f0103003 <env_init+0x5f>$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	89 ce                	mov    %ecx,%esi$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	eb bb                	jmp    f0102fbe <env_init+0x1a>$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	5b                   	pop    %ebx$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	5e                   	pop    %esi$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	5d                   	pop    %ebp$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	c3                   	ret    $/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007 <env_alloc>:$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	55                   	push   %ebp$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	89 e5                	mov    %esp,%ebp$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	53                   	push   %ebx$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	8b 1d 48 c2 2a f0    	mov    0xf02ac248,%ebx$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	85 db                	test   %ebx,%ebx$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	0f 84 4b 01 00 00    	je     f0103167 <env_alloc+0x160>$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f:	6a 01                	push   $0x1$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	e8 c7 df ff ff       	call   f0100fed <page_alloc>$/;"	l
f0103026	obj/kern/kernel.asm	/^f0103026:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	85 c0                	test   %eax,%eax$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	0f 84 3d 01 00 00    	je     f010316e <env_alloc+0x167>$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	89 c2                	mov    %eax,%edx$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	2b 15 c8 d2 2c f0    	sub    0xf02cd2c8,%edx$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	89 d1                	mov    %edx,%ecx$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	3b 0d c0 d2 2c f0    	cmp    0xf02cd2c0,%ecx$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	72 12                	jb     f010305e <env_alloc+0x57>$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	52                   	push   %edx$/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	6a 58                	push   $0x58$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	e8 36 d0 ff ff       	call   f0100094 <_panic>$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	c7 04 02 00 00 00 00 	movl   $0x0,(%edx,%eax,1)$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	83 c0 04             	add    $0x4,%eax$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	75 ec                	jne    f0103071 <env_alloc+0x6a>$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	8b 15 c4 d2 2c f0    	mov    0xf02cd2c4,%edx$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0103094	obj/kern/kernel.asm	/^f0103094:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	75 e7                	jne    f0103085 <env_alloc+0x7e>$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	77 15                	ja     f01030bd <env_alloc+0xb6>$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	50                   	push   %eax$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	68 d8 00 00 00       	push   $0xd8$/;"	l
f01030b3	obj/kern/kernel.asm	/^f01030b3:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	e8 d7 cf ff ff       	call   f0100094 <_panic>$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	83 ca 05             	or     $0x5,%edx$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	89 da                	mov    %ebx,%edx$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	2b 15 44 c2 2a f0    	sub    0xf02ac244,%edx$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	09 d0                	or     %edx,%eax$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	6a 44                	push   $0x44$/;"	l
f0103117	obj/kern/kernel.asm	/^f0103117:	6a 00                	push   $0x0$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	53                   	push   %ebx$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	e8 28 25 00 00       	call   f0105647 <memset>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	a3 48 c2 2a f0       	mov    %eax,0xf02ac248$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010315b	obj/kern/kernel.asm	/^f010315b:	89 18                	mov    %ebx,(%eax)$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	eb 0c                	jmp    f0103173 <env_alloc+0x16c>$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	eb 05                	jmp    f0103173 <env_alloc+0x16c>$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	c9                   	leave  $/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	c3                   	ret    $/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178 <env_create>:$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	55                   	push   %ebp$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	89 e5                	mov    %esp,%ebp$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	57                   	push   %edi$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	56                   	push   %esi$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	53                   	push   %ebx$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	6a 00                	push   $0x0$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	50                   	push   %eax$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	e8 78 fe ff ff       	call   f0103007 <env_alloc>$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	85 c0                	test   %eax,%eax$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	74 15                	je     f01031ab <env_create+0x33>$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	50                   	push   %eax$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	68 f7 7c 10 f0       	push   $0xf0107cf7$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	68 c4 01 00 00       	push   $0x1c4$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	e8 e9 ce ff ff       	call   f0100094 <_panic>$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	74 17                	je     f01031d0 <env_create+0x58>$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	68 38 7d 10 f0       	push   $0xf0107d38$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	68 87 01 00 00       	push   $0x187$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	e8 c4 ce ff ff       	call   f0100094 <_panic>$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	85 c0                	test   %eax,%eax$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	75 17                	jne    f01031ee <env_create+0x76>$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	68 58 7d 10 f0       	push   $0xf0107d58$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	68 8c 01 00 00       	push   $0x18c$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	e8 a6 ce ff ff       	call   f0100094 <_panic>$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01031f1	obj/kern/kernel.asm	/^f01031f1:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	77 15                	ja     f0103213 <env_create+0x9b>$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	50                   	push   %eax$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	68 94 01 00 00       	push   $0x194$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	e8 81 ce ff ff       	call   f0100094 <_panic>$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	89 fb                	mov    %edi,%ebx$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	01 de                	add    %ebx,%esi$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	eb 59                	jmp    f0103284 <env_create+0x10c>$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	75 51                	jne    f0103281 <env_create+0x109>$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	3b 4b 10             	cmp    0x10(%ebx),%ecx$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	73 17                	jae    f010324f <env_create+0xd7>$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	68 12 7d 10 f0       	push   $0xf0107d12$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	68 a0 01 00 00       	push   $0x1a0$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	e8 45 ce ff ff       	call   f0100094 <_panic>$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	e8 f7 fb ff ff       	call   f0102e51 <region_alloc>$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	6a 00                	push   $0x0$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	e8 dd 23 00 00       	call   f0105647 <memset>$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	89 f8                	mov    %edi,%eax$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	50                   	push   %eax$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	e8 7e 24 00 00       	call   f01056fc <memcpy>$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	39 de                	cmp    %ebx,%esi$/;"	l
f0103286	obj/kern/kernel.asm	/^f0103286:	77 a3                	ja     f010322b <env_create+0xb3>$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	77 15                	ja     f01032a9 <env_create+0x131>$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	50                   	push   %eax$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	68 a8 01 00 00       	push   $0x1a8$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	e8 eb cd ff ff       	call   f0100094 <_panic>$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	e8 8e fb ff ff       	call   f0102e51 <region_alloc>$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	89 78 50             	mov    %edi,0x50(%eax)$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	75 07                	jne    f01032d8 <env_create+0x160>$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	5b                   	pop    %ebx$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	5e                   	pop    %esi$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	5f                   	pop    %edi$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	5d                   	pop    %ebp$/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	c3                   	ret    $/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0 <env_free>:$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	55                   	push   %ebp$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	57                   	push   %edi$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	56                   	push   %esi$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	53                   	push   %ebx$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	e8 79 29 00 00       	call   f0105c6a <cpunum>$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	39 b8 28 e0 2c f0    	cmp    %edi,-0xfd31fd8(%eax)$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	75 30                	jne    f0103333 <env_free+0x53>$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	77 15                	ja     f0103324 <env_free+0x44>$/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	50                   	push   %eax$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	68 dc 01 00 00       	push   $0x1dc$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	e8 70 cd ff ff       	call   f0100094 <_panic>$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	89 d0                	mov    %edx,%eax$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	0f 84 a8 00 00 00    	je     f01033f8 <env_free+0x118>$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	89 f0                	mov    %esi,%eax$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	39 05 c0 d2 2c f0    	cmp    %eax,0xf02cd2c0$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	77 15                	ja     f010337b <env_free+0x9b>$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	56                   	push   %esi$/;"	l
f0103367	obj/kern/kernel.asm	/^f0103367:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	68 eb 01 00 00       	push   $0x1eb$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	e8 19 cd ff ff       	call   f0100094 <_panic>$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103390	obj/kern/kernel.asm	/^f0103390:	01 $/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	74 17                	je     f01033aa <env_free+0xca>$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	89 d8                	mov    %ebx,%eax$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	50                   	push   %eax$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	e8 c3 de ff ff       	call   f010126a <page_remove>$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033aa	obj/kern/kernel.asm	/^f01033aa:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	75 d4                	jne    f0103389 <env_free+0xa9>$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	3b 05 c0 d2 2c f0    	cmp    0xf02cd2c0,%eax$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	72 14                	jb     f01033e1 <env_free+0x101>$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	68 2c 71 10 f0       	push   $0xf010712c$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	6a 51                	push   $0x51$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	e8 b3 cc ff ff       	call   f0100094 <_panic>$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	a1 c8 d2 2c f0       	mov    0xf02cd2c8,%eax$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	50                   	push   %eax$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	e8 a5 dc ff ff       	call   f010109a <page_decref>$/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	0f 85 29 ff ff ff    	jne    f0103333 <env_free+0x53>$/;"	l
f010340a	obj/kern/kernel.asm	/^f010340a:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	77 15                	ja     f0103429 <env_free+0x149>$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	50                   	push   %eax$/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	68 f9 01 00 00       	push   $0x1f9$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f0103424	obj/kern/kernel.asm	/^f0103424:	e8 6b cc ff ff       	call   f0100094 <_panic>$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	3b 05 c0 d2 2c f0    	cmp    0xf02cd2c0,%eax$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	72 14                	jb     f0103454 <env_free+0x174>$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	68 2c 71 10 f0       	push   $0xf010712c$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	6a 51                	push   $0x51$/;"	l
f010344a	obj/kern/kernel.asm	/^f010344a:	68 9d 79 10 f0       	push   $0xf010799d$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	e8 40 cc ff ff       	call   f0100094 <_panic>$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	8b 15 c8 d2 2c f0    	mov    0xf02cd2c8,%edx$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	50                   	push   %eax$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	e8 34 dc ff ff       	call   f010109a <page_decref>$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	a1 48 c2 2a f0       	mov    0xf02ac248,%eax$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	89 3d 48 c2 2a f0    	mov    %edi,0xf02ac248$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	5b                   	pop    %ebx$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	5e                   	pop    %esi$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	5f                   	pop    %edi$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	5d                   	pop    %ebp$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	c3                   	ret    $/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486 <env_destroy>:$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	55                   	push   %ebp$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	89 e5                	mov    %esp,%ebp$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	53                   	push   %ebx$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010348d	obj/kern/kernel.asm	/^f010348d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	75 19                	jne    f01034af <env_destroy+0x29>$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	e8 cf 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	3b 98 28 e0 2c f0    	cmp    -0xfd31fd8(%eax),%ebx$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	74 09                	je     f01034af <env_destroy+0x29>$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	eb 33                	jmp    f01034e2 <env_destroy+0x5c>$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	53                   	push   %ebx$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	e8 28 fe ff ff       	call   f01032e0 <env_free>$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	e8 ad 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	3b 98 28 e0 2c f0    	cmp    -0xfd31fd8(%eax),%ebx$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	75 17                	jne    f01034e2 <env_destroy+0x5c>$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	e8 9a 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	c7 80 28 e0 2c f0 00 	movl   $0x0,-0xfd31fd8(%eax)$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	00 00 00 $/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	e8 a8 0e 00 00       	call   f010438a <sched_yield>$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	c9                   	leave  $/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	c3                   	ret    $/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7 <env_pop_tf>:$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	55                   	push   %ebp$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	53                   	push   %ebx$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	e8 77 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	8b 98 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%ebx$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	e8 69 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	61                   	popa   $/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	07                   	pop    %es$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	1f                   	pop    %ds$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	cf                   	iret   $/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	68 2a 7d 10 f0       	push   $0xf0107d2a$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	68 31 02 00 00       	push   $0x231$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	e8 6f cb ff ff       	call   f0100094 <_panic>$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525 <env_run>:$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	55                   	push   %ebp$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	89 e5                	mov    %esp,%ebp$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	e8 3a 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	83 b8 28 e0 2c f0 00 	cmpl   $0x0,-0xfd31fd8(%eax)$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	74 29                	je     f0103565 <env_run+0x40>$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	e8 29 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	75 15                	jne    f0103565 <env_run+0x40>$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	e8 15 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	e8 00 27 00 00       	call   f0105c6a <cpunum>$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	89 90 28 e0 2c f0    	mov    %edx,-0xfd31fd8(%eax)$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	e8 ef 26 00 00       	call   f0105c6a <cpunum>$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	e8 da 26 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	e8 c8 26 00 00       	call   f0105c6a <cpunum>$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	77 15                	ja     f01035ca <env_run+0xa5>$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	50                   	push   %eax$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	68 59 02 00 00       	push   $0x259$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	68 d5 7c 10 f0       	push   $0xf0107cd5$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	e8 ca ca ff ff       	call   f0100094 <_panic>$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	e8 96 29 00 00       	call   f0105f75 <spin_unlock>$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	f3 90                	pause  $/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	e8 84 26 00 00       	call   f0105c6a <cpunum>$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	83 c4 04             	add    $0x4,%esp$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	e8 f0 fe ff ff       	call   f01034e7 <env_pop_tf>$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7 <mc146818_read>:$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	55                   	push   %ebp$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	ee                   	out    %al,(%dx)$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	ec                   	in     (%dx),%al$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	5d                   	pop    %ebp$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	c3                   	ret    $/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e <mc146818_write>:$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	55                   	push   %ebp$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	ee                   	out    %al,(%dx)$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	ee                   	out    %al,(%dx)$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	5d                   	pop    %ebp$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	c3                   	ret    $/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625 <irq_setmask_8259A>:$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	55                   	push   %ebp$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	89 e5                	mov    %esp,%ebp$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	56                   	push   %esi$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	53                   	push   %ebx$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	66 a3 a8 33 12 f0    	mov    %ax,0xf01233a8$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	80 3d 4c c2 2a f0 00 	cmpb   $0x0,0xf02ac24c$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	74 5a                	je     f0103696 <irq_setmask_8259A+0x71>$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	89 c6                	mov    %eax,%esi$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	ee                   	out    %al,(%dx)$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	ee                   	out    %al,(%dx)$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	68 9b 7d 10 f0       	push   $0xf0107d9b$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	e8 31 01 00 00       	call   f010378c <cprintf>$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	f7 d6                	not    %esi$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	0f a3 de             	bt     %ebx,%esi$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	73 11                	jae    f010367e <irq_setmask_8259A+0x59>$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	53                   	push   %ebx$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	68 53 82 10 f0       	push   $0xf0108253$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	e8 11 01 00 00       	call   f010378c <cprintf>$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	75 e2                	jne    f0103668 <irq_setmask_8259A+0x43>$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	68 f5 7c 10 f0       	push   $0xf0107cf5$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	e8 f9 00 00 00       	call   f010378c <cprintf>$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	5b                   	pop    %ebx$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	5e                   	pop    %esi$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	5d                   	pop    %ebp$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	c3                   	ret    $/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d <pic_init>:$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	c6 05 4c c2 2a f0 01 	movb   $0x1,0xf02ac24c$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	ee                   	out    %al,(%dx)$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	ee                   	out    %al,(%dx)$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	ee                   	out    %al,(%dx)$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01036ca	obj/kern/kernel.asm	/^f01036ca:	ee                   	out    %al,(%dx)$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	ee                   	out    %al,(%dx)$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	ee                   	out    %al,(%dx)$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f01036dc	obj/kern/kernel.asm	/^f01036dc:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	ee                   	out    %al,(%dx)$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	ee                   	out    %al,(%dx)$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	ee                   	out    %al,(%dx)$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	ee                   	out    %al,(%dx)$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	ee                   	out    %al,(%dx)$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	ee                   	out    %al,(%dx)$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	ee                   	out    %al,(%dx)$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	ee                   	out    %al,(%dx)$/;"	l
f010371b	obj/kern/kernel.asm	/^f010371b:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	74 13                	je     f010373b <pic_init+0x9e>$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	55                   	push   %ebp$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	89 e5                	mov    %esp,%ebp$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	50                   	push   %eax$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	e8 ee fe ff ff       	call   f0103625 <irq_setmask_8259A>$/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	83 c4 10             	add    $0x10,%esp$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	c9                   	leave  $/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	f3 c3                	repz ret $/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d <irq_eoi>:$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	55                   	push   %ebp$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	ee                   	out    %al,(%dx)$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	ee                   	out    %al,(%dx)$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	5d                   	pop    %ebp$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	c3                   	ret    $/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753 <putch>:$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	55                   	push   %ebp$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	89 e5                	mov    %esp,%ebp$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	e8 a2 d0 ff ff       	call   f0100803 <cputchar>$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	c9                   	leave  $/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	c3                   	ret    $/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766 <vcprintf>:$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	55                   	push   %ebp$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	89 e5                	mov    %esp,%ebp$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	50                   	push   %eax$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	68 53 37 10 f0       	push   $0xf0103753$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	e8 83 17 00 00       	call   f0104f0a <vprintfmt>$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	c9                   	leave  $/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	c3                   	ret    $/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c <cprintf>:$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	55                   	push   %ebp$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	89 e5                	mov    %esp,%ebp$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	50                   	push   %eax$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	e8 c8 ff ff ff       	call   f0103766 <vcprintf>$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	c9                   	leave  $/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	c3                   	ret    $/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0 <trap_init_percpu>:$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	55                   	push   %ebp$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	57                   	push   %edi$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	56                   	push   %esi$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	53                   	push   %ebx$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	e8 bc 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	89 c6                	mov    %eax,%esi$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	e8 b5 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	89 f1                	mov    %esi,%ecx$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	29 ca                	sub    %ecx,%edx$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	89 90 30 e0 2c f0    	mov    %edx,-0xfd31fd0(%eax)$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	e8 9b 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	66 c7 80 34 e0 2c f0 	movw   $0x10,-0xfd31fcc(%eax)$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	10 00 $/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	e8 8a 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	66 c7 80 92 e0 2c f0 	movw   $0x68,-0xfd31f6e(%eax)$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	68 00 $/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	8d 5e 05             	lea    0x5(%esi),%ebx$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	e8 76 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	89 c7                	mov    %eax,%edi$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	e8 6f 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	e8 67 24 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	66 c7 04 dd 40 33 12 	movw   $0x67,-0xfedccc0(,%ebx,8)$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	f0 67 00 $/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	81 c7 2c e0 2c f0    	add    $0xf02ce02c,%edi$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	66 89 3c dd 42 33 12 	mov    %di,-0xfedccbe(,%ebx,8)$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	f0 $/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	81 c2 2c e0 2c f0    	add    $0xf02ce02c,%edx$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	88 14 dd 44 33 12 f0 	mov    %dl,-0xfedccbc(,%ebx,8)$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	c6 04 dd 46 33 12 f0 	movb   $0x40,-0xfedccba(,%ebx,8)$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	40 $/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	05 2c e0 2c f0       	add    $0xf02ce02c,%eax$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	88 04 dd 47 33 12 f0 	mov    %al,-0xfedccb9(,%ebx,8)$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	c6 04 dd 45 33 12 f0 	movb   $0x89,-0xfedccbb(,%ebx,8)$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	89 $/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	8d 34 f5 28 00 00 00 	lea    0x28(,%esi,8),%esi$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	0f 00 de             	ltr    %si$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	b8 ac 33 12 f0       	mov    $0xf01233ac,%eax$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	5b                   	pop    %ebx$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	5e                   	pop    %esi$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	5f                   	pop    %edi$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	5d                   	pop    %ebp$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	c3                   	ret    $/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e <trap_init>:$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	55                   	push   %ebp$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	b8 16 42 10 f0       	mov    $0xf0104216,%eax$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	66 a3 60 c2 2a f0    	mov    %ax,0xf02ac260$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	66 c7 05 62 c2 2a f0 	movw   $0x8,0xf02ac262$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	08 00 $/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	c6 05 64 c2 2a f0 00 	movb   $0x0,0xf02ac264$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	c6 05 65 c2 2a f0 8e 	movb   $0x8e,0xf02ac265$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	66 a3 66 c2 2a f0    	mov    %ax,0xf02ac266$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	b8 20 42 10 f0       	mov    $0xf0104220,%eax$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	66 a3 68 c2 2a f0    	mov    %ax,0xf02ac268$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	66 c7 05 6a c2 2a f0 	movw   $0x8,0xf02ac26a$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	08 00 $/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	c6 05 6c c2 2a f0 00 	movb   $0x0,0xf02ac26c$/;"	l
f01038ba	obj/kern/kernel.asm	/^f01038ba:	c6 05 6d c2 2a f0 8e 	movb   $0x8e,0xf02ac26d$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	66 a3 6e c2 2a f0    	mov    %ax,0xf02ac26e$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	b8 26 42 10 f0       	mov    $0xf0104226,%eax$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	66 a3 70 c2 2a f0    	mov    %ax,0xf02ac270$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	66 c7 05 72 c2 2a f0 	movw   $0x8,0xf02ac272$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	08 00 $/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	c6 05 74 c2 2a f0 00 	movb   $0x0,0xf02ac274$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	c6 05 75 c2 2a f0 8e 	movb   $0x8e,0xf02ac275$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	66 a3 76 c2 2a f0    	mov    %ax,0xf02ac276$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	b8 2c 42 10 f0       	mov    $0xf010422c,%eax$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	66 a3 78 c2 2a f0    	mov    %ax,0xf02ac278$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	66 c7 05 7a c2 2a f0 	movw   $0x8,0xf02ac27a$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	08 00 $/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	c6 05 7c c2 2a f0 00 	movb   $0x0,0xf02ac27c$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	c6 05 7d c2 2a f0 ee 	movb   $0xee,0xf02ac27d$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	66 a3 7e c2 2a f0    	mov    %ax,0xf02ac27e$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	b8 32 42 10 f0       	mov    $0xf0104232,%eax$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	66 a3 80 c2 2a f0    	mov    %ax,0xf02ac280$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	66 c7 05 82 c2 2a f0 	movw   $0x8,0xf02ac282$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	08 00 $/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	c6 05 84 c2 2a f0 00 	movb   $0x0,0xf02ac284$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	c6 05 85 c2 2a f0 8e 	movb   $0x8e,0xf02ac285$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	66 a3 86 c2 2a f0    	mov    %ax,0xf02ac286$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	b8 38 42 10 f0       	mov    $0xf0104238,%eax$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	66 a3 88 c2 2a f0    	mov    %ax,0xf02ac288$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	66 c7 05 8a c2 2a f0 	movw   $0x8,0xf02ac28a$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	08 00 $/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	c6 05 8c c2 2a f0 00 	movb   $0x0,0xf02ac28c$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	c6 05 8d c2 2a f0 8e 	movb   $0x8e,0xf02ac28d$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	66 a3 8e c2 2a f0    	mov    %ax,0xf02ac28e$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	b8 3e 42 10 f0       	mov    $0xf010423e,%eax$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	66 a3 90 c2 2a f0    	mov    %ax,0xf02ac290$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	66 c7 05 92 c2 2a f0 	movw   $0x8,0xf02ac292$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	08 00 $/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	c6 05 94 c2 2a f0 00 	movb   $0x0,0xf02ac294$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	c6 05 95 c2 2a f0 8e 	movb   $0x8e,0xf02ac295$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	66 a3 96 c2 2a f0    	mov    %ax,0xf02ac296$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	b8 44 42 10 f0       	mov    $0xf0104244,%eax$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	66 a3 98 c2 2a f0    	mov    %ax,0xf02ac298$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	66 c7 05 9a c2 2a f0 	movw   $0x8,0xf02ac29a$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	08 00 $/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	c6 05 9c c2 2a f0 00 	movb   $0x0,0xf02ac29c$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	c6 05 9d c2 2a f0 8e 	movb   $0x8e,0xf02ac29d$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	66 a3 9e c2 2a f0    	mov    %ax,0xf02ac29e$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	b8 4a 42 10 f0       	mov    $0xf010424a,%eax$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	66 a3 a0 c2 2a f0    	mov    %ax,0xf02ac2a0$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	66 c7 05 a2 c2 2a f0 	movw   $0x8,0xf02ac2a2$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	08 00 $/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	c6 05 a4 c2 2a f0 00 	movb   $0x0,0xf02ac2a4$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	c6 05 a5 c2 2a f0 8e 	movb   $0x8e,0xf02ac2a5$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039f1	obj/kern/kernel.asm	/^f01039f1:	66 a3 a6 c2 2a f0    	mov    %ax,0xf02ac2a6$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	b8 4e 42 10 f0       	mov    $0xf010424e,%eax$/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	66 a3 b0 c2 2a f0    	mov    %ax,0xf02ac2b0$/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	66 c7 05 b2 c2 2a f0 	movw   $0x8,0xf02ac2b2$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	08 00 $/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	c6 05 b4 c2 2a f0 00 	movb   $0x0,0xf02ac2b4$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	c6 05 b5 c2 2a f0 8e 	movb   $0x8e,0xf02ac2b5$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	66 a3 b6 c2 2a f0    	mov    %ax,0xf02ac2b6$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	b8 52 42 10 f0       	mov    $0xf0104252,%eax$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	66 a3 b8 c2 2a f0    	mov    %ax,0xf02ac2b8$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	66 c7 05 ba c2 2a f0 	movw   $0x8,0xf02ac2ba$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	08 00 $/;"	l
f0103a36	obj/kern/kernel.asm	/^f0103a36:	c6 05 bc c2 2a f0 00 	movb   $0x0,0xf02ac2bc$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	c6 05 bd c2 2a f0 8e 	movb   $0x8e,0xf02ac2bd$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	66 a3 be c2 2a f0    	mov    %ax,0xf02ac2be$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	b8 56 42 10 f0       	mov    $0xf0104256,%eax$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	66 a3 c0 c2 2a f0    	mov    %ax,0xf02ac2c0$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	66 c7 05 c2 c2 2a f0 	movw   $0x8,0xf02ac2c2$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	08 00 $/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	c6 05 c4 c2 2a f0 00 	movb   $0x0,0xf02ac2c4$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	c6 05 c5 c2 2a f0 8e 	movb   $0x8e,0xf02ac2c5$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	66 a3 c6 c2 2a f0    	mov    %ax,0xf02ac2c6$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	b8 5a 42 10 f0       	mov    $0xf010425a,%eax$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	66 a3 c8 c2 2a f0    	mov    %ax,0xf02ac2c8$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	66 c7 05 ca c2 2a f0 	movw   $0x8,0xf02ac2ca$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	08 00 $/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	c6 05 cc c2 2a f0 00 	movb   $0x0,0xf02ac2cc$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	c6 05 cd c2 2a f0 8e 	movb   $0x8e,0xf02ac2cd$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	66 a3 ce c2 2a f0    	mov    %ax,0xf02ac2ce$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	b8 5e 42 10 f0       	mov    $0xf010425e,%eax$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	66 a3 d0 c2 2a f0    	mov    %ax,0xf02ac2d0$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	66 c7 05 d2 c2 2a f0 	movw   $0x8,0xf02ac2d2$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	08 00 $/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	c6 05 d4 c2 2a f0 00 	movb   $0x0,0xf02ac2d4$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	c6 05 d5 c2 2a f0 8e 	movb   $0x8e,0xf02ac2d5$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	66 a3 d6 c2 2a f0    	mov    %ax,0xf02ac2d6$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	b8 62 42 10 f0       	mov    $0xf0104262,%eax$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	66 a3 e0 c2 2a f0    	mov    %ax,0xf02ac2e0$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	66 c7 05 e2 c2 2a f0 	movw   $0x8,0xf02ac2e2$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	08 00 $/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	c6 05 e4 c2 2a f0 00 	movb   $0x0,0xf02ac2e4$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	c6 05 e5 c2 2a f0 8e 	movb   $0x8e,0xf02ac2e5$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	66 a3 e6 c2 2a f0    	mov    %ax,0xf02ac2e6$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	b8 68 42 10 f0       	mov    $0xf0104268,%eax$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	66 a3 e8 c2 2a f0    	mov    %ax,0xf02ac2e8$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	66 c7 05 ea c2 2a f0 	movw   $0x8,0xf02ac2ea$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	08 00 $/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	c6 05 ec c2 2a f0 00 	movb   $0x0,0xf02ac2ec$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	c6 05 ed c2 2a f0 8e 	movb   $0x8e,0xf02ac2ed$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b1e	obj/kern/kernel.asm	/^f0103b1e:	66 a3 ee c2 2a f0    	mov    %ax,0xf02ac2ee$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	b8 6e 42 10 f0       	mov    $0xf010426e,%eax$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	66 a3 f0 c2 2a f0    	mov    %ax,0xf02ac2f0$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	66 c7 05 f2 c2 2a f0 	movw   $0x8,0xf02ac2f2$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	08 00 $/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	c6 05 f4 c2 2a f0 00 	movb   $0x0,0xf02ac2f4$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	c6 05 f5 c2 2a f0 8e 	movb   $0x8e,0xf02ac2f5$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	66 a3 f6 c2 2a f0    	mov    %ax,0xf02ac2f6$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	b8 74 42 10 f0       	mov    $0xf0104274,%eax$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	66 a3 f8 c2 2a f0    	mov    %ax,0xf02ac2f8$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	66 c7 05 fa c2 2a f0 	movw   $0x8,0xf02ac2fa$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	08 00 $/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	c6 05 fc c2 2a f0 00 	movb   $0x0,0xf02ac2fc$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	c6 05 fd c2 2a f0 8e 	movb   $0x8e,0xf02ac2fd$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	66 a3 fe c2 2a f0    	mov    %ax,0xf02ac2fe$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	b8 7a 42 10 f0       	mov    $0xf010427a,%eax$/;"	l
f0103b7f	obj/kern/kernel.asm	/^f0103b7f:	66 a3 e0 c3 2a f0    	mov    %ax,0xf02ac3e0$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	66 c7 05 e2 c3 2a f0 	movw   $0x8,0xf02ac3e2$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	08 00 $/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	c6 05 e4 c3 2a f0 00 	movb   $0x0,0xf02ac3e4$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	c6 05 e5 c3 2a f0 ee 	movb   $0xee,0xf02ac3e5$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	66 a3 e6 c3 2a f0    	mov    %ax,0xf02ac3e6$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	b8 80 42 10 f0       	mov    $0xf0104280,%eax$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	66 a3 f8 c3 2a f0    	mov    %ax,0xf02ac3f8$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	66 c7 05 fa c3 2a f0 	movw   $0x8,0xf02ac3fa$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	08 00 $/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	c6 05 fc c3 2a f0 00 	movb   $0x0,0xf02ac3fc$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	c6 05 fd c3 2a f0 ee 	movb   $0xee,0xf02ac3fd$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	66 a3 fe c3 2a f0    	mov    %ax,0xf02ac3fe$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	b8 86 42 10 f0       	mov    $0xf0104286,%eax$/;"	l
f0103bd5	obj/kern/kernel.asm	/^f0103bd5:	66 a3 d0 c3 2a f0    	mov    %ax,0xf02ac3d0$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	66 c7 05 d2 c3 2a f0 	movw   $0x8,0xf02ac3d2$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	08 00 $/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	c6 05 d4 c3 2a f0 00 	movb   $0x0,0xf02ac3d4$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	c6 05 d5 c3 2a f0 ee 	movb   $0xee,0xf02ac3d5$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bf5	obj/kern/kernel.asm	/^f0103bf5:	66 a3 d6 c3 2a f0    	mov    %ax,0xf02ac3d6$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	b8 8c 42 10 f0       	mov    $0xf010428c,%eax$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	66 a3 68 c3 2a f0    	mov    %ax,0xf02ac368$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	66 c7 05 6a c3 2a f0 	movw   $0x8,0xf02ac36a$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	08 00 $/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	c6 05 6c c3 2a f0 00 	movb   $0x0,0xf02ac36c$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	c6 05 6d c3 2a f0 ee 	movb   $0xee,0xf02ac36d$/;"	l
f0103c1d	obj/kern/kernel.asm	/^f0103c1d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	66 a3 6e c3 2a f0    	mov    %ax,0xf02ac36e$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	b8 92 42 10 f0       	mov    $0xf0104292,%eax$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	66 a3 80 c3 2a f0    	mov    %ax,0xf02ac380$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	66 c7 05 82 c3 2a f0 	movw   $0x8,0xf02ac382$/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	08 00 $/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	c6 05 84 c3 2a f0 00 	movb   $0x0,0xf02ac384$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	c6 05 85 c3 2a f0 ee 	movb   $0xee,0xf02ac385$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	66 a3 86 c3 2a f0    	mov    %ax,0xf02ac386$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	b8 98 42 10 f0       	mov    $0xf0104298,%eax$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	66 a3 98 c3 2a f0    	mov    %ax,0xf02ac398$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	66 c7 05 9a c3 2a f0 	movw   $0x8,0xf02ac39a$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	08 00 $/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	c6 05 9c c3 2a f0 00 	movb   $0x0,0xf02ac39c$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	c6 05 9d c3 2a f0 ee 	movb   $0xee,0xf02ac39d$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	66 a3 9e c3 2a f0    	mov    %ax,0xf02ac39e$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	b8 9e 42 10 f0       	mov    $0xf010429e,%eax$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	66 a3 60 c3 2a f0    	mov    %ax,0xf02ac360$/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	66 c7 05 62 c3 2a f0 	movw   $0x8,0xf02ac362$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	08 00 $/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	c6 05 64 c3 2a f0 00 	movb   $0x0,0xf02ac364$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	c6 05 65 c3 2a f0 ee 	movb   $0xee,0xf02ac365$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	66 a3 66 c3 2a f0    	mov    %ax,0xf02ac366$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	e8 f4 fa ff ff       	call   f01037a0 <trap_init_percpu>$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	c9                   	leave  $/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	c3                   	ret    $/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae <print_regs>:$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	55                   	push   %ebp$/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	53                   	push   %ebx$/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	ff 33                	pushl  (%ebx)$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	68 af 7d 10 f0       	push   $0xf0107daf$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	e8 c8 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	68 be 7d 10 f0       	push   $0xf0107dbe$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	e8 b8 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	68 cd 7d 10 f0       	push   $0xf0107dcd$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	e8 a8 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	68 dc 7d 10 f0       	push   $0xf0107ddc$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	e8 98 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	68 eb 7d 10 f0       	push   $0xf0107deb$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	e8 88 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	68 fa 7d 10 f0       	push   $0xf0107dfa$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	e8 78 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	68 09 7e 10 f0       	push   $0xf0107e09$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	e8 68 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	68 18 7e 10 f0       	push   $0xf0107e18$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	e8 58 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	c9                   	leave  $/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	c3                   	ret    $/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c <print_trapframe>:$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	55                   	push   %ebp$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	56                   	push   %esi$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	53                   	push   %ebx$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	e8 21 1f 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	50                   	push   %eax$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	53                   	push   %ebx$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	68 7c 7e 10 f0       	push   $0xf0107e7c$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	e8 34 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	e8 4e ff ff ff       	call   f0103cae <print_regs>$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	50                   	push   %eax$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	68 9a 7e 10 f0       	push   $0xf0107e9a$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	e8 1a fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	50                   	push   %eax$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	68 ad 7e 10 f0       	push   $0xf0107ead$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	e8 08 fa ff ff       	call   f010378c <cprintf>$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	77 09                	ja     f0103d98 <print_trapframe+0x5c>$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	8b 14 85 60 81 10 f0 	mov    -0xfef7ea0(,%eax,4),%edx$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	eb 1f                	jmp    f0103db7 <print_trapframe+0x7b>$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	74 15                	je     f0103db2 <print_trapframe+0x76>$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	b9 46 7e 10 f0       	mov    $0xf0107e46,%ecx$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	ba 33 7e 10 f0       	mov    $0xf0107e33,%edx$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	eb 05                	jmp    f0103db7 <print_trapframe+0x7b>$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	ba 27 7e 10 f0       	mov    $0xf0107e27,%edx$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	52                   	push   %edx$/;"	l
f0103dbb	obj/kern/kernel.asm	/^f0103dbb:	50                   	push   %eax$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	68 c0 7e 10 f0       	push   $0xf0107ec0$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	e8 c6 f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	3b 1d 60 ca 2a f0    	cmp    0xf02aca60,%ebx$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	75 1a                	jne    f0103deb <print_trapframe+0xaf>$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	75 14                	jne    f0103deb <print_trapframe+0xaf>$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	50                   	push   %eax$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	68 d2 7e 10 f0       	push   $0xf0107ed2$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	e8 a4 f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	68 e1 7e 10 f0       	push   $0xf0107ee1$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	e8 91 f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	75 49                	jne    f0103e4d <print_trapframe+0x111>$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	89 c2                	mov    %eax,%edx$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	ba 60 7e 10 f0       	mov    $0xf0107e60,%edx$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	b9 55 7e 10 f0       	mov    $0xf0107e55,%ecx$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103e19	obj/kern/kernel.asm	/^f0103e19:	89 c2                	mov    %eax,%edx$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	ba 72 7e 10 f0       	mov    $0xf0107e72,%edx$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	be 6c 7e 10 f0       	mov    $0xf0107e6c,%esi$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	be ac 7f 10 f0       	mov    $0xf0107fac,%esi$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	b8 77 7e 10 f0       	mov    $0xf0107e77,%eax$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	51                   	push   %ecx$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	52                   	push   %edx$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	50                   	push   %eax$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	68 ef 7e 10 f0       	push   $0xf0107eef$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	e8 44 f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	eb 10                	jmp    f0103e5d <print_trapframe+0x121>$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	68 f5 7c 10 f0       	push   $0xf0107cf5$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	e8 32 f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	68 fe 7e 10 f0       	push   $0xf0107efe$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	e8 1f f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	50                   	push   %eax$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	68 0d 7f 10 f0       	push   $0xf0107f0d$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	e8 0d f9 ff ff       	call   f010378c <cprintf>$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	e8 fd f8 ff ff       	call   f010378c <cprintf>$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	74 25                	je     f0103ebd <print_trapframe+0x181>$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	68 2f 7f 10 f0       	push   $0xf0107f2f$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	e8 e4 f8 ff ff       	call   f010378c <cprintf>$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	50                   	push   %eax$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	68 3e 7f 10 f0       	push   $0xf0107f3e$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	e8 d2 f8 ff ff       	call   f010378c <cprintf>$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	5b                   	pop    %ebx$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	5e                   	pop    %esi$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	5d                   	pop    %ebp$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	c3                   	ret    $/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4 <page_fault_handler>:$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	55                   	push   %ebp$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	57                   	push   %edi$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	56                   	push   %esi$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	53                   	push   %ebx$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	75 17                	jne    f0103ef0 <page_fault_handler+0x2c>$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	68 f8 80 10 f0       	push   $0xf01080f8$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	68 5f 01 00 00       	push   $0x15f$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	68 51 7f 10 f0       	push   $0xf0107f51$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	e8 a4 c1 ff ff       	call   f0100094 <_panic>$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	e8 75 1d 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	0f 84 89 00 00 00    	je     f0103f91 <page_fault_handler+0xcd>$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	89 d7                	mov    %edx,%edi$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	e8 41 1d 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	6a 02                	push   $0x2$/;"	l
f0103f2b	obj/kern/kernel.asm	/^f0103f2b:	6a 34                	push   $0x34$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	57                   	push   %edi$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	e8 cb ee ff ff       	call   f0102e07 <user_mem_assert>$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	89 fa                	mov    %edi,%edx$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	89 37                	mov    %esi,(%edi)$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	89 de                	mov    %ebx,%esi$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	89 53 3c             	mov    %edx,0x3c(%ebx)$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	e8 fe 1c 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	e8 ea 1c 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	e8 94 f5 ff ff       	call   f0103525 <env_run>$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	e8 d1 1c 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	57                   	push   %edi$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	56                   	push   %esi$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	68 20 81 10 f0       	push   $0xf0108120$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	e8 db f7 ff ff       	call   f010378c <cprintf>$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	e8 83 fd ff ff       	call   f0103d3c <print_trapframe>$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	e8 ac 1c 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	e8 b7 f4 ff ff       	call   f0103486 <env_destroy>$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	5b                   	pop    %ebx$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	5e                   	pop    %esi$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	5f                   	pop    %edi$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	5d                   	pop    %ebp$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	c3                   	ret    $/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda <trap>:$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	55                   	push   %ebp$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	57                   	push   %edi$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	56                   	push   %esi$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	fc                   	cld    $/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	83 3d 8c ce 2a f0 00 	cmpl   $0x0,0xf02ace8c$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	74 01                	je     f0103fed <trap+0x13>$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	f4                   	hlt    $/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	e8 78 1c 00 00       	call   f0105c6a <cpunum>$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	81 c2 20 e0 2c f0    	add    $0xf02ce020,%edx$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	75 10                	jne    f0104019 <trap+0x3f>$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	e8 c2 1e 00 00       	call   f0105ed8 <spin_lock>$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	9c                   	pushf  $/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	58                   	pop    %eax$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	74 19                	je     f0104039 <trap+0x5f>$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	68 5d 7f 10 f0       	push   $0xf0107f5d$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	68 25 01 00 00       	push   $0x125$/;"	l
f010402f	obj/kern/kernel.asm	/^f010402f:	68 51 7f 10 f0       	push   $0xf0107f51$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	e8 5b c0 ff ff       	call   f0100094 <_panic>$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	0f 85 a0 00 00 00    	jne    f01040ea <trap+0x110>$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	e8 81 1e 00 00       	call   f0105ed8 <spin_lock>$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	e8 0e 1c 00 00       	call   f0105c6a <cpunum>$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	83 b8 28 e0 2c f0 00 	cmpl   $0x0,-0xfd31fd8(%eax)$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	75 19                	jne    f0104084 <trap+0xaa>$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	68 76 7f 10 f0       	push   $0xf0107f76$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	68 2d 01 00 00       	push   $0x12d$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	68 51 7f 10 f0       	push   $0xf0107f51$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	e8 10 c0 ff ff       	call   f0100094 <_panic>$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	e8 e1 1b 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	75 2d                	jne    f01040c5 <trap+0xeb>$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	e8 cd 1b 00 00       	call   f0105c6a <cpunum>$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	e8 32 f2 ff ff       	call   f01032e0 <env_free>$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	e8 b7 1b 00 00       	call   f0105c6a <cpunum>$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	c7 80 28 e0 2c f0 00 	movl   $0x0,-0xfd31fd8(%eax)$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	00 00 00 $/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	e8 c5 02 00 00       	call   f010438a <sched_yield>$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	e8 a0 1b 00 00       	call   f0105c6a <cpunum>$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	89 c7                	mov    %eax,%edi$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	e8 89 1b 00 00       	call   f0105c6a <cpunum>$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	8b b0 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%esi$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	89 35 60 ca 2a f0    	mov    %esi,0xf02aca60$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	75 0a                	jne    f0104102 <trap+0x128>$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	e8 64 c5 ff ff       	call   f0100661 <kbd_intr>$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	e9 d4 00 00 00       	jmp    f01041d6 <trap+0x1fc>$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	75 0a                	jne    f0104111 <trap+0x137>$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	e8 39 c5 ff ff       	call   f0100645 <serial_intr>$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	e9 c5 00 00 00       	jmp    f01041d6 <trap+0x1fc>$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	75 1d                	jne    f0104133 <trap+0x159>$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	68 7d 7f 10 f0       	push   $0xf0107f7d$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	e8 69 f6 ff ff       	call   f010378c <cprintf>$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	e8 11 fc ff ff       	call   f0103d3c <print_trapframe>$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	e9 a3 00 00 00       	jmp    f01041d6 <trap+0x1fc>$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	75 0f                	jne    f0104147 <trap+0x16d>$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	e8 78 1c 00 00       	call   f0105db5 <lapic_eoi>$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	e8 35 26 00 00       	call   f0106777 <time_tick>$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	e8 43 02 00 00       	call   f010438a <sched_yield>$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	75 0e                	jne    f010415a <trap+0x180>$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	56                   	push   %esi$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	e8 6f fd ff ff       	call   f0103ec4 <page_fault_handler>$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	eb 7c                	jmp    f01041d6 <trap+0x1fc>$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	75 0e                	jne    f010416d <trap+0x193>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	56                   	push   %esi$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	e8 68 c8 ff ff       	call   f01009d0 <monitor>$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	83 c4 10             	add    $0x10,%esp$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	eb 69                	jmp    f01041d6 <trap+0x1fc>$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	75 21                	jne    f0104193 <trap+0x1b9>$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	ff 36                	pushl  (%esi)$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	e8 c8 02 00 00       	call   f0104453 <syscall>$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	eb 43                	jmp    f01041d6 <trap+0x1fc>$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	56                   	push   %esi$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	e8 a0 fb ff ff       	call   f0103d3c <print_trapframe>$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	75 17                	jne    f01041bd <trap+0x1e3>$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	68 9a 7f 10 f0       	push   $0xf0107f9a$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	68 09 01 00 00       	push   $0x109$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	68 51 7f 10 f0       	push   $0xf0107f51$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	e8 d7 be ff ff       	call   f0100094 <_panic>$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	e8 a8 1a 00 00       	call   f0105c6a <cpunum>$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	e8 b3 f2 ff ff       	call   f0103486 <env_destroy>$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	e8 8f 1a 00 00       	call   f0105c6a <cpunum>$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	83 b8 28 e0 2c f0 00 	cmpl   $0x0,-0xfd31fd8(%eax)$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	74 2a                	je     f0104211 <trap+0x237>$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	e8 7e 1a 00 00       	call   f0105c6a <cpunum>$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	75 16                	jne    f0104211 <trap+0x237>$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	e8 6a 1a 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	e8 14 f3 ff ff       	call   f0103525 <env_run>$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	e8 74 01 00 00       	call   f010438a <sched_yield>$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216 <divide_handler>:$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	6a 00                	push   $0x0$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	6a 00                	push   $0x0$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	e9 85 00 00 00       	jmp    f01042a4 <_alltraps>$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	90                   	nop$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220 <debug_handler>:$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	6a 00                	push   $0x0$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	6a 01                	push   $0x1$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	eb 7e                	jmp    f01042a4 <_alltraps>$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226 <nmi_handler>:$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	6a 00                	push   $0x0$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	6a 02                	push   $0x2$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	eb 78                	jmp    f01042a4 <_alltraps>$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c <brkpt_handler>:$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	6a 00                	push   $0x0$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	6a 03                	push   $0x3$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	eb 72                	jmp    f01042a4 <_alltraps>$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232 <oflow_handler>:$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	6a 00                	push   $0x0$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	6a 04                	push   $0x4$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	eb 6c                	jmp    f01042a4 <_alltraps>$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238 <bound_handler>:$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	6a 00                	push   $0x0$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	6a 05                	push   $0x5$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	eb 66                	jmp    f01042a4 <_alltraps>$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e <illop_handler>:$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	6a 00                	push   $0x0$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	6a 06                	push   $0x6$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	eb 60                	jmp    f01042a4 <_alltraps>$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244 <device_handler>:$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	6a 00                	push   $0x0$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	6a 07                	push   $0x7$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	eb 5a                	jmp    f01042a4 <_alltraps>$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a <dblflt_handler>:$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	6a 08                	push   $0x8$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	eb 56                	jmp    f01042a4 <_alltraps>$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e <tss_handler>:$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	6a 0a                	push   $0xa$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	eb 52                	jmp    f01042a4 <_alltraps>$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252 <segnp_handler>:$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	6a 0b                	push   $0xb$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	eb 4e                	jmp    f01042a4 <_alltraps>$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256 <stack_handler>:$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	6a 0c                	push   $0xc$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	eb 4a                	jmp    f01042a4 <_alltraps>$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a <gpflt_handler>:$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	6a 0d                	push   $0xd$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	eb 46                	jmp    f01042a4 <_alltraps>$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e <pgflt_handler>:$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	6a 0e                	push   $0xe$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	eb 42                	jmp    f01042a4 <_alltraps>$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262 <fperr_handler>:$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	6a 00                	push   $0x0$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	6a 10                	push   $0x10$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	eb 3c                	jmp    f01042a4 <_alltraps>$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268 <align_handler>:$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	6a 00                	push   $0x0$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	6a 11                	push   $0x11$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	eb 36                	jmp    f01042a4 <_alltraps>$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e <mchk_handler>:$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	6a 00                	push   $0x0$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	6a 12                	push   $0x12$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	eb 30                	jmp    f01042a4 <_alltraps>$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274 <simderr_handler>:$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	6a 00                	push   $0x0$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	6a 13                	push   $0x13$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	eb 2a                	jmp    f01042a4 <_alltraps>$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a <syscall_handler>:$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	6a 00                	push   $0x0$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	6a 30                	push   $0x30$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	eb 24                	jmp    f01042a4 <_alltraps>$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280 <irq_error_handler>:$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	6a 00                	push   $0x0$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	6a 33                	push   $0x33$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	eb 1e                	jmp    f01042a4 <_alltraps>$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286 <irq_ide_handler>:$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	6a 00                	push   $0x0$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	6a 2e                	push   $0x2e$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	eb 18                	jmp    f01042a4 <_alltraps>$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c <irq_kbd_handler>:$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	6a 00                	push   $0x0$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	6a 21                	push   $0x21$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	eb 12                	jmp    f01042a4 <_alltraps>$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292 <irq_serial_handler>:$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	6a 00                	push   $0x0$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	6a 24                	push   $0x24$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	eb 0c                	jmp    f01042a4 <_alltraps>$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298 <irq_spurious_handler>:$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	6a 00                	push   $0x0$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	6a 27                	push   $0x27$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	eb 06                	jmp    f01042a4 <_alltraps>$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e <irq_timer_handler>:$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	6a 00                	push   $0x0$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	6a 20                	push   $0x20$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	eb 00                	jmp    f01042a4 <_alltraps>$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4 <_alltraps>:$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	1e                   	push   %ds$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	06                   	push   %es$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	60                   	pusha  $/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	8e d8                	mov    %eax,%ds$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	8e c0                	mov    %eax,%es$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	54                   	push   %esp$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	e8 24 fd ff ff       	call   f0103fda <trap>$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6 <sched_halt>:$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	55                   	push   %ebp$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	a1 44 c2 2a f0       	mov    0xf02ac244,%eax$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	8b 02                	mov    (%edx),%eax$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	76 10                	jbe    f01042e3 <sched_halt+0x2d>$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	75 e8                	jne    f01042c9 <sched_halt+0x13>$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	eb 08                	jmp    f01042eb <sched_halt+0x35>$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	75 1f                	jne    f010430a <sched_halt+0x54>$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	68 b0 81 10 f0       	push   $0xf01081b0$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	e8 94 f4 ff ff       	call   f010378c <cprintf>$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	6a 00                	push   $0x0$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	e8 cb c6 ff ff       	call   f01009d0 <monitor>$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	eb f1                	jmp    f01042fb <sched_halt+0x45>$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	e8 5b 19 00 00       	call   f0105c6a <cpunum>$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	c7 80 28 e0 2c f0 00 	movl   $0x0,-0xfd31fd8(%eax)$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	00 00 00 $/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	a1 c4 d2 2c f0       	mov    0xf02cd2c4,%eax$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	77 12                	ja     f010433a <sched_halt+0x84>$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	50                   	push   %eax$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	6a 56                	push   $0x56$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	68 d9 81 10 f0       	push   $0xf01081d9$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	e8 5a bd ff ff       	call   f0100094 <_panic>$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	e8 23 19 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	81 c2 20 e0 2c f0    	add    $0xf02ce020,%edx$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	e8 0f 1c 00 00       	call   f0105f75 <spin_unlock>$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	f3 90                	pause  $/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	e8 fd 18 00 00       	call   f0105c6a <cpunum>$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	8b 80 30 e0 2c f0    	mov    -0xfd31fd0(%eax),%eax$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	89 c4                	mov    %eax,%esp$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	6a 00                	push   $0x0$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	6a 00                	push   $0x0$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	fb                   	sti    $/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	f4                   	hlt    $/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	eb fd                	jmp    f0104382 <sched_halt+0xcc>$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	c9                   	leave  $/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	c3                   	ret    $/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a <sched_yield>:$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	55                   	push   %ebp$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	89 e5                	mov    %esp,%ebp$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	53                   	push   %ebx$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	e8 d4 18 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104399	obj/kern/kernel.asm	/^f0104399:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	83 b8 28 e0 2c f0 00 	cmpl   $0x0,-0xfd31fd8(%eax)$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	74 17                	je     f01043be <sched_yield+0x34>$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	e8 be 18 00 00       	call   f0105c6a <cpunum>$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	8b 0d 44 c2 2a f0    	mov    0xf02ac244,%ecx$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	eb 28                	jmp    f01043f6 <sched_yield+0x6c>$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	6b d8 7c             	imul   $0x7c,%eax,%ebx$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	01 cb                	add    %ecx,%ebx$/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	83 7b 54 02          	cmpl   $0x2,0x54(%ebx)$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	75 09                	jne    f01043e2 <sched_yield+0x58>$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	53                   	push   %ebx$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	e8 43 f1 ff ff       	call   f0103525 <env_run>$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	83 c0 01             	add    $0x1,%eax$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	89 c3                	mov    %eax,%ebx$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	c1 fb 1f             	sar    $0x1f,%ebx$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	01 d8                	add    %ebx,%eax$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	29 d8                	sub    %ebx,%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	39 c2                	cmp    %eax,%edx$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	75 d4                	jne    f01043ce <sched_yield+0x44>$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	01 c8                	add    %ecx,%eax$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	75 09                	jne    f010440e <sched_yield+0x84>$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	50                   	push   %eax$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	e8 17 f1 ff ff       	call   f0103525 <env_run>$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	e8 57 18 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	83 b8 28 e0 2c f0 00 	cmpl   $0x0,-0xfd31fd8(%eax)$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	74 2a                	je     f0104449 <sched_yield+0xbf>$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	e8 46 18 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	75 16                	jne    f0104449 <sched_yield+0xbf>$/;"	l
f0104433	obj/kern/kernel.asm	/^f0104433:	e8 32 18 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104438	obj/kern/kernel.asm	/^f0104438:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	e8 dc f0 ff ff       	call   f0103525 <env_run>$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	e8 68 fe ff ff       	call   f01042b6 <sched_halt>$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	c9                   	leave  $/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	c3                   	ret    $/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453 <syscall>:$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	55                   	push   %ebp$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	89 e5                	mov    %esp,%ebp$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	57                   	push   %edi$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	56                   	push   %esi$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	53                   	push   %ebx$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	0f 87 cd 05 00 00    	ja     f0104a35 <syscall+0x5e2>$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	ff 24 85 ec 81 10 f0 	jmp    *-0xfef7e14(,%eax,4)$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	e8 f6 17 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	6a 04                	push   $0x4$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	e8 7d e9 ff ff       	call   f0102e07 <user_mem_assert>$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	68 e6 81 10 f0       	push   $0xf01081e6$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	e8 ef f2 ff ff       	call   f010378c <cprintf>$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044a0	obj/kern/kernel.asm	/^f01044a0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	e9 97 05 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	e8 c4 c1 ff ff       	call   f0100673 <cons_getc>$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	89 c3                	mov    %eax,%ebx$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	e9 8b 05 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	e8 af 17 00 00       	call   f0105c6a <cpunum>$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	e9 75 05 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	6a 01                	push   $0x1$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	50                   	push   %eax$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	e8 fa e9 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	89 c3                	mov    %eax,%ebx$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	85 c0                	test   %eax,%eax$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	0f 88 57 05 00 00    	js     f0104a41 <syscall+0x5ee>$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	e8 91 ef ff ff       	call   f0103486 <env_destroy>$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	e9 3f 05 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	e8 83 fe ff ff       	call   f010438a <sched_yield>$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	e8 5e 17 00 00       	call   f0105c6a <cpunum>$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	50                   	push   %eax$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	e8 e3 ea ff ff       	call   f0103007 <env_alloc>$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	89 c3                	mov    %eax,%ebx$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	85 c0                	test   %eax,%eax$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	0f 85 10 05 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	e8 2a 17 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	6a 44                	push   $0x44$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	e8 a6 11 00 00       	call   f01056fc <memcpy>$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	e9 d6 04 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	6a 01                	push   $0x1$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	50                   	push   %eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	e8 5b e9 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	85 c0                	test   %eax,%eax$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	0f 85 b8 04 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	8b 42 54             	mov    0x54(%edx),%eax$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	75 10                	jne    f01045a9 <syscall+0x156>$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	89 42 54             	mov    %eax,0x54(%edx)$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	e9 98 04 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	e9 8e 04 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	6a 01                	push   $0x1$/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	50                   	push   %eax$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	e8 13 e9 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	89 c3                	mov    %eax,%ebx$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	85 c0                	test   %eax,%eax$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	0f 85 70 04 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	75 5b                	jne    f0104635 <syscall+0x1e2>$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	77 52                	ja     f0104635 <syscall+0x1e2>$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	f6 45 14 05          	testb  $0x5,0x14(%ebp)$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	74 56                	je     f010463f <syscall+0x1ec>$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	75 57                	jne    f0104649 <syscall+0x1f6>$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	6a 01                	push   $0x1$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	e8 f1 c9 ff ff       	call   f0100fed <page_alloc>$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	89 c7                	mov    %eax,%edi$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	85 c0                	test   %eax,%eax$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	74 4e                	je     f0104653 <syscall+0x200>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	50                   	push   %eax$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	e8 a4 cc ff ff       	call   f01012bb <page_insert>$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	83 c4 10             	add    $0x10,%esp$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	89 c3                	mov    %eax,%ebx$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	85 c0                	test   %eax,%eax$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	0f 84 1d 04 00 00    	je     f0104a41 <syscall+0x5ee>$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	57                   	push   %edi$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	e8 30 ca ff ff       	call   f010105d <page_free>$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	e9 0c 04 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	e9 02 04 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	e9 f8 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	e9 ee 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	e9 e4 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	6a 01                	push   $0x1$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	50                   	push   %eax$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	e8 69 e8 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	89 c3                	mov    %eax,%ebx$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	85 c0                	test   %eax,%eax$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	0f 85 c6 03 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	6a 01                	push   $0x1$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	50                   	push   %eax$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	e8 4b e8 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	85 c0                	test   %eax,%eax$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	0f 85 a8 03 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	75 6c                	jne    f010470e <syscall+0x2bb>$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	77 63                	ja     f010470e <syscall+0x2bb>$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	75 64                	jne    f0104718 <syscall+0x2c5>$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	77 5b                	ja     f0104718 <syscall+0x2c5>$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	f6 45 1c 05          	testb  $0x5,0x1c(%ebp)$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	74 5f                	je     f0104722 <syscall+0x2cf>$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	75 60                	jne    f010472c <syscall+0x2d9>$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	50                   	push   %eax$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	e8 e3 ca ff ff       	call   f01011c4 <page_lookup>$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	75 06                	jne    f01046f2 <syscall+0x29f>$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	75 44                	jne    f0104736 <syscall+0x2e3>$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	50                   	push   %eax$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	e8 b7 cb ff ff       	call   f01012bb <page_insert>$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	89 c3                	mov    %eax,%ebx$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	e9 33 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	e9 29 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	e9 1f 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	e9 15 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	e9 0b 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	e9 01 03 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	6a 01                	push   $0x1$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	50                   	push   %eax$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	e8 86 e7 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	89 c3                	mov    %eax,%ebx$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	85 c0                	test   %eax,%eax$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	0f 85 e3 02 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	75 27                	jne    f010478e <syscall+0x33b>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	77 1e                	ja     f010478e <syscall+0x33b>$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	e8 e9 ca ff ff       	call   f010126a <page_remove>$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	e9 b3 02 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	e9 a9 02 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	6a 01                	push   $0x1$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	50                   	push   %eax$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	e8 2e e7 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	85 c0                	test   %eax,%eax$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	75 09                	jne    f01047b9 <syscall+0x366>$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	89 4a 64             	mov    %ecx,0x64(%edx)$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	89 c3                	mov    %eax,%ebx$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	e9 81 02 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	77 0d                	ja     f01047d6 <syscall+0x383>$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	0f 85 66 02 00 00    	jne    f0104a3c <syscall+0x5e9>$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	e8 8f 14 00 00       	call   f0105c6a <cpunum>$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	89 78 6c             	mov    %edi,0x6c(%eax)$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	e8 7b 14 00 00       	call   f0105c6a <cpunum>$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f01047ff	obj/kern/kernel.asm	/^f01047ff:	e8 66 14 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	e8 54 14 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	e8 5f fb ff ff       	call   f010438a <sched_yield>$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	6a 00                	push   $0x0$/;"	l
f0104830	obj/kern/kernel.asm	/^f0104830:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	50                   	push   %eax$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104837	obj/kern/kernel.asm	/^f0104837:	e8 9b e6 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	85 c0                	test   %eax,%eax$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	0f 88 fd 00 00 00    	js     f0104944 <syscall+0x4f1>$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	0f 46 45 18          	cmovbe 0x18(%ebp),%eax$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	89 45 18             	mov    %eax,0x18(%ebp)$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	0f 84 e4 00 00 00    	je     f010494b <syscall+0x4f8>$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	8b 58 74             	mov    0x74(%eax),%ebx$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	85 db                	test   %ebx,%ebx$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	0f 85 e3 00 00 00    	jne    f0104955 <syscall+0x502>$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	0f 84 91 00 00 00    	je     f010490d <syscall+0x4ba>$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	0f 85 d6 00 00 00    	jne    f010495f <syscall+0x50c>$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	f6 45 18 05          	testb  $0x5,0x18(%ebp)$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	0f 84 d6 00 00 00    	je     f0104969 <syscall+0x516>$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	0f 85 d3 00 00 00    	jne    f0104973 <syscall+0x520>$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	e8 c5 13 00 00       	call   f0105c6a <cpunum>$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	52                   	push   %edx$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	e8 04 c9 ff ff       	call   f01011c4 <page_lookup>$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	85 c0                	test   %eax,%eax$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	0f 84 b2 00 00 00    	je     f010497d <syscall+0x52a>$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	85 d2                	test   %edx,%edx$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	0f 84 b1 00 00 00    	je     f0104987 <syscall+0x534>$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01048da	obj/kern/kernel.asm	/^f01048da:	74 0b                	je     f01048e7 <syscall+0x494>$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	8b 12                	mov    (%edx),%edx$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	f6 c6 08             	test   $0x8,%dh$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	0f 85 aa 00 00 00    	jne    f0104991 <syscall+0x53e>$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	ff 72 6c             	pushl  0x6c(%edx)$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	50                   	push   %eax$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	ff 72 60             	pushl  0x60(%edx)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	e8 c2 c9 ff ff       	call   f01012bb <page_insert>$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	85 c0                	test   %eax,%eax$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	0f 88 97 00 00 00    	js     f010499b <syscall+0x548>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	89 48 78             	mov    %ecx,0x78(%eax)$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	c6 46 68 00          	movb   $0x0,0x68(%esi)$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	e8 51 13 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	8b 80 28 e0 2c f0    	mov    -0xfd31fd8(%eax),%eax$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	89 48 70             	mov    %ecx,0x70(%eax)$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	e9 fd 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	89 c3                	mov    %eax,%ebx$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	e9 f6 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	e9 ec 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	e9 e2 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	e9 d8 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	e9 ce 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	e9 c4 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	e9 ba 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	e9 b0 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	e9 a6 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	89 c3                	mov    %eax,%ebx$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	e9 9f 00 00 00       	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	6a 01                	push   $0x1$/;"	l
f01049a7	obj/kern/kernel.asm	/^f01049a7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	50                   	push   %eax$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	e8 24 e5 ff ff       	call   f0102ed7 <envid2env>$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	89 c3                	mov    %eax,%ebx$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	85 c0                	test   %eax,%eax$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	0f 85 81 00 00 00    	jne    f0104a41 <syscall+0x5ee>$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	6a 04                	push   $0x4$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	6a 44                	push   $0x44$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	e8 38 e4 ff ff       	call   f0102e07 <user_mem_assert>$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	80 e4 cf             	and    $0xcf,%ah$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	80 cc 02             	or     $0x2,%ah$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	89 47 38             	mov    %eax,0x38(%edi)$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	89 f8                	mov    %edi,%eax$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	66 83 4f 34 03       	orw    $0x3,0x34(%edi)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	89 c6                	mov    %eax,%esi$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	eb 45                	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	e8 a5 1d 00 00       	call   f01067a6 <time_msec>$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	eb 3c                	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	e8 60 12 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	6a 04                	push   $0x4$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	e8 e7 e3 ff ff       	call   f0102e07 <user_mem_assert>$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	e8 6f 17 00 00       	call   f010619d <transmit_packets>$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	eb 0c                	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	eb 05                	jmp    f0104a41 <syscall+0x5ee>$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	89 d8                	mov    %ebx,%eax$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	5b                   	pop    %ebx$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	5e                   	pop    %esi$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	5f                   	pop    %edi$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	5d                   	pop    %ebp$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	c3                   	ret    $/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b <stab_binsearch>:$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	55                   	push   %ebp$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	57                   	push   %edi$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	56                   	push   %esi$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	53                   	push   %ebx$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	eb 7f                	jmp    f0104aef <stab_binsearch+0xa4>$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	01 d8                	add    %ebx,%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 c6                	mov    %eax,%esi$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	01 c6                	add    %eax,%esi$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	d1 fe                	sar    %esi$/;"	d
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	89 f0                	mov    %esi,%eax$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	eb 03                	jmp    f0104a8e <stab_binsearch+0x43>$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	7f 0d                	jg     f0104a9f <stab_binsearch+0x54>$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	39 f9                	cmp    %edi,%ecx$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	75 ee                	jne    f0104a8b <stab_binsearch+0x40>$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	eb 05                	jmp    f0104aa4 <stab_binsearch+0x59>$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	eb 4b                	jmp    f0104aef <stab_binsearch+0xa4>$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	76 11                	jbe    f0104ac4 <stab_binsearch+0x79>$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	eb 2b                	jmp    f0104aef <stab_binsearch+0xa4>$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	73 14                	jae    f0104add <stab_binsearch+0x92>$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	89 06                	mov    %eax,(%esi)$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	eb 12                	jmp    f0104aef <stab_binsearch+0xa4>$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	89 06                	mov    %eax,(%esi)$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	89 c3                	mov    %eax,%ebx$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	0f 8e 78 ff ff ff    	jle    f0104a70 <stab_binsearch+0x25>$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104afc	obj/kern/kernel.asm	/^f0104afc:	75 0f                	jne    f0104b0d <stab_binsearch+0xc2>$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	8b 00                	mov    (%eax),%eax$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	89 06                	mov    %eax,(%esi)$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	eb 2c                	jmp    f0104b39 <stab_binsearch+0xee>$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	8b 00                	mov    (%eax),%eax$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	eb 03                	jmp    f0104b25 <stab_binsearch+0xda>$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	7e 0b                	jle    f0104b34 <stab_binsearch+0xe9>$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	39 df                	cmp    %ebx,%edi$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	75 ee                	jne    f0104b22 <stab_binsearch+0xd7>$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	89 06                	mov    %eax,(%esi)$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	5b                   	pop    %ebx$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	5e                   	pop    %esi$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	5f                   	pop    %edi$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	5d                   	pop    %ebp$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	c3                   	ret    $/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41 <debuginfo_eip>:$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	55                   	push   %ebp$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	57                   	push   %edi$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	56                   	push   %esi$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	53                   	push   %ebx$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	c7 03 2c 82 10 f0    	movl   $0xf010822c,(%ebx)$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	c7 43 08 2c 82 10 f0 	movl   $0xf010822c,0x8(%ebx)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	0f 87 9e 00 00 00    	ja     f0104c1e <debuginfo_eip+0xdd>$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	e8 e5 10 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	6a 04                	push   $0x4$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	6a 10                	push   $0x10$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	68 00 00 20 00       	push   $0x200000$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	e8 e9 e1 ff ff       	call   f0102d85 <user_mem_check>$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	85 c0                	test   %eax,%eax$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	0f 88 3c 02 00 00    	js     f0104de3 <debuginfo_eip+0x2a2>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	89 c6                	mov    %eax,%esi$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	8b 0d 0c 00 20 00    	mov    0x20000c,%ecx$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	e8 9d 10 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	6a 04                	push   $0x4$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	6a 0c                	push   $0xc$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	e8 a3 e1 ff ff       	call   f0102d85 <user_mem_check>$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	85 c0                	test   %eax,%eax$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	0f 88 fd 01 00 00    	js     f0104dea <debuginfo_eip+0x2a9>$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	56                   	push   %esi$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	e8 d3 08 00 00       	call   f01054c9 <strlen>$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	e8 6c 10 00 00       	call   f0105c6a <cpunum>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	6a 04                	push   $0x4$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	56                   	push   %esi$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	ff b0 28 e0 2c f0    	pushl  -0xfd31fd8(%eax)$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	e8 73 e1 ff ff       	call   f0102d85 <user_mem_check>$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	85 c0                	test   %eax,%eax$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	79 1f                	jns    f0104c38 <debuginfo_eip+0xf7>$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	e9 d3 01 00 00       	jmp    f0104df1 <debuginfo_eip+0x2b0>$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	c7 45 bc bf 83 11 f0 	movl   $0xf01183bf,-0x44(%ebp)$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	c7 45 b8 c1 40 11 f0 	movl   $0xf01140c1,-0x48(%ebp)$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	bf c0 40 11 f0       	mov    $0xf01140c0,%edi$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	c7 45 c0 68 8a 10 f0 	movl   $0xf0108a68,-0x40(%ebp)$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	0f 83 b4 01 00 00    	jae    f0104df8 <debuginfo_eip+0x2b7>$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	0f 85 b1 01 00 00    	jne    f0104dff <debuginfo_eip+0x2be>$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	29 f7                	sub    %esi,%edi$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	c1 ff 02             	sar    $0x2,%edi$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	69 c7 ab aa aa aa    	imul   $0xaaaaaaab,%edi,%eax$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	6a 64                	push   $0x64$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	89 d1                	mov    %edx,%ecx$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	89 f0                	mov    %esi,%eax$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	e8 cb fd ff ff       	call   f0104a4b <stab_binsearch>$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	85 c0                	test   %eax,%eax$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	0f 84 78 01 00 00    	je     f0104e06 <debuginfo_eip+0x2c5>$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	6a 24                	push   $0x24$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	89 d1                	mov    %edx,%ecx$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	89 f0                	mov    %esi,%eax$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	e8 9d fd ff ff       	call   f0104a4b <stab_binsearch>$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	39 d0                	cmp    %edx,%eax$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	7f 29                	jg     f0104ce4 <debuginfo_eip+0x1a3>$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	8d 3c 8e             	lea    (%esi,%ecx,4),%edi$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	8b 37                	mov    (%edi),%esi$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	2b 4d b8             	sub    -0x48(%ebp),%ecx$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	39 ce                	cmp    %ecx,%esi$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	73 06                	jae    f0104cd3 <debuginfo_eip+0x192>$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	03 75 b8             	add    -0x48(%ebp),%esi$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	8b 4f 08             	mov    0x8(%edi),%ecx$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	29 4d 08             	sub    %ecx,0x8(%ebp)$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	eb 12                	jmp    f0104cf6 <debuginfo_eip+0x1b5>$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	6a 3a                	push   $0x3a$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	e8 28 09 00 00       	call   f010562b <strfind>$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	6a 44                	push   $0x44$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	89 f8                	mov    %edi,%eax$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	e8 2a fd ff ff       	call   f0104a4b <stab_binsearch>$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	0f 8f dd 00 00 00    	jg     f0104e0d <debuginfo_eip+0x2cc>$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	eb 0a                	jmp    f0104d53 <debuginfo_eip+0x212>$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	39 c7                	cmp    %eax,%edi$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	7e 05                	jle    f0104d5c <debuginfo_eip+0x21b>$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	eb 47                	jmp    f0104da3 <debuginfo_eip+0x262>$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	75 0e                	jne    f0104d73 <debuginfo_eip+0x232>$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	74 1c                	je     f0104d8a <debuginfo_eip+0x249>$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	eb 17                	jmp    f0104d8a <debuginfo_eip+0x249>$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	75 d1                	jne    f0104d49 <debuginfo_eip+0x208>$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	74 cb                	je     f0104d49 <debuginfo_eip+0x208>$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	74 03                	je     f0104d8a <debuginfo_eip+0x249>$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	8b 75 b8             	mov    -0x48(%ebp),%esi$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	29 f0                	sub    %esi,%eax$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	39 c2                	cmp    %eax,%edx$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	73 04                	jae    f0104da3 <debuginfo_eip+0x262>$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	01 f2                	add    %esi,%edx$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	89 13                	mov    %edx,(%ebx)$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	39 f2                	cmp    %esi,%edx$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	7d 67                	jge    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	89 d0                	mov    %edx,%eax$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	eb 04                	jmp    f0104dc9 <debuginfo_eip+0x288>$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0104dc9	obj/kern/kernel.asm	/^f0104dc9:	39 c6                	cmp    %eax,%esi$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	7e 47                	jle    f0104e14 <debuginfo_eip+0x2d3>$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	74 e9                	je     f0104dc5 <debuginfo_eip+0x284>$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	eb 36                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	eb 2f                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	eb 28                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	eb 21                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	eb 1a                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	eb 13                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	eb 0c                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	eb 05                	jmp    f0104e19 <debuginfo_eip+0x2d8>$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	5b                   	pop    %ebx$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	5e                   	pop    %esi$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	5f                   	pop    %edi$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	5d                   	pop    %ebp$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	c3                   	ret    $/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21 <printnum>:$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	55                   	push   %ebp$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	57                   	push   %edi$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	56                   	push   %esi$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	53                   	push   %ebx$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	89 c7                	mov    %eax,%edi$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	89 d6                	mov    %edx,%esi$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	72 05                	jb     f0104e51 <printnum+0x30>$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	77 45                	ja     f0104e96 <printnum+0x75>$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	53                   	push   %ebx$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	e8 4b 19 00 00       	call   f01067c0 <__udivdi3>$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	83 c4 18             	add    $0x18,%esp$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	52                   	push   %edx$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	50                   	push   %eax$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	89 f2                	mov    %esi,%edx$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	89 f8                	mov    %edi,%eax$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	e8 9e ff ff ff       	call   f0104e21 <printnum>$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	eb 18                	jmp    f0104ea0 <printnum+0x7f>$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	56                   	push   %esi$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	ff d7                	call   *%edi$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	eb 03                	jmp    f0104e99 <printnum+0x78>$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	85 db                	test   %ebx,%ebx$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	7f e8                	jg     f0104e88 <printnum+0x67>$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	56                   	push   %esi$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	e8 38 1a 00 00       	call   f01068f0 <__umoddi3>$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	0f be 80 36 82 10 f0 	movsbl -0xfef7dca(%eax),%eax$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	50                   	push   %eax$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	ff d7                	call   *%edi$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	5b                   	pop    %ebx$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	5e                   	pop    %esi$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	5f                   	pop    %edi$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	5d                   	pop    %ebp$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	c3                   	ret    $/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0 <sprintputch>:$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	55                   	push   %ebp$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	8b 10                	mov    (%eax),%edx$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	73 0a                	jae    f0104eeb <sprintputch+0x1b>$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	88 02                	mov    %al,(%edx)$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	5d                   	pop    %ebp$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	c3                   	ret    $/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed <printfmt>:$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	55                   	push   %ebp$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	50                   	push   %eax$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	e8 05 00 00 00       	call   f0104f0a <vprintfmt>$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	c9                   	leave  $/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	c3                   	ret    $/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a <vprintfmt>:$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	55                   	push   %ebp$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	57                   	push   %edi$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	56                   	push   %esi$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	53                   	push   %ebx$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	eb 12                	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	85 c0                	test   %eax,%eax$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	0f 84 42 04 00 00    	je     f0105368 <vprintfmt+0x45e>$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	53                   	push   %ebx$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	50                   	push   %eax$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	ff d6                	call   *%esi$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	75 e2                	jne    f0104f1e <vprintfmt+0x14>$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	eb 07                	jmp    f0104f63 <vprintfmt+0x59>$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	3c 55                	cmp    $0x55,%al$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	0f 87 d3 03 00 00    	ja     f010534d <vprintfmt+0x443>$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	ff 24 85 80 83 10 f0 	jmp    *-0xfef7c80(,%eax,4)$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	eb d6                	jmp    f0104f63 <vprintfmt+0x59>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	77 3f                	ja     f0104fe9 <vprintfmt+0xdf>$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	eb e9                	jmp    f0104f98 <vprintfmt+0x8e>$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	8b 00                	mov    (%eax),%eax$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	eb 2a                	jmp    f0104fef <vprintfmt+0xe5>$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	85 c0                	test   %eax,%eax$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	eb 89                	jmp    f0104f63 <vprintfmt+0x59>$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	e9 7a ff ff ff       	jmp    f0104f63 <vprintfmt+0x59>$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	0f 89 6a ff ff ff    	jns    f0104f63 <vprintfmt+0x59>$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	e9 58 ff ff ff       	jmp    f0104f63 <vprintfmt+0x59>$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	e9 4d ff ff ff       	jmp    f0104f63 <vprintfmt+0x59>$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	53                   	push   %ebx$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	ff 30                	pushl  (%eax)$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	ff d6                	call   *%esi$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	e9 fe fe ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0105038	obj/kern/kernel.asm	/^f0105038:	8b 00                	mov    (%eax),%eax$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	99                   	cltd   $/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	31 d0                	xor    %edx,%eax$/;"	l
f010503d	obj/kern/kernel.asm	/^f010503d:	29 d0                	sub    %edx,%eax$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	7f 0b                	jg     f010504f <vprintfmt+0x145>$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	8b 14 85 e0 84 10 f0 	mov    -0xfef7b20(,%eax,4),%edx$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	85 d2                	test   %edx,%edx$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	75 1b                	jne    f010506a <vprintfmt+0x160>$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	50                   	push   %eax$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	68 4e 82 10 f0       	push   $0xf010824e$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	53                   	push   %ebx$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	56                   	push   %esi$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	e8 91 fe ff ff       	call   f0104eed <printfmt>$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	e9 c6 fe ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	52                   	push   %edx$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	68 c9 79 10 f0       	push   $0xf01079c9$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	53                   	push   %ebx$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	56                   	push   %esi$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	e8 76 fe ff ff       	call   f0104eed <printfmt>$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	83 c4 10             	add    $0x10,%esp$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	e9 ab fe ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	83 c0 04             	add    $0x4,%eax$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	8b 38                	mov    (%eax),%edi$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	85 ff                	test   %edi,%edi$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	b8 47 82 10 f0       	mov    $0xf0108247,%eax$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	0f 8e 94 00 00 00    	jle    f010513b <vprintfmt+0x231>$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	0f 84 98 00 00 00    	je     f0105149 <vprintfmt+0x23f>$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	57                   	push   %edi$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	e8 24 04 00 00       	call   f01054e1 <strnlen>$/;"	l
f01050bd	obj/kern/kernel.asm	/^f01050bd:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	29 c1                	sub    %eax,%ecx$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	89 cf                	mov    %ecx,%edi$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	eb 0f                	jmp    f01050e5 <vprintfmt+0x1db>$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	53                   	push   %ebx$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	ff d6                	call   *%esi$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	85 ff                	test   %edi,%edi$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	7f ed                	jg     f01050d6 <vprintfmt+0x1cc>$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	85 c9                	test   %ecx,%ecx$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	29 c1                	sub    %eax,%ecx$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	eb 4d                	jmp    f0105155 <vprintfmt+0x24b>$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	74 1b                	je     f0105129 <vprintfmt+0x21f>$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	0f be c0             	movsbl %al,%eax$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	76 10                	jbe    f0105129 <vprintfmt+0x21f>$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	6a 3f                	push   $0x3f$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	eb 0d                	jmp    f0105136 <vprintfmt+0x22c>$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	52                   	push   %edx$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	eb 1a                	jmp    f0105155 <vprintfmt+0x24b>$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	eb 0c                	jmp    f0105155 <vprintfmt+0x24b>$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	0f be d0             	movsbl %al,%edx$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	85 d2                	test   %edx,%edx$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	74 23                	je     f0105186 <vprintfmt+0x27c>$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	85 f6                	test   %esi,%esi$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	78 a1                	js     f0105108 <vprintfmt+0x1fe>$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	79 9c                	jns    f0105108 <vprintfmt+0x1fe>$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	89 df                	mov    %ebx,%edi$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	eb 18                	jmp    f010518e <vprintfmt+0x284>$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	53                   	push   %ebx$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	6a 20                	push   $0x20$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	ff d6                	call   *%esi$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	eb 08                	jmp    f010518e <vprintfmt+0x284>$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	89 df                	mov    %ebx,%edi$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	85 ff                	test   %edi,%edi$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	7f e4                	jg     f0105176 <vprintfmt+0x26c>$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	e9 90 fd ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	7e 19                	jle    f01051be <vprintfmt+0x2b4>$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	8b 00                	mov    (%eax),%eax$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	eb 38                	jmp    f01051f6 <vprintfmt+0x2ec>$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	85 c9                	test   %ecx,%ecx$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	74 1b                	je     f01051dd <vprintfmt+0x2d3>$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	8b 00                	mov    (%eax),%eax$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	89 c1                	mov    %eax,%ecx$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	eb 19                	jmp    f01051f6 <vprintfmt+0x2ec>$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	8b 00                	mov    (%eax),%eax$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	89 c1                	mov    %eax,%ecx$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	0f 89 0e 01 00 00    	jns    f0105319 <vprintfmt+0x40f>$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	53                   	push   %ebx$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	6a 2d                	push   $0x2d$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	ff d6                	call   *%esi$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	f7 da                	neg    %edx$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	f7 d9                	neg    %ecx$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	e9 ec 00 00 00       	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	7e 18                	jle    f010524a <vprintfmt+0x340>$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	8b 10                	mov    (%eax),%edx$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	e9 cf 00 00 00       	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	85 c9                	test   %ecx,%ecx$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	74 1a                	je     f0105268 <vprintfmt+0x35e>$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	8b 10                	mov    (%eax),%edx$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	e9 b1 00 00 00       	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	8b 10                	mov    (%eax),%edx$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	e9 97 00 00 00       	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	53                   	push   %ebx$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	6a 58                	push   $0x58$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	ff d6                	call   *%esi$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	53                   	push   %ebx$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	6a 58                	push   $0x58$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	ff d6                	call   *%esi$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	53                   	push   %ebx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	6a 58                	push   $0x58$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	ff d6                	call   *%esi$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	e9 8b fc ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	53                   	push   %ebx$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	6a 30                	push   $0x30$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	ff d6                	call   *%esi$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	83 c4 08             	add    $0x8,%esp$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	53                   	push   %ebx$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	6a 78                	push   $0x78$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	ff d6                	call   *%esi$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	8b 10                	mov    (%eax),%edx$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	eb 4a                	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	7e 15                	jle    f01052e9 <vprintfmt+0x3df>$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01052d7	obj/kern/kernel.asm	/^f01052d7:	8b 10                	mov    (%eax),%edx$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	eb 30                	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	85 c9                	test   %ecx,%ecx$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	74 17                	je     f0105304 <vprintfmt+0x3fa>$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	8b 10                	mov    (%eax),%edx$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	eb 15                	jmp    f0105319 <vprintfmt+0x40f>$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	8b 10                	mov    (%eax),%edx$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105311	obj/kern/kernel.asm	/^f0105311:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	57                   	push   %edi$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	50                   	push   %eax$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	51                   	push   %ecx$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	52                   	push   %edx$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	89 da                	mov    %ebx,%edx$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	89 f0                	mov    %esi,%eax$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	e8 f1 fa ff ff       	call   f0104e21 <printnum>$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	e9 f5 fb ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	53                   	push   %ebx$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	52                   	push   %edx$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	ff d6                	call   *%esi$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	e9 e3 fb ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	53                   	push   %ebx$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	6a 25                	push   $0x25$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	ff d6                	call   *%esi$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	eb 03                	jmp    f010535d <vprintfmt+0x453>$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	75 f7                	jne    f010535a <vprintfmt+0x450>$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	e9 c8 fb ff ff       	jmp    f0104f30 <vprintfmt+0x26>$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	5b                   	pop    %ebx$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	5e                   	pop    %esi$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	5f                   	pop    %edi$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	5d                   	pop    %ebp$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	c3                   	ret    $/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370 <vsnprintf>:$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	55                   	push   %ebp$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	89 e5                	mov    %esp,%ebp$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	85 c0                	test   %eax,%eax$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	74 26                	je     f01053b7 <vsnprintf+0x47>$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	85 d2                	test   %edx,%edx$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	7e 22                	jle    f01053b7 <vsnprintf+0x47>$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	50                   	push   %eax$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	68 d0 4e 10 f0       	push   $0xf0104ed0$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	e8 61 fb ff ff       	call   f0104f0a <vprintfmt>$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	eb 05                	jmp    f01053bc <vsnprintf+0x4c>$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	c9                   	leave  $/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	c3                   	ret    $/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be <snprintf>:$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	55                   	push   %ebp$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	50                   	push   %eax$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	e8 9a ff ff ff       	call   f0105370 <vsnprintf>$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	c9                   	leave  $/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	c3                   	ret    $/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8 <readline>:$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	55                   	push   %ebp$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	57                   	push   %edi$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	56                   	push   %esi$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	53                   	push   %ebx$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	85 c0                	test   %eax,%eax$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	74 11                	je     f01053f9 <readline+0x21>$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	50                   	push   %eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	68 c9 79 10 f0       	push   $0xf01079c9$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	e8 96 e3 ff ff       	call   f010378c <cprintf>$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	6a 00                	push   $0x0$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	e8 21 b4 ff ff       	call   f0100824 <iscons>$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	89 c7                	mov    %eax,%edi$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	e8 01 b4 ff ff       	call   f0100813 <getchar>$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	89 c3                	mov    %eax,%ebx$/;"	l
f0105414	obj/kern/kernel.asm	/^f0105414:	85 c0                	test   %eax,%eax$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	79 29                	jns    f0105441 <readline+0x69>$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	0f 84 9b 00 00 00    	je     f01054c1 <readline+0xe9>$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	53                   	push   %ebx$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	68 3f 85 10 f0       	push   $0xf010853f$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	e8 58 e3 ff ff       	call   f010378c <cprintf>$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	e9 80 00 00 00       	jmp    f01054c1 <readline+0xe9>$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	0f 94 c2             	sete   %dl$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	0f 94 c0             	sete   %al$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	08 c2                	or     %al,%dl$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	74 1a                	je     f010546b <readline+0x93>$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	85 f6                	test   %esi,%esi$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	7e 16                	jle    f010546b <readline+0x93>$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	85 ff                	test   %edi,%edi$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	74 0d                	je     f0105466 <readline+0x8e>$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	6a 08                	push   $0x8$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	e8 a0 b3 ff ff       	call   f0100803 <cputchar>$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	eb a2                	jmp    f010540d <readline+0x35>$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	7e 26                	jle    f0105496 <readline+0xbe>$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	7f 1e                	jg     f0105496 <readline+0xbe>$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	85 ff                	test   %edi,%edi$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	74 0c                	je     f0105488 <readline+0xb0>$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010547f	obj/kern/kernel.asm	/^f010547f:	53                   	push   %ebx$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	e8 7e b3 ff ff       	call   f0100803 <cputchar>$/;"	l
f0105485	obj/kern/kernel.asm	/^f0105485:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	88 9e 80 ca 2a f0    	mov    %bl,-0xfd53580(%esi)$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105491	obj/kern/kernel.asm	/^f0105491:	e9 77 ff ff ff       	jmp    f010540d <readline+0x35>$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	74 09                	je     f01054a4 <readline+0xcc>$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	0f 85 69 ff ff ff    	jne    f010540d <readline+0x35>$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	85 ff                	test   %edi,%edi$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	74 0d                	je     f01054b5 <readline+0xdd>$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	6a 0a                	push   $0xa$/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	e8 51 b3 ff ff       	call   f0100803 <cputchar>$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	c6 86 80 ca 2a f0 00 	movb   $0x0,-0xfd53580(%esi)$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	b8 80 ca 2a f0       	mov    $0xf02aca80,%eax$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	5b                   	pop    %ebx$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	5e                   	pop    %esi$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	5f                   	pop    %edi$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	5d                   	pop    %ebp$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	c3                   	ret    $/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9 <strlen>:$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	55                   	push   %ebp$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	eb 03                	jmp    f01054d9 <strlen+0x10>$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	75 f7                	jne    f01054d6 <strlen+0xd>$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	5d                   	pop    %ebp$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	c3                   	ret    $/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1 <strnlen>:$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	55                   	push   %ebp$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	eb 03                	jmp    f01054f4 <strnlen+0x13>$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	39 c2                	cmp    %eax,%edx$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	74 08                	je     f0105500 <strnlen+0x1f>$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	75 f3                	jne    f01054f1 <strnlen+0x10>$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	89 d0                	mov    %edx,%eax$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	5d                   	pop    %ebp$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	c3                   	ret    $/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502 <strcpy>:$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	55                   	push   %ebp$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	89 e5                	mov    %esp,%ebp$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	53                   	push   %ebx$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	89 c2                	mov    %eax,%edx$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	84 db                	test   %bl,%bl$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	75 ef                	jne    f010550e <strcpy+0xc>$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	5b                   	pop    %ebx$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	5d                   	pop    %ebp$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	c3                   	ret    $/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522 <strcat>:$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	55                   	push   %ebp$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	89 e5                	mov    %esp,%ebp$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	53                   	push   %ebx$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	53                   	push   %ebx$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	e8 9a ff ff ff       	call   f01054c9 <strlen>$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	01 d8                	add    %ebx,%eax$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	50                   	push   %eax$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	e8 c5 ff ff ff       	call   f0105502 <strcpy>$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	89 d8                	mov    %ebx,%eax$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	c9                   	leave  $/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	c3                   	ret    $/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544 <strncpy>:$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	55                   	push   %ebp$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	89 e5                	mov    %esp,%ebp$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	56                   	push   %esi$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	53                   	push   %ebx$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	89 f3                	mov    %esi,%ebx$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	89 f2                	mov    %esi,%edx$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	eb 0f                	jmp    f0105567 <strncpy+0x23>$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	83 c2 01             	add    $0x1,%edx$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	39 da                	cmp    %ebx,%edx$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	75 ed                	jne    f0105558 <strncpy+0x14>$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	89 f0                	mov    %esi,%eax$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	5b                   	pop    %ebx$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	5e                   	pop    %esi$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	5d                   	pop    %ebp$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	c3                   	ret    $/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571 <strlcpy>:$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	55                   	push   %ebp$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	89 e5                	mov    %esp,%ebp$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	56                   	push   %esi$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	53                   	push   %ebx$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	89 f0                	mov    %esi,%eax$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	85 d2                	test   %edx,%edx$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	74 21                	je     f01055a6 <strlcpy+0x35>$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	89 f2                	mov    %esi,%edx$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	eb 09                	jmp    f0105596 <strlcpy+0x25>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	39 c2                	cmp    %eax,%edx$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	74 09                	je     f01055a3 <strlcpy+0x32>$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	84 db                	test   %bl,%bl$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	75 ec                	jne    f010558d <strlcpy+0x1c>$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	89 d0                	mov    %edx,%eax$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	29 f0                	sub    %esi,%eax$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	5b                   	pop    %ebx$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	5e                   	pop    %esi$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	5d                   	pop    %ebp$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	c3                   	ret    $/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac <strcmp>:$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	55                   	push   %ebp$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	eb 06                	jmp    f01055bd <strcmp+0x11>$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	83 c2 01             	add    $0x1,%edx$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	84 c0                	test   %al,%al$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	74 04                	je     f01055c8 <strcmp+0x1c>$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	3a 02                	cmp    (%edx),%al$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	74 ef                	je     f01055b7 <strcmp+0xb>$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	29 d0                	sub    %edx,%eax$/;"	l
f01055d0	obj/kern/kernel.asm	/^f01055d0:	5d                   	pop    %ebp$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	c3                   	ret    $/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2 <strncmp>:$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	55                   	push   %ebp$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	53                   	push   %ebx$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	89 c3                	mov    %eax,%ebx$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	eb 06                	jmp    f01055e9 <strncmp+0x17>$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	39 d8                	cmp    %ebx,%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	74 15                	je     f0105602 <strncmp+0x30>$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	84 c9                	test   %cl,%cl$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	74 04                	je     f01055f8 <strncmp+0x26>$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	74 eb                	je     f01055e3 <strncmp+0x11>$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	29 d0                	sub    %edx,%eax$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	eb 05                	jmp    f0105607 <strncmp+0x35>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	5b                   	pop    %ebx$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	5d                   	pop    %ebp$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	c3                   	ret    $/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a <strchr>:$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	55                   	push   %ebp$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	89 e5                	mov    %esp,%ebp$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	eb 07                	jmp    f010561d <strchr+0x13>$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	38 ca                	cmp    %cl,%dl$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	74 0f                	je     f0105629 <strchr+0x1f>$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	84 d2                	test   %dl,%dl$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	75 f2                	jne    f0105616 <strchr+0xc>$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	5d                   	pop    %ebp$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	c3                   	ret    $/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b <strfind>:$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	55                   	push   %ebp$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	89 e5                	mov    %esp,%ebp$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	eb 03                	jmp    f010563a <strfind+0xf>$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	83 c0 01             	add    $0x1,%eax$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	38 ca                	cmp    %cl,%dl$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	74 04                	je     f0105645 <strfind+0x1a>$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	84 d2                	test   %dl,%dl$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	75 f2                	jne    f0105637 <strfind+0xc>$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	5d                   	pop    %ebp$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	c3                   	ret    $/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647 <memset>:$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	55                   	push   %ebp$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	89 e5                	mov    %esp,%ebp$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	57                   	push   %edi$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	56                   	push   %esi$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	53                   	push   %ebx$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	85 c9                	test   %ecx,%ecx$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	74 36                	je     f010568d <memset+0x46>$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	75 28                	jne    f0105687 <memset+0x40>$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	75 23                	jne    f0105687 <memset+0x40>$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	89 d3                	mov    %edx,%ebx$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	89 d6                	mov    %edx,%esi$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	89 d0                	mov    %edx,%eax$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	09 f0                	or     %esi,%eax$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	09 c2                	or     %eax,%edx$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	89 d8                	mov    %ebx,%eax$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	09 d0                	or     %edx,%eax$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	fc                   	cld    $/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	eb 06                	jmp    f010568d <memset+0x46>$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	fc                   	cld    $/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	89 f8                	mov    %edi,%eax$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	5b                   	pop    %ebx$/;"	l
f0105690	obj/kern/kernel.asm	/^f0105690:	5e                   	pop    %esi$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	5f                   	pop    %edi$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	5d                   	pop    %ebp$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	c3                   	ret    $/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694 <memmove>:$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	55                   	push   %ebp$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	89 e5                	mov    %esp,%ebp$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	57                   	push   %edi$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	56                   	push   %esi$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	39 c6                	cmp    %eax,%esi$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	73 35                	jae    f01056db <memmove+0x47>$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	39 d0                	cmp    %edx,%eax$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	73 2e                	jae    f01056db <memmove+0x47>$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	89 d6                	mov    %edx,%esi$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	09 fe                	or     %edi,%esi$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	75 13                	jne    f01056cf <memmove+0x3b>$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	75 0e                	jne    f01056cf <memmove+0x3b>$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	fd                   	std    $/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	eb 09                	jmp    f01056d8 <memmove+0x44>$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	fd                   	std    $/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	fc                   	cld    $/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	eb 1d                	jmp    f01056f8 <memmove+0x64>$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	89 f2                	mov    %esi,%edx$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	09 c2                	or     %eax,%edx$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	75 0f                	jne    f01056f3 <memmove+0x5f>$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	75 0a                	jne    f01056f3 <memmove+0x5f>$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	89 c7                	mov    %eax,%edi$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	fc                   	cld    $/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	eb 05                	jmp    f01056f8 <memmove+0x64>$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	89 c7                	mov    %eax,%edi$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	fc                   	cld    $/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	5e                   	pop    %esi$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	5f                   	pop    %edi$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	5d                   	pop    %ebp$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	c3                   	ret    $/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc <memcpy>:$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	55                   	push   %ebp$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	e8 87 ff ff ff       	call   f0105694 <memmove>$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	c9                   	leave  $/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	c3                   	ret    $/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f <memcmp>:$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	55                   	push   %ebp$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	89 e5                	mov    %esp,%ebp$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	56                   	push   %esi$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	53                   	push   %ebx$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	89 c6                	mov    %eax,%esi$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	eb 1a                	jmp    f010573b <memcmp+0x2c>$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	38 d9                	cmp    %bl,%cl$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	74 0a                	je     f0105735 <memcmp+0x26>$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	29 d8                	sub    %ebx,%eax$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	eb 0f                	jmp    f0105744 <memcmp+0x35>$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	83 c2 01             	add    $0x1,%edx$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	39 f0                	cmp    %esi,%eax$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	75 e2                	jne    f0105721 <memcmp+0x12>$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	5b                   	pop    %ebx$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	5e                   	pop    %esi$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	5d                   	pop    %ebp$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	c3                   	ret    $/;"	l
f0105748	obj/kern/kernel.asm	/^f0105748 <memfind>:$/;"	l
f0105748	obj/kern/kernel.asm	/^f0105748:	55                   	push   %ebp$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	89 e5                	mov    %esp,%ebp$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	53                   	push   %ebx$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	89 c1                	mov    %eax,%ecx$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	eb 0a                	jmp    f0105764 <memfind+0x1c>$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	39 da                	cmp    %ebx,%edx$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	74 07                	je     f0105768 <memfind+0x20>$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	72 f2                	jb     f010575a <memfind+0x12>$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	5b                   	pop    %ebx$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	5d                   	pop    %ebp$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	c3                   	ret    $/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b <strtol>:$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	55                   	push   %ebp$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	89 e5                	mov    %esp,%ebp$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	57                   	push   %edi$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	56                   	push   %esi$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	53                   	push   %ebx$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	eb 03                	jmp    f010577c <strtol+0x11>$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	3c 20                	cmp    $0x20,%al$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	74 f6                	je     f0105779 <strtol+0xe>$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	3c 09                	cmp    $0x9,%al$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	74 f2                	je     f0105779 <strtol+0xe>$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	75 0a                	jne    f0105795 <strtol+0x2a>$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	eb 11                	jmp    f01057a6 <strtol+0x3b>$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	75 08                	jne    f01057a6 <strtol+0x3b>$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	75 15                	jne    f01057c3 <strtol+0x58>$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	75 10                	jne    f01057c3 <strtol+0x58>$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	75 7c                	jne    f0105835 <strtol+0xca>$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	83 c1 02             	add    $0x2,%ecx$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	eb 16                	jmp    f01057d9 <strtol+0x6e>$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	85 db                	test   %ebx,%ebx$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	75 12                	jne    f01057d9 <strtol+0x6e>$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	75 08                	jne    f01057d9 <strtol+0x6e>$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	89 f3                	mov    %esi,%ebx$/;"	l
f01057e9	obj/kern/kernel.asm	/^f01057e9:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	77 08                	ja     f01057f6 <strtol+0x8b>$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	0f be d2             	movsbl %dl,%edx$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	eb 22                	jmp    f0105818 <strtol+0xad>$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	89 f3                	mov    %esi,%ebx$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	77 08                	ja     f0105808 <strtol+0x9d>$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	eb 10                	jmp    f0105818 <strtol+0xad>$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	89 f3                	mov    %esi,%ebx$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	77 16                	ja     f0105828 <strtol+0xbd>$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	7d 0b                	jge    f0105828 <strtol+0xbd>$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	01 d0                	add    %edx,%eax$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	eb b9                	jmp    f01057e1 <strtol+0x76>$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	74 0d                	je     f010583b <strtol+0xd0>$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	eb 06                	jmp    f010583b <strtol+0xd0>$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	85 db                	test   %ebx,%ebx$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	74 98                	je     f01057d1 <strtol+0x66>$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	eb 9e                	jmp    f01057d9 <strtol+0x6e>$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	89 c2                	mov    %eax,%edx$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	f7 da                	neg    %edx$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	85 ff                	test   %edi,%edi$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	5b                   	pop    %ebx$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	5e                   	pop    %esi$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	5f                   	pop    %edi$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	5d                   	pop    %ebp$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	c3                   	ret    $/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	66 90                	xchg   %ax,%ax$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	90                   	nop$/;"	l
f010584c	obj/kern/kernel.asm	/^f010584c <mpentry_start>:$/;"	l
f010584c	obj/kern/kernel.asm	/^f010584c:	fa                   	cli    $/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	31 c0                	xor    %eax,%eax$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	8e d8                	mov    %eax,%ds$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	8e c0                	mov    %eax,%es$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	8e d0                	mov    %eax,%ss$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	74 70                	je     f01058ca <mpsearch1+0x3>$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	08 00                	or     %al,(%eax)$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c <start32>:$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	8e d8                	mov    %eax,%ds$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	8e c0                	mov    %eax,%es$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	8e d0                	mov    %eax,%ss$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	8e e0                	mov    %eax,%fs$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	8e e8                	mov    %eax,%gs$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	8b 25 90 ce 2a f0    	mov    0xf02ace90,%esp$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	b8 2e 02 10 f0       	mov    $0xf010022e,%eax$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	ff d0                	call   *%eax$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3 <spin>:$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	eb fe                	jmp    f01058a3 <spin>$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8 <gdt>:$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	ff                   	(bad)  $/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	ff 00                	incl   (%eax)$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	00 00                	add    %al,(%eax)$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	00                   	.byte 0x0$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	92                   	xchg   %eax,%edx$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	cf                   	iret   $/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0 <gdtdesc>:$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	17                   	pop    %ss$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6 <mpentry_end>:$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	90                   	nop$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7 <mpsearch1>:$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	55                   	push   %ebp$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	57                   	push   %edi$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	56                   	push   %esi$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	53                   	push   %ebx$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	8b 0d c0 d2 2c f0    	mov    0xf02cd2c0,%ecx$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	89 c3                	mov    %eax,%ebx$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	72 12                	jb     f01058f1 <mpsearch1+0x2a>$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	50                   	push   %eax$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	6a 59                	push   $0x59$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	68 dd 86 10 f0       	push   $0xf01086dd$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	e8 a3 a7 ff ff       	call   f0100094 <_panic>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	01 d0                	add    %edx,%eax$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	89 c2                	mov    %eax,%edx$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	72 12                	jb     f0105914 <mpsearch1+0x4d>$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	50                   	push   %eax$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	6a 59                	push   $0x59$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	68 dd 86 10 f0       	push   $0xf01086dd$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	e8 80 a7 ff ff       	call   f0100094 <_panic>$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	eb 2f                	jmp    f010594b <mpsearch1+0x84>$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	6a 04                	push   $0x4$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	68 ed 86 10 f0       	push   $0xf01086ed$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	53                   	push   %ebx$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	e8 e3 fd ff ff       	call   f010570f <memcmp>$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	85 c0                	test   %eax,%eax$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	75 15                	jne    f0105948 <mpsearch1+0x81>$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	89 da                	mov    %ebx,%edx$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	01 c8                	add    %ecx,%eax$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	39 d7                	cmp    %edx,%edi$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	75 f4                	jne    f0105938 <mpsearch1+0x71>$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	84 c0                	test   %al,%al$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	74 0e                	je     f0105956 <mpsearch1+0x8f>$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	83 c3 10             	add    $0x10,%ebx$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	72 cd                	jb     f010591c <mpsearch1+0x55>$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	eb 02                	jmp    f0105958 <mpsearch1+0x91>$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	89 d8                	mov    %ebx,%eax$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	5b                   	pop    %ebx$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	5e                   	pop    %esi$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	5f                   	pop    %edi$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	5d                   	pop    %ebp$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	c3                   	ret    $/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960 <mp_init>:$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	55                   	push   %ebp$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	89 e5                	mov    %esp,%ebp$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	57                   	push   %edi$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	56                   	push   %esi$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	53                   	push   %ebx$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	c7 05 c0 e3 2c f0 20 	movl   $0xf02ce020,0xf02ce3c0$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	e0 2c f0 $/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	83 3d c0 d2 2c f0 00 	cmpl   $0x0,0xf02cd2c0$/;"	l
f010597a	obj/kern/kernel.asm	/^f010597a:	75 16                	jne    f0105992 <mp_init+0x32>$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	68 00 04 00 00       	push   $0x400$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	6a 71                	push   $0x71$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	68 dd 86 10 f0       	push   $0xf01086dd$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	e8 02 a7 ff ff       	call   f0100094 <_panic>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	85 c0                	test   %eax,%eax$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	74 16                	je     f01059b3 <mp_init+0x53>$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	e8 1d ff ff ff       	call   f01058c7 <mpsearch1>$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	85 c0                	test   %eax,%eax$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	75 3c                	jne    f01059ed <mp_init+0x8d>$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	eb 20                	jmp    f01059d3 <mp_init+0x73>$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	e8 fb fe ff ff       	call   f01058c7 <mpsearch1>$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	85 c0                	test   %eax,%eax$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	75 1a                	jne    f01059ed <mp_init+0x8d>$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	e8 e5 fe ff ff       	call   f01058c7 <mpsearch1>$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	85 c0                	test   %eax,%eax$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	0f 84 5d 02 00 00    	je     f0105c4a <mp_init+0x2ea>$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	85 f6                	test   %esi,%esi$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	74 06                	je     f01059fd <mp_init+0x9d>$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	74 15                	je     f0105a12 <mp_init+0xb2>$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	68 50 85 10 f0       	push   $0xf0108550$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	e8 82 dd ff ff       	call   f010378c <cprintf>$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d:	e9 38 02 00 00       	jmp    f0105c4a <mp_init+0x2ea>$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	89 f0                	mov    %esi,%eax$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	3b 05 c0 d2 2c f0    	cmp    0xf02cd2c0,%eax$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	72 15                	jb     f0105a34 <mp_init+0xd4>$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	56                   	push   %esi$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	68 97 00 00 00       	push   $0x97$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	68 dd 86 10 f0       	push   $0xf01086dd$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	e8 60 a6 ff ff       	call   f0100094 <_panic>$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	6a 04                	push   $0x4$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	68 f2 86 10 f0       	push   $0xf01086f2$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	53                   	push   %ebx$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	e8 c5 fc ff ff       	call   f010570f <memcmp>$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	85 c0                	test   %eax,%eax$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	74 15                	je     f0105a66 <mp_init+0x106>$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	68 80 85 10 f0       	push   $0xf0108580$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	e8 2e dd ff ff       	call   f010378c <cprintf>$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	e9 e4 01 00 00       	jmp    f0105c4a <mp_init+0x2ea>$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	eb 0d                	jmp    f0105a8a <mp_init+0x12a>$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	f0 $/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	01 ca                	add    %ecx,%edx$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	39 c7                	cmp    %eax,%edi$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	75 ef                	jne    f0105a7d <mp_init+0x11d>$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	84 d2                	test   %dl,%dl$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	74 15                	je     f0105aa7 <mp_init+0x147>$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	68 b4 85 10 f0       	push   $0xf01085b4$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	e8 ed dc ff ff       	call   f010378c <cprintf>$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	e9 a3 01 00 00       	jmp    f0105c4a <mp_init+0x2ea>$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	3c 01                	cmp    $0x1,%al$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	74 1d                	je     f0105acc <mp_init+0x16c>$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	3c 04                	cmp    $0x4,%al$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	74 19                	je     f0105acc <mp_init+0x16c>$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	50                   	push   %eax$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	68 d8 85 10 f0       	push   $0xf01085d8$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	e8 c8 dc ff ff       	call   f010378c <cprintf>$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	e9 7e 01 00 00       	jmp    f0105c4a <mp_init+0x2ea>$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	01 ce                	add    %ecx,%esi$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	eb 0d                	jmp    f0105aef <mp_init+0x18f>$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	f0 $/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	01 ca                	add    %ecx,%edx$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	39 c7                	cmp    %eax,%edi$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	75 ef                	jne    f0105ae2 <mp_init+0x182>$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	89 d0                	mov    %edx,%eax$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	74 15                	je     f0105b0f <mp_init+0x1af>$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	68 f8 85 10 f0       	push   $0xf01085f8$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	e8 85 dc ff ff       	call   f010378c <cprintf>$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	e9 3b 01 00 00       	jmp    f0105c4a <mp_init+0x2ea>$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	85 db                	test   %ebx,%ebx$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	0f 84 33 01 00 00    	je     f0105c4a <mp_init+0x2ea>$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	c7 05 00 e0 2c f0 01 	movl   $0x1,0xf02ce000$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	00 00 00 $/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	a3 00 f0 30 f0       	mov    %eax,0xf030f000$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	e9 85 00 00 00       	jmp    f0105bbb <mp_init+0x25b>$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	84 c0                	test   %al,%al$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	74 06                	je     f0105b43 <mp_init+0x1e3>$/;"	l
f0105b3d	obj/kern/kernel.asm	/^f0105b3d:	3c 04                	cmp    $0x4,%al$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	77 55                	ja     f0105b96 <mp_init+0x236>$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	eb 4e                	jmp    f0105b91 <mp_init+0x231>$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	74 11                	je     f0105b5a <mp_init+0x1fa>$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	6b 05 c4 e3 2c f0 74 	imul   $0x74,0xf02ce3c4,%eax$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	a3 c0 e3 2c f0       	mov    %eax,0xf02ce3c0$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	a1 c4 e3 2c f0       	mov    0xf02ce3c4,%eax$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	7f 13                	jg     f0105b77 <mp_init+0x217>$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	88 82 20 e0 2c f0    	mov    %al,-0xfd31fe0(%edx)$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	a3 c4 e3 2c f0       	mov    %eax,0xf02ce3c4$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	eb 15                	jmp    f0105b8c <mp_init+0x22c>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	50                   	push   %eax$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	68 28 86 10 f0       	push   $0xf0108628$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	e8 03 dc ff ff       	call   f010378c <cprintf>$/;"	l
f0105b89	obj/kern/kernel.asm	/^f0105b89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	eb 27                	jmp    f0105bb8 <mp_init+0x258>$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	83 c7 08             	add    $0x8,%edi$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	eb 22                	jmp    f0105bb8 <mp_init+0x258>$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	50                   	push   %eax$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	68 50 86 10 f0       	push   $0xf0108650$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	e8 e5 db ff ff       	call   f010378c <cprintf>$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	c7 05 00 e0 2c f0 00 	movl   $0x0,0xf02ce000$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	00 00 00 $/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	39 c6                	cmp    %eax,%esi$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	0f 82 6f ff ff ff    	jb     f0105b36 <mp_init+0x1d6>$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	a1 c0 e3 2c f0       	mov    0xf02ce3c0,%eax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	83 3d 00 e0 2c f0 00 	cmpl   $0x0,0xf02ce000$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	75 26                	jne    f0105c02 <mp_init+0x2a2>$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	c7 05 c4 e3 2c f0 01 	movl   $0x1,0xf02ce3c4$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	00 00 00 $/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	c7 05 00 f0 30 f0 00 	movl   $0x0,0xf030f000$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	00 00 00 $/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	68 70 86 10 f0       	push   $0xf0108670$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	e8 8f db ff ff       	call   f010378c <cprintf>$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	eb 48                	jmp    f0105c4a <mp_init+0x2ea>$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	ff 35 c4 e3 2c f0    	pushl  0xf02ce3c4$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	50                   	push   %eax$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	68 f7 86 10 f0       	push   $0xf01086f7$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	e8 73 db ff ff       	call   f010378c <cprintf>$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	74 25                	je     f0105c4a <mp_init+0x2ea>$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	68 9c 86 10 f0       	push   $0xf010869c$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	e8 5a db ff ff       	call   f010378c <cprintf>$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	ee                   	out    %al,(%dx)$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0105c42	obj/kern/kernel.asm	/^f0105c42:	ec                   	in     (%dx),%al$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	ee                   	out    %al,(%dx)$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	5b                   	pop    %ebx$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	5e                   	pop    %esi$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	5f                   	pop    %edi$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	5d                   	pop    %ebp$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	c3                   	ret    $/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52 <lapicw>:$/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	55                   	push   %ebp$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	8b 0d 04 f0 30 f0    	mov    0xf030f004,%ecx$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	89 10                	mov    %edx,(%eax)$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	a1 04 f0 30 f0       	mov    0xf030f004,%eax$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	5d                   	pop    %ebp$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	c3                   	ret    $/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a <cpunum>:$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	55                   	push   %ebp$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c6d	obj/kern/kernel.asm	/^f0105c6d:	a1 04 f0 30 f0       	mov    0xf030f004,%eax$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	85 c0                	test   %eax,%eax$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	74 08                	je     f0105c7e <cpunum+0x14>$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	eb 05                	jmp    f0105c83 <cpunum+0x19>$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c83	obj/kern/kernel.asm	/^f0105c83:	5d                   	pop    %ebp$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	c3                   	ret    $/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85 <lapic_init>:$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	a1 00 f0 30 f0       	mov    0xf030f000,%eax$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	85 c0                	test   %eax,%eax$/;"	l
f0105c8c	obj/kern/kernel.asm	/^f0105c8c:	0f 84 21 01 00 00    	je     f0105db3 <lapic_init+0x12e>$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	55                   	push   %ebp$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	68 00 10 00 00       	push   $0x1000$/;"	l
f0105c9d	obj/kern/kernel.asm	/^f0105c9d:	50                   	push   %eax$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	e8 7e b6 ff ff       	call   f0101321 <mmio_map_region>$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	a3 04 f0 30 f0       	mov    %eax,0xf030f004$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	e8 9b ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	e8 8c ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	e8 7d ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	e8 6e ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	e8 81 ff ff ff       	call   f0105c6a <cpunum>$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	39 05 c0 e3 2c f0    	cmp    %eax,0xf02ce3c0$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	74 0f                	je     f0105d0b <lapic_init+0x86>$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	e8 47 ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	e8 38 ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	a1 04 f0 30 f0       	mov    0xf030f004,%eax$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	3c 03                	cmp    $0x3,%al$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	76 0f                	jbe    f0105d38 <lapic_init+0xb3>$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	e8 1a ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	e8 0b ff ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	e8 fc fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	e8 ed fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	e8 de fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e:	e8 cf fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	e8 c0 fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	8b 15 04 f0 30 f0    	mov    0xf030f004,%edx$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105d9e	obj/kern/kernel.asm	/^f0105d9e:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	75 f5                	jne    f0105d98 <lapic_init+0x113>$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	e8 a0 fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	c9                   	leave  $/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	f3 c3                	repz ret $/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5 <lapic_eoi>:$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	83 3d 04 f0 30 f0 00 	cmpl   $0x0,0xf030f004$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	74 13                	je     f0105dd1 <lapic_eoi+0x1c>$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	55                   	push   %ebp$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	e8 82 fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	5d                   	pop    %ebp$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	f3 c3                	repz ret $/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3 <lapic_startap>:$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	55                   	push   %ebp$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dd6	obj/kern/kernel.asm	/^f0105dd6:	56                   	push   %esi$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	53                   	push   %ebx$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	ee                   	out    %al,(%dx)$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	ee                   	out    %al,(%dx)$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	83 3d c0 d2 2c f0 00 	cmpl   $0x0,0xf02cd2c0$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	75 19                	jne    f0105e16 <lapic_startap+0x43>$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	68 67 04 00 00       	push   $0x467$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	68 a6 00 00 00       	push   $0xa6$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	68 14 87 10 f0       	push   $0xf0108714$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	e8 7e a2 ff ff       	call   f0100094 <_panic>$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	00 00 $/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	89 f2                	mov    %esi,%edx$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	e8 19 fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	e8 0a fe ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	e8 fb fd ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	80 cf 06             	or     $0x6,%bh$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	89 f2                	mov    %esi,%edx$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	e8 e9 fd ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	89 da                	mov    %ebx,%edx$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	e8 dd fd ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	89 f2                	mov    %esi,%edx$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	e8 d1 fd ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	89 da                	mov    %ebx,%edx$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	e8 c5 fd ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	5b                   	pop    %ebx$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	5e                   	pop    %esi$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	5d                   	pop    %ebp$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	c3                   	ret    $/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94 <lapic_ipi>:$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	55                   	push   %ebp$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	e8 a8 fd ff ff       	call   f0105c52 <lapicw>$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	8b 15 04 f0 30 f0    	mov    0xf030f004,%edx$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	75 f5                	jne    f0105eb0 <lapic_ipi+0x1c>$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	5d                   	pop    %ebp$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	c3                   	ret    $/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd <__spin_initlock>:$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	55                   	push   %ebp$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	5d                   	pop    %ebp$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	c3                   	ret    $/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8 <spin_lock>:$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	55                   	push   %ebp$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	56                   	push   %esi$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	53                   	push   %ebx$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	74 14                	je     f0105ef9 <spin_lock+0x21>$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	e8 7d fd ff ff       	call   f0105c6a <cpunum>$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	39 c6                	cmp    %eax,%esi$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	74 07                	je     f0105f00 <spin_lock+0x28>$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	eb 20                	jmp    f0105f20 <spin_lock+0x48>$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	e8 62 fd ff ff       	call   f0105c6a <cpunum>$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	53                   	push   %ebx$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	50                   	push   %eax$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	68 24 87 10 f0       	push   $0xf0108724$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	6a 41                	push   $0x41$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	68 86 87 10 f0       	push   $0xf0108786$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	e8 76 a1 ff ff       	call   f0100094 <_panic>$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	f3 90                	pause  $/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	89 d0                	mov    %edx,%eax$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	85 c0                	test   %eax,%eax$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	75 f5                	jne    f0105f1e <spin_lock+0x46>$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	e8 3c fd ff ff       	call   f0105c6a <cpunum>$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	89 ea                	mov    %ebp,%edx$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	eb 0b                	jmp    f0105f50 <spin_lock+0x78>$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	8b 12                	mov    (%edx),%edx$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	76 11                	jbe    f0105f69 <spin_lock+0x91>$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	7e e8                	jle    f0105f45 <spin_lock+0x6d>$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	eb 0a                	jmp    f0105f69 <spin_lock+0x91>$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	7e f1                	jle    f0105f5f <spin_lock+0x87>$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	5b                   	pop    %ebx$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	5e                   	pop    %esi$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	5d                   	pop    %ebp$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	c3                   	ret    $/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75 <spin_unlock>:$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	55                   	push   %ebp$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	57                   	push   %edi$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	56                   	push   %esi$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	53                   	push   %ebx$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	74 18                	je     f0105f9e <spin_unlock+0x29>$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	e8 dc fc ff ff       	call   f0105c6a <cpunum>$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	05 20 e0 2c f0       	add    $0xf02ce020,%eax$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	0f 84 a5 00 00 00    	je     f0106043 <spin_unlock+0xce>$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	6a 28                	push   $0x28$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	50                   	push   %eax$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	53                   	push   %ebx$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	e8 e4 f6 ff ff       	call   f0105694 <memmove>$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	e8 ac fc ff ff       	call   f0105c6a <cpunum>$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	57                   	push   %edi$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	56                   	push   %esi$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	50                   	push   %eax$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	68 50 87 10 f0       	push   $0xf0108750$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	e8 c1 d7 ff ff       	call   f010378c <cprintf>$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	eb 54                	jmp    f0106027 <spin_unlock+0xb2>$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	57                   	push   %edi$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	50                   	push   %eax$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	e8 64 eb ff ff       	call   f0104b41 <debuginfo_eip>$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	85 c0                	test   %eax,%eax$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	78 27                	js     f010600b <spin_unlock+0x96>$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	8b 06                	mov    (%esi),%eax$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	89 c2                	mov    %eax,%edx$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	52                   	push   %edx$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	50                   	push   %eax$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	68 96 87 10 f0       	push   $0xf0108796$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	e8 86 d7 ff ff       	call   f010378c <cprintf>$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	eb 12                	jmp    f010601d <spin_unlock+0xa8>$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	ff 36                	pushl  (%esi)$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	68 ad 87 10 f0       	push   $0xf01087ad$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	e8 72 d7 ff ff       	call   f010378c <cprintf>$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	74 08                	je     f010602f <spin_unlock+0xba>$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	89 de                	mov    %ebx,%esi$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	8b 03                	mov    (%ebx),%eax$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	85 c0                	test   %eax,%eax$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	75 a4                	jne    f0105fd3 <spin_unlock+0x5e>$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	68 b5 87 10 f0       	push   $0xf01087b5$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	6a 67                	push   $0x67$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	68 86 87 10 f0       	push   $0xf0108786$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	e8 51 a0 ff ff       	call   f0100094 <_panic>$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	5b                   	pop    %ebx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	5e                   	pop    %esi$/;"	l
f010605e	obj/kern/kernel.asm	/^f010605e:	5f                   	pop    %edi$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	5d                   	pop    %ebp$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	c3                   	ret    $/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061 <e1000_transmit_init>:$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	55                   	push   %ebp$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	89 e5                	mov    %esp,%ebp$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	53                   	push   %ebx$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	68 00 04 00 00       	push   $0x400$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	6a 00                	push   $0x0$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	68 c0 ce 2a f0       	push   $0xf02acec0$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	e8 ce f5 ff ff       	call   f0105647 <memset>$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	68 00 00 02 00       	push   $0x20000$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	6a 00                	push   $0x0$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	68 c0 d2 2a f0       	push   $0xf02ad2c0$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	e8 ba f5 ff ff       	call   f0105647 <memset>$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	b8 c0 d2 2a f0       	mov    $0xf02ad2c0,%eax$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	bb c0 d2 2c f0       	mov    $0xf02cd2c0,%ebx$/;"	l
f0106097	obj/kern/kernel.asm	/^f0106097:	83 c4 10             	add    $0x10,%esp$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	ba c0 ce 2a f0       	mov    $0xf02acec0,%edx$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	77 12                	ja     f01060b8 <e1000_transmit_init+0x57>$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	50                   	push   %eax$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	6a 18                	push   $0x18$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	68 f3 87 10 f0       	push   $0xf01087f3$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	e8 dc 9f ff ff       	call   f0100094 <_panic>$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	89 0a                	mov    %ecx,(%edx)$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	c6 42 0b 09          	movb   $0x9,0xb(%edx)$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	c6 42 0c 01          	movb   $0x1,0xc(%edx)$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	05 00 08 00 00       	add    $0x800,%eax$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	83 c2 10             	add    $0x10,%edx$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	39 d8                	cmp    %ebx,%eax$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	75 c4                	jne    f010609f <e1000_transmit_init+0x3e>$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	a1 a0 ce 2a f0       	mov    0xf02acea0,%eax$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	ba c0 ce 2a f0       	mov    $0xf02acec0,%edx$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	77 12                	ja     f01060ff <e1000_transmit_init+0x9e>$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	52                   	push   %edx$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	6a 1c                	push   $0x1c$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	68 f3 87 10 f0       	push   $0xf01087f3$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	e8 95 9f ff ff       	call   f0100094 <_panic>$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	c7 80 00 38 00 00 c0 	movl   $0x2acec0,0x3800(%eax)$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	ce 2a 00 $/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	c7 80 04 38 00 00 00 	movl   $0x0,0x3804(%eax)$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	00 00 00 $/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	c7 80 08 38 00 00 00 	movl   $0x400,0x3808(%eax)$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	04 00 00 $/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	c7 80 10 38 00 00 00 	movl   $0x0,0x3810(%eax)$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	00 00 00 $/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	c7 80 18 38 00 00 00 	movl   $0x0,0x3818(%eax)$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	00 00 00 $/;"	l
f0106131	obj/kern/kernel.asm	/^f0106131:	8b 90 00 04 00 00    	mov    0x400(%eax),%edx$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	81 ca 0a 01 04 00    	or     $0x4010a,%edx$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	89 90 00 04 00 00    	mov    %edx,0x400(%eax)$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	8b 90 10 04 00 00    	mov    0x410(%eax),%edx$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	81 ca 0a 10 60 00    	or     $0x60100a,%edx$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	89 90 10 04 00 00    	mov    %edx,0x410(%eax)$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	c9                   	leave  $/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	c3                   	ret    $/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a <e1000_init>:$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	55                   	push   %ebp$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	89 e5                	mov    %esp,%ebp$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	53                   	push   %ebx$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	53                   	push   %ebx$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	e8 ab 04 00 00       	call   f0106615 <pci_func_enable>$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0106170	obj/kern/kernel.asm	/^f0106170:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	e8 a9 b1 ff ff       	call   f0101321 <mmio_map_region>$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	a3 a0 ce 2a f0       	mov    %eax,0xf02acea0$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	83 c4 08             	add    $0x8,%esp$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	50                   	push   %eax$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	68 d0 87 10 f0       	push   $0xf01087d0$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	e8 fe d5 ff ff       	call   f010378c <cprintf>$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	e8 ce fe ff ff       	call   f0106061 <e1000_transmit_init>$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	c9                   	leave  $/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	c3                   	ret    $/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d <transmit_packets>:$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	55                   	push   %ebp$/;"	l
f010619e	obj/kern/kernel.asm	/^f010619e:	89 e5                	mov    %esp,%ebp$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	56                   	push   %esi$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	53                   	push   %ebx$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01061a5	obj/kern/kernel.asm	/^f01061a5:	8b 15 a0 ce 2a f0    	mov    0xf02acea0,%edx$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	8b 9a 18 38 00 00    	mov    0x3818(%edx),%ebx$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	89 d9                	mov    %ebx,%ecx$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	8b 91 c0 ce 2a f0    	mov    -0xfd53140(%ecx),%edx$/;"	l
f01061bc	obj/kern/kernel.asm	/^f01061bc:	3d 01 08 00 00       	cmp    $0x801,%eax$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	be 00 08 00 00       	mov    $0x800,%esi$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	0f 43 c6             	cmovae %esi,%eax$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	f6 81 cc ce 2a f0 01 	testb  $0x1,-0xfd53134(%ecx)$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	74 71                	je     f0106243 <transmit_packets+0xa6>$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	89 d1                	mov    %edx,%ecx$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	3b 0d c0 d2 2c f0    	cmp    0xf02cd2c0,%ecx$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	72 12                	jb     f01061f1 <transmit_packets+0x54>$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	52                   	push   %edx$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	6a 30                	push   $0x30$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	68 f3 87 10 f0       	push   $0xf01087f3$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	e8 a3 9e ff ff       	call   f0100094 <_panic>$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	50                   	push   %eax$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	52                   	push   %edx$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	e8 90 f4 ff ff       	call   f0105694 <memmove>$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	83 c4 08             	add    $0x8,%esp$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	89 d8                	mov    %ebx,%eax$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	05 c0 d2 2a f0       	add    $0xf02ad2c0,%eax$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	50                   	push   %eax$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	68 00 88 10 f0       	push   $0xf0108800$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	e8 70 d5 ff ff       	call   f010378c <cprintf>$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	89 d8                	mov    %ebx,%eax$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	c1 e8 1a             	shr    $0x1a,%eax$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	01 c3                	add    %eax,%ebx$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	83 e3 3f             	and    $0x3f,%ebx$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	29 c3                	sub    %eax,%ebx$/;"	l
f010622e	obj/kern/kernel.asm	/^f010622e:	a1 a0 ce 2a f0       	mov    0xf02acea0,%eax$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	89 98 18 38 00 00    	mov    %ebx,0x3818(%eax)$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	83 c4 10             	add    $0x10,%esp$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	eb 05                	jmp    f0106248 <transmit_packets+0xab>$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	5b                   	pop    %ebx$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	5e                   	pop    %esi$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	5d                   	pop    %ebp$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	c3                   	ret    $/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f <pci_attach_match>:$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	55                   	push   %ebp$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	89 e5                	mov    %esp,%ebp$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	57                   	push   %edi$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	56                   	push   %esi$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	53                   	push   %ebx$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	8d 58 08             	lea    0x8(%eax),%ebx$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	eb 3a                	jmp    f010629d <pci_attach_match+0x4e>$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	39 7b f8             	cmp    %edi,-0x8(%ebx)$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	75 32                	jne    f010629a <pci_attach_match+0x4b>$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	39 56 fc             	cmp    %edx,-0x4(%esi)$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	75 2a                	jne    f010629a <pci_attach_match+0x4b>$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	ff d0                	call   *%eax$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	83 c4 10             	add    $0x10,%esp$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	85 c0                	test   %eax,%eax$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	7f 26                	jg     f01062a5 <pci_attach_match+0x56>$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	85 c0                	test   %eax,%eax$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	79 17                	jns    f010629a <pci_attach_match+0x4b>$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	50                   	push   %eax$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	ff 36                	pushl  (%esi)$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	57                   	push   %edi$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	68 10 88 10 f0       	push   $0xf0108810$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	e8 f5 d4 ff ff       	call   f010378c <cprintf>$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	83 c4 20             	add    $0x20,%esp$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	89 de                	mov    %ebx,%esi$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	8b 03                	mov    (%ebx),%eax$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	85 c0                	test   %eax,%eax$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	75 be                	jne    f0106263 <pci_attach_match+0x14>$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	5b                   	pop    %ebx$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	5e                   	pop    %esi$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	5f                   	pop    %edi$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	5d                   	pop    %ebp$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	c3                   	ret    $/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad <pci_conf1_set_addr>:$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	55                   	push   %ebp$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	53                   	push   %ebx$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	76 16                	jbe    f01062d4 <pci_conf1_set_addr+0x27>$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	68 68 89 10 f0       	push   $0xf0108968$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	6a 30                	push   $0x30$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	68 72 89 10 f0       	push   $0xf0108972$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	e8 c0 9d ff ff       	call   f0100094 <_panic>$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	76 16                	jbe    f01062ef <pci_conf1_set_addr+0x42>$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	68 7d 89 10 f0       	push   $0xf010897d$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	6a 31                	push   $0x31$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	68 72 89 10 f0       	push   $0xf0108972$/;"	l
f01062ea	obj/kern/kernel.asm	/^f01062ea:	e8 a5 9d ff ff       	call   f0100094 <_panic>$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	76 16                	jbe    f010630a <pci_conf1_set_addr+0x5d>$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	68 86 89 10 f0       	push   $0xf0108986$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	6a 32                	push   $0x32$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	68 72 89 10 f0       	push   $0xf0108972$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	e8 8a 9d ff ff       	call   f0100094 <_panic>$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	76 16                	jbe    f0106328 <pci_conf1_set_addr+0x7b>$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	68 8f 89 10 f0       	push   $0xf010898f$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	6a 33                	push   $0x33$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	68 72 89 10 f0       	push   $0xf0108972$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	e8 6c 9d ff ff       	call   f0100094 <_panic>$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	f6 c3 03             	test   $0x3,%bl$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	74 16                	je     f0106343 <pci_conf1_set_addr+0x96>$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	68 9c 89 10 f0       	push   $0xf010899c$/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	68 b7 79 10 f0       	push   $0xf01079b7$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	6a 34                	push   $0x34$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	68 72 89 10 f0       	push   $0xf0108972$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	e8 51 9d ff ff       	call   f0100094 <_panic>$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	09 cb                	or     %ecx,%ebx$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	c1 e2 0b             	shl    $0xb,%edx$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	09 d3                	or     %edx,%ebx$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	09 d8                	or     %ebx,%eax$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	ef                   	out    %eax,(%dx)$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	c9                   	leave  $/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	c3                   	ret    $/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363 <pci_conf_read>:$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	55                   	push   %ebp$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	89 e5                	mov    %esp,%ebp$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	53                   	push   %ebx$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f010636d	obj/kern/kernel.asm	/^f010636d:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0106370	obj/kern/kernel.asm	/^f0106370:	8b 00                	mov    (%eax),%eax$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	52                   	push   %edx$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	89 da                	mov    %ebx,%edx$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	e8 30 ff ff ff       	call   f01062ad <pci_conf1_set_addr>$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	ed                   	in     (%dx),%eax$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	c9                   	leave  $/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	c3                   	ret    $/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388 <pci_scan_bus>:$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	55                   	push   %ebp$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	89 e5                	mov    %esp,%ebp$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	57                   	push   %edi$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	56                   	push   %esi$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	53                   	push   %ebx$/;"	l
f010638e	obj/kern/kernel.asm	/^f010638e:	81 ec 00 01 00 00    	sub    $0x100,%esp$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	89 c3                	mov    %eax,%ebx$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	6a 48                	push   $0x48$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	6a 00                	push   $0x0$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	50                   	push   %eax$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	e8 a4 f2 ff ff       	call   f0105647 <memset>$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	00 00 00 $/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	e8 9c ff ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	89 c2                	mov    %eax,%edx$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	0f 87 4b 01 00 00    	ja     f0106523 <pci_scan_bus+0x19b>$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f01063f6	obj/kern/kernel.asm	/^f01063f6:	00 00 00 $/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	19 c0                	sbb    %eax,%eax$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	83 c0 08             	add    $0x8,%eax$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	e9 f7 00 00 00       	jmp    f0106511 <pci_scan_bus+0x189>$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	8d bd 58 ff ff ff    	lea    -0xa8(%ebp),%edi$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	e8 26 ff ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	0f 84 bd 00 00 00    	je     f010650a <pci_scan_bus+0x182>$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	89 d8                	mov    %ebx,%eax$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	e8 0a ff ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	89 d8                	mov    %ebx,%eax$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	e8 fb fe ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	89 c1                	mov    %eax,%ecx$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	c1 e9 18             	shr    $0x18,%ecx$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	be b0 89 10 f0       	mov    $0xf01089b0,%esi$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	83 f9 06             	cmp    $0x6,%ecx$/;"	l
f010647b	obj/kern/kernel.asm	/^f010647b:	77 07                	ja     f0106484 <pci_scan_bus+0xfc>$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	8b 34 8d 24 8a 10 f0 	mov    -0xfef75dc(,%ecx,4),%esi$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	57                   	push   %edi$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	56                   	push   %esi$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	50                   	push   %eax$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	51                   	push   %ecx$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	89 d0                	mov    %edx,%eax$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	50                   	push   %eax$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	52                   	push   %edx$/;"	l
f01064a5	obj/kern/kernel.asm	/^f01064a5:	ff b5 60 ff ff ff    	pushl  -0xa0(%ebp)$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	68 3c 88 10 f0       	push   $0xf010883c$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	e8 c8 d2 ff ff       	call   f010378c <cprintf>$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	83 c4 30             	add    $0x30,%esp$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	53                   	push   %ebx$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	68 0c 34 12 f0       	push   $0xf012340c$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	89 c2                	mov    %eax,%edx$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	52                   	push   %edx$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	50                   	push   %eax$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	e8 6a fd ff ff       	call   f010624f <pci_attach_match>$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	85 c0                	test   %eax,%eax$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	75 1e                	jne    f010650a <pci_scan_bus+0x182>$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	53                   	push   %ebx$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	68 f4 33 12 f0       	push   $0xf01233f4$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	89 c2                	mov    %eax,%edx$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	52                   	push   %edx$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	50                   	push   %eax$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	e8 48 fd ff ff       	call   f010624f <pci_attach_match>$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	83 c4 10             	add    $0x10,%esp$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	0f 87 f7 fe ff ff    	ja     f010641a <pci_scan_bus+0x92>$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	0f 86 85 fe ff ff    	jbe    f01063ba <pci_scan_bus+0x32>$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	5b                   	pop    %ebx$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	5e                   	pop    %esi$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	5f                   	pop    %edi$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	5d                   	pop    %ebp$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	c3                   	ret    $/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543 <pci_bridge_attach>:$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	55                   	push   %ebp$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	89 e5                	mov    %esp,%ebp$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	57                   	push   %edi$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	56                   	push   %esi$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	53                   	push   %ebx$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	89 d8                	mov    %ebx,%eax$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	e8 08 fe ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	89 c7                	mov    %eax,%edi$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0106562	obj/kern/kernel.asm	/^f0106562:	89 d8                	mov    %ebx,%eax$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	e8 fa fd ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	83 e7 0f             	and    $0xf,%edi$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f010656f	obj/kern/kernel.asm	/^f010656f:	75 1f                	jne    f0106590 <pci_bridge_attach+0x4d>$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	68 78 88 10 f0       	push   $0xf0108878$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	e8 06 d2 ff ff       	call   f010378c <cprintf>$/;"	l
f0106586	obj/kern/kernel.asm	/^f0106586:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	eb 4e                	jmp    f01065de <pci_bridge_attach+0x9b>$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	89 c6                	mov    %eax,%esi$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	6a 08                	push   $0x8$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	6a 00                	push   $0x0$/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	57                   	push   %edi$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	e8 a5 f0 ff ff       	call   f0105647 <memset>$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	89 f0                	mov    %esi,%eax$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	83 c4 08             	add    $0x8,%esp$/;"	l
f01065b0	obj/kern/kernel.asm	/^f01065b0:	89 f2                	mov    %esi,%edx$/;"	l
f01065b2	obj/kern/kernel.asm	/^f01065b2:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	56                   	push   %esi$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	50                   	push   %eax$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	8b 03                	mov    (%ebx),%eax$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	68 ac 88 10 f0       	push   $0xf01088ac$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	e8 bd d1 ff ff       	call   f010378c <cprintf>$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	83 c4 20             	add    $0x20,%esp$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	89 f8                	mov    %edi,%eax$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	e8 af fd ff ff       	call   f0106388 <pci_scan_bus>$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	5b                   	pop    %ebx$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	5e                   	pop    %esi$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	5f                   	pop    %edi$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	5d                   	pop    %ebp$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	c3                   	ret    $/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6 <pci_conf_write>:$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	55                   	push   %ebp$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	56                   	push   %esi$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	53                   	push   %ebx$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	89 cb                	mov    %ecx,%ebx$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	8b 00                	mov    (%eax),%eax$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	52                   	push   %edx$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	89 f2                	mov    %esi,%edx$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	e8 aa fc ff ff       	call   f01062ad <pci_conf1_set_addr>$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	89 d8                	mov    %ebx,%eax$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	ef                   	out    %eax,(%dx)$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	5b                   	pop    %ebx$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	5e                   	pop    %esi$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	5d                   	pop    %ebp$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	c3                   	ret    $/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615 <pci_func_enable>:$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	55                   	push   %ebp$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	89 e5                	mov    %esp,%ebp$/;"	l
f0106618	obj/kern/kernel.asm	/^f0106618:	57                   	push   %edi$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	56                   	push   %esi$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	53                   	push   %ebx$/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	89 f8                	mov    %edi,%eax$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	e8 b4 ff ff ff       	call   f01065e6 <pci_conf_write>$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	89 f2                	mov    %esi,%edx$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	89 f8                	mov    %edi,%eax$/;"	l
f010663b	obj/kern/kernel.asm	/^f010663b:	e8 23 fd ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	89 f2                	mov    %esi,%edx$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	89 f8                	mov    %edi,%eax$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	e8 95 ff ff ff       	call   f01065e6 <pci_conf_write>$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	89 f2                	mov    %esi,%edx$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	89 f8                	mov    %edi,%eax$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	e8 09 fd ff ff       	call   f0106363 <pci_conf_read>$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	85 c0                	test   %eax,%eax$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	0f 84 a6 00 00 00    	je     f010670d <pci_func_enable+0xf8>$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	a8 01                	test   $0x1,%al$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	75 2c                	jne    f01066a0 <pci_func_enable+0x8b>$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	89 c2                	mov    %eax,%edx$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	83 e2 06             	and    $0x6,%edx$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	0f 94 c3             	sete   %bl$/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	89 c2                	mov    %eax,%edx$/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	f7 da                	neg    %edx$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	21 c2                	and    %eax,%edx$/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	eb 1a                	jmp    f01066ba <pci_func_enable+0xa5>$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	89 c2                	mov    %eax,%edx$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	f7 da                	neg    %edx$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	21 c2                	and    %eax,%edx$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f01066ba	obj/kern/kernel.asm	/^f01066ba:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	89 f2                	mov    %esi,%edx$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	89 f8                	mov    %edi,%eax$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	e8 20 ff ff ff       	call   f01065e6 <pci_conf_write>$/;"	l
f01066c6	obj/kern/kernel.asm	/^f01066c6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	89 48 2c             	mov    %ecx,0x2c(%eax)$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	85 c9                	test   %ecx,%ecx$/;"	l
f01066da	obj/kern/kernel.asm	/^f01066da:	74 31                	je     f010670d <pci_func_enable+0xf8>$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	85 d2                	test   %edx,%edx$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	75 2d                	jne    f010670d <pci_func_enable+0xf8>$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	51                   	push   %ecx$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	52                   	push   %edx$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	89 c2                	mov    %eax,%edx$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01066f0	obj/kern/kernel.asm	/^f01066f0:	52                   	push   %edx$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01066f4	obj/kern/kernel.asm	/^f01066f4:	50                   	push   %eax$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	ff 77 04             	pushl  0x4(%edi)$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	8b 07                	mov    (%edi),%eax$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	68 dc 88 10 f0       	push   $0xf01088dc$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	e8 82 d0 ff ff       	call   f010378c <cprintf>$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	83 c4 30             	add    $0x30,%esp$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	01 de                	add    %ebx,%esi$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	0f 86 1f ff ff ff    	jbe    f0106637 <pci_func_enable+0x22>$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f010671b	obj/kern/kernel.asm	/^f010671b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	89 c2                	mov    %eax,%edx$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	52                   	push   %edx$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	50                   	push   %eax$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	ff 77 04             	pushl  0x4(%edi)$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	8b 07                	mov    (%edi),%eax$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	68 38 89 10 f0       	push   $0xf0108938$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	e8 4f d0 ff ff       	call   f010378c <cprintf>$/;"	l
f010673d	obj/kern/kernel.asm	/^f010673d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106743	obj/kern/kernel.asm	/^f0106743:	5b                   	pop    %ebx$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	5e                   	pop    %esi$/;"	l
f0106745	obj/kern/kernel.asm	/^f0106745:	5f                   	pop    %edi$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	5d                   	pop    %ebp$/;"	l
f0106747	obj/kern/kernel.asm	/^f0106747:	c3                   	ret    $/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748 <pci_init>:$/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748:	55                   	push   %ebp$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	89 e5                	mov    %esp,%ebp$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010674e	obj/kern/kernel.asm	/^f010674e:	6a 08                	push   $0x8$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	6a 00                	push   $0x0$/;"	l
f0106752	obj/kern/kernel.asm	/^f0106752:	68 80 ce 2a f0       	push   $0xf02ace80$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	e8 eb ee ff ff       	call   f0105647 <memset>$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	b8 80 ce 2a f0       	mov    $0xf02ace80,%eax$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	e8 22 fc ff ff       	call   f0106388 <pci_scan_bus>$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	c9                   	leave  $/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	c3                   	ret    $/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768 <time_init>:$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	55                   	push   %ebp$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	89 e5                	mov    %esp,%ebp$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	c7 05 88 ce 2a f0 00 	movl   $0x0,0xf02ace88$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	00 00 00 $/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	5d                   	pop    %ebp$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	c3                   	ret    $/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777 <time_tick>:$/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777:	a1 88 ce 2a f0       	mov    0xf02ace88,%eax$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	a3 88 ce 2a f0       	mov    %eax,0xf02ace88$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	01 d2                	add    %edx,%edx$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	39 d0                	cmp    %edx,%eax$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	76 17                	jbe    f01067a4 <time_tick+0x2d>$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	55                   	push   %ebp$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	68 40 8a 10 f0       	push   $0xf0108a40$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	6a 13                	push   $0x13$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	68 5b 8a 10 f0       	push   $0xf0108a5b$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	e8 f0 98 ff ff       	call   f0100094 <_panic>$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	f3 c3                	repz ret $/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6 <time_msec>:$/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6:	55                   	push   %ebp$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	a1 88 ce 2a f0       	mov    0xf02ace88,%eax$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	01 c0                	add    %eax,%eax$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	5d                   	pop    %ebp$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	c3                   	ret    $/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	66 90                	xchg   %ax,%ax$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	66 90                	xchg   %ax,%ax$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	66 90                	xchg   %ax,%ax$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	66 90                	xchg   %ax,%ax$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	66 90                	xchg   %ax,%ax$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	90                   	nop$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0 <__udivdi3>:$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	55                   	push   %ebp$/;"	l
f01067c1	obj/kern/kernel.asm	/^f01067c1:	57                   	push   %edi$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	56                   	push   %esi$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	53                   	push   %ebx$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f01067d3	obj/kern/kernel.asm	/^f01067d3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01067d7	obj/kern/kernel.asm	/^f01067d7:	85 f6                	test   %esi,%esi$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	89 ca                	mov    %ecx,%edx$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	89 f8                	mov    %edi,%eax$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	75 3d                	jne    f0106820 <__udivdi3+0x60>$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	39 cf                	cmp    %ecx,%edi$/;"	l
f01067e5	obj/kern/kernel.asm	/^f01067e5:	0f 87 c5 00 00 00    	ja     f01068b0 <__udivdi3+0xf0>$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	85 ff                	test   %edi,%edi$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	89 fd                	mov    %edi,%ebp$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	75 0b                	jne    f01067fc <__udivdi3+0x3c>$/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	31 d2                	xor    %edx,%edx$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	f7 f7                	div    %edi$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	89 c5                	mov    %eax,%ebp$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	89 c8                	mov    %ecx,%eax$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	31 d2                	xor    %edx,%edx$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	f7 f5                	div    %ebp$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	89 c1                	mov    %eax,%ecx$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	89 d8                	mov    %ebx,%eax$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	89 cf                	mov    %ecx,%edi$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	f7 f5                	div    %ebp$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	89 c3                	mov    %eax,%ebx$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	89 d8                	mov    %ebx,%eax$/;"	l
f010680e	obj/kern/kernel.asm	/^f010680e:	89 fa                	mov    %edi,%edx$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	5b                   	pop    %ebx$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	5e                   	pop    %esi$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	5f                   	pop    %edi$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	5d                   	pop    %ebp$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	c3                   	ret    $/;"	l
f0106818	obj/kern/kernel.asm	/^f0106818:	90                   	nop$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	77 74                	ja     f0106898 <__udivdi3+0xd8>$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	0f 84 98 00 00 00    	je     f01068c8 <__udivdi3+0x108>$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	89 f9                	mov    %edi,%ecx$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	89 c5                	mov    %eax,%ebp$/;"	l
f0106839	obj/kern/kernel.asm	/^f0106839:	29 fb                	sub    %edi,%ebx$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	d3 e6                	shl    %cl,%esi$/;"	d
f010683d	obj/kern/kernel.asm	/^f010683d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106841	obj/kern/kernel.asm	/^f0106841:	89 f9                	mov    %edi,%ecx$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	d3 e0                	shl    %cl,%eax$/;"	d
f0106845	obj/kern/kernel.asm	/^f0106845:	09 ee                	or     %ebp,%esi$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010684d	obj/kern/kernel.asm	/^f010684d:	89 d5                	mov    %edx,%ebp$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106855	obj/kern/kernel.asm	/^f0106855:	89 f9                	mov    %edi,%ecx$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	d3 e2                	shl    %cl,%edx$/;"	d
f0106859	obj/kern/kernel.asm	/^f0106859:	89 d9                	mov    %ebx,%ecx$/;"	l
f010685b	obj/kern/kernel.asm	/^f010685b:	d3 e8                	shr    %cl,%eax$/;"	d
f010685d	obj/kern/kernel.asm	/^f010685d:	09 c2                	or     %eax,%edx$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	89 d0                	mov    %edx,%eax$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	89 ea                	mov    %ebp,%edx$/;"	l
f0106863	obj/kern/kernel.asm	/^f0106863:	f7 f6                	div    %esi$/;"	l
f0106865	obj/kern/kernel.asm	/^f0106865:	89 d5                	mov    %edx,%ebp$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	89 c3                	mov    %eax,%ebx$/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010686f	obj/kern/kernel.asm	/^f010686f:	72 10                	jb     f0106881 <__udivdi3+0xc1>$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0106875	obj/kern/kernel.asm	/^f0106875:	89 f9                	mov    %edi,%ecx$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	d3 e6                	shl    %cl,%esi$/;"	d
f0106879	obj/kern/kernel.asm	/^f0106879:	39 c6                	cmp    %eax,%esi$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	73 07                	jae    f0106884 <__udivdi3+0xc4>$/;"	l
f010687d	obj/kern/kernel.asm	/^f010687d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	75 03                	jne    f0106884 <__udivdi3+0xc4>$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	31 ff                	xor    %edi,%edi$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	89 d8                	mov    %ebx,%eax$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	89 fa                	mov    %edi,%edx$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010688d	obj/kern/kernel.asm	/^f010688d:	5b                   	pop    %ebx$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	5e                   	pop    %esi$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	5f                   	pop    %edi$/;"	l
f0106890	obj/kern/kernel.asm	/^f0106890:	5d                   	pop    %ebp$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	c3                   	ret    $/;"	l
f0106892	obj/kern/kernel.asm	/^f0106892:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	31 ff                	xor    %edi,%edi$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	31 db                	xor    %ebx,%ebx$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	89 d8                	mov    %ebx,%eax$/;"	l
f010689e	obj/kern/kernel.asm	/^f010689e:	89 fa                	mov    %edi,%edx$/;"	l
f01068a0	obj/kern/kernel.asm	/^f01068a0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	5b                   	pop    %ebx$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	5e                   	pop    %esi$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	5f                   	pop    %edi$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	5d                   	pop    %ebp$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	c3                   	ret    $/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	90                   	nop$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	89 d8                	mov    %ebx,%eax$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	f7 f7                	div    %edi$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	31 ff                	xor    %edi,%edi$/;"	l
f01068b6	obj/kern/kernel.asm	/^f01068b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	89 d8                	mov    %ebx,%eax$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	89 fa                	mov    %edi,%edx$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	5b                   	pop    %ebx$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	5e                   	pop    %esi$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	5f                   	pop    %edi$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	5d                   	pop    %ebp$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	c3                   	ret    $/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	39 ce                	cmp    %ecx,%esi$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	72 0c                	jb     f01068d8 <__udivdi3+0x118>$/;"	l
f01068cc	obj/kern/kernel.asm	/^f01068cc:	31 db                	xor    %ebx,%ebx$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	0f 87 34 ff ff ff    	ja     f010680c <__udivdi3+0x4c>$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	e9 2a ff ff ff       	jmp    f010680c <__udivdi3+0x4c>$/;"	l
f01068e2	obj/kern/kernel.asm	/^f01068e2:	66 90                	xchg   %ax,%ax$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	66 90                	xchg   %ax,%ax$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	66 90                	xchg   %ax,%ax$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	66 90                	xchg   %ax,%ax$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	66 90                	xchg   %ax,%ax$/;"	l
f01068ec	obj/kern/kernel.asm	/^f01068ec:	66 90                	xchg   %ax,%ax$/;"	l
f01068ee	obj/kern/kernel.asm	/^f01068ee:	66 90                	xchg   %ax,%ax$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0 <__umoddi3>:$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	55                   	push   %ebp$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	57                   	push   %edi$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	56                   	push   %esi$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	53                   	push   %ebx$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	85 d2                	test   %edx,%edx$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	89 f3                	mov    %esi,%ebx$/;"	l
f0106913	obj/kern/kernel.asm	/^f0106913:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	75 1c                	jne    f0106938 <__umoddi3+0x48>$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	39 f7                	cmp    %esi,%edi$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	76 50                	jbe    f0106970 <__umoddi3+0x80>$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	89 c8                	mov    %ecx,%eax$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	89 f2                	mov    %esi,%edx$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	f7 f7                	div    %edi$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	89 d0                	mov    %edx,%eax$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	31 d2                	xor    %edx,%edx$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	5b                   	pop    %ebx$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	5e                   	pop    %esi$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	5f                   	pop    %edi$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	5d                   	pop    %ebp$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	c3                   	ret    $/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106938	obj/kern/kernel.asm	/^f0106938:	39 f2                	cmp    %esi,%edx$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	89 d0                	mov    %edx,%eax$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c:	77 52                	ja     f0106990 <__umoddi3+0xa0>$/;"	l
f010693e	obj/kern/kernel.asm	/^f010693e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	75 5a                	jne    f01069a0 <__umoddi3+0xb0>$/;"	l
f0106946	obj/kern/kernel.asm	/^f0106946:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	0f 82 e0 00 00 00    	jb     f0106a30 <__umoddi3+0x140>$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	0f 86 d7 00 00 00    	jbe    f0106a30 <__umoddi3+0x140>$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	5b                   	pop    %ebx$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	5e                   	pop    %esi$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	5f                   	pop    %edi$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	5d                   	pop    %ebp$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	c3                   	ret    $/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	85 ff                	test   %edi,%edi$/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	89 fd                	mov    %edi,%ebp$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	75 0b                	jne    f0106981 <__umoddi3+0x91>$/;"	l
f0106976	obj/kern/kernel.asm	/^f0106976:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	31 d2                	xor    %edx,%edx$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	f7 f7                	div    %edi$/;"	l
f010697f	obj/kern/kernel.asm	/^f010697f:	89 c5                	mov    %eax,%ebp$/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	89 f0                	mov    %esi,%eax$/;"	l
f0106983	obj/kern/kernel.asm	/^f0106983:	31 d2                	xor    %edx,%edx$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	f7 f5                	div    %ebp$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	89 c8                	mov    %ecx,%eax$/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	f7 f5                	div    %ebp$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	89 d0                	mov    %edx,%eax$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	eb 99                	jmp    f0106928 <__umoddi3+0x38>$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	90                   	nop$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	89 c8                	mov    %ecx,%eax$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	89 f2                	mov    %esi,%edx$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	5b                   	pop    %ebx$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	5e                   	pop    %esi$/;"	l
f0106999	obj/kern/kernel.asm	/^f0106999:	5f                   	pop    %edi$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	5d                   	pop    %ebp$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	c3                   	ret    $/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	29 ef                	sub    %ebp,%edi$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	d3 e0                	shl    %cl,%eax$/;"	d
f01069ae	obj/kern/kernel.asm	/^f01069ae:	89 f9                	mov    %edi,%ecx$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	89 f2                	mov    %esi,%edx$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	d3 ea                	shr    %cl,%edx$/;"	d
f01069b4	obj/kern/kernel.asm	/^f01069b4:	89 e9                	mov    %ebp,%ecx$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	09 c2                	or     %eax,%edx$/;"	l
f01069b8	obj/kern/kernel.asm	/^f01069b8:	89 d8                	mov    %ebx,%eax$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01069bd	obj/kern/kernel.asm	/^f01069bd:	89 f2                	mov    %esi,%edx$/;"	l
f01069bf	obj/kern/kernel.asm	/^f01069bf:	d3 e2                	shl    %cl,%edx$/;"	d
f01069c1	obj/kern/kernel.asm	/^f01069c1:	89 f9                	mov    %edi,%ecx$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01069c7	obj/kern/kernel.asm	/^f01069c7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	d3 e8                	shr    %cl,%eax$/;"	d
f01069cd	obj/kern/kernel.asm	/^f01069cd:	89 e9                	mov    %ebp,%ecx$/;"	l
f01069cf	obj/kern/kernel.asm	/^f01069cf:	89 c6                	mov    %eax,%esi$/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	d3 e3                	shl    %cl,%ebx$/;"	d
f01069d3	obj/kern/kernel.asm	/^f01069d3:	89 f9                	mov    %edi,%ecx$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	89 d0                	mov    %edx,%eax$/;"	l
f01069d7	obj/kern/kernel.asm	/^f01069d7:	d3 e8                	shr    %cl,%eax$/;"	d
f01069d9	obj/kern/kernel.asm	/^f01069d9:	89 e9                	mov    %ebp,%ecx$/;"	l
f01069db	obj/kern/kernel.asm	/^f01069db:	09 d8                	or     %ebx,%eax$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	89 d3                	mov    %edx,%ebx$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	89 f2                	mov    %esi,%edx$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	f7 34 24             	divl   (%esp)$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	89 d6                	mov    %edx,%esi$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	d3 e3                	shl    %cl,%ebx$/;"	d
f01069e8	obj/kern/kernel.asm	/^f01069e8:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	39 d6                	cmp    %edx,%esi$/;"	l
f01069ee	obj/kern/kernel.asm	/^f01069ee:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	89 d1                	mov    %edx,%ecx$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	89 c3                	mov    %eax,%ebx$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	72 08                	jb     f0106a00 <__umoddi3+0x110>$/;"	l
f01069f8	obj/kern/kernel.asm	/^f01069f8:	75 11                	jne    f0106a0b <__umoddi3+0x11b>$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	73 0b                	jae    f0106a0b <__umoddi3+0x11b>$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	89 d1                	mov    %edx,%ecx$/;"	l
f0106a09	obj/kern/kernel.asm	/^f0106a09:	89 c3                	mov    %eax,%ebx$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	29 da                	sub    %ebx,%edx$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a15	obj/kern/kernel.asm	/^f0106a15:	89 f0                	mov    %esi,%eax$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	d3 e0                	shl    %cl,%eax$/;"	d
f0106a19	obj/kern/kernel.asm	/^f0106a19:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	d3 ea                	shr    %cl,%edx$/;"	d
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106a21	obj/kern/kernel.asm	/^f0106a21:	09 d0                	or     %edx,%eax$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	89 f2                	mov    %esi,%edx$/;"	l
f0106a25	obj/kern/kernel.asm	/^f0106a25:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	5b                   	pop    %ebx$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	5e                   	pop    %esi$/;"	l
f0106a2a	obj/kern/kernel.asm	/^f0106a2a:	5f                   	pop    %edi$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	5d                   	pop    %ebp$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	c3                   	ret    $/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106a30	obj/kern/kernel.asm	/^f0106a30:	29 f9                	sub    %edi,%ecx$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	19 d6                	sbb    %edx,%esi$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106a38	obj/kern/kernel.asm	/^f0106a38:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	e9 18 ff ff ff       	jmp    f0106959 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file; $/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;\/\/这里有什么用？？？$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnfaultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon24::__anon25	typeref:struct:netifapi_msg_msg::__anon24::__anon25::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon29::__anon32
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon40
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon40
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr) $/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon24::__anon25
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon29	typeref:struct:tcpip_msg::__anon29::__anon30
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon24::__anon25
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultio.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnfaultio.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultio.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnfaultio.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon14::__anon20	typeref:struct:api_msg_msg::__anon14::__anon20::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon13	typeref:struct:netconn::__anon13::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon14::__anon16	typeref:struct:api_msg_msg::__anon14::__anon16::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon14::__anon17	typeref:struct:api_msg_msg::__anon14::__anon17::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon24::__anon25	typeref:struct:netifapi_msg_msg::__anon24::__anon25::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^    ipr = ip_reass_enqueue_new_datagram(fraghdr, clen);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon20
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon14::__anon20	typeref:enum:api_msg_msg::__anon14::__anon20::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE); \/\/传回一个虚拟地址$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon21
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon14::__anon18
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon14::__anon19
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/kern/kernel.asm	/^		len = size \/ PGSIZE +1;$/;"	d
len	obj/kern/kernel.asm	/^		len = size \/ PGSIZE;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^	uint16_t length; \/\/The Checksum offset field indicates where to insert a TCP checksum if this mode is enabled. $/;"	m	struct:tx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
length	obj/kern/kernel.asm	/^		length = sizeof(struct packets); \/\/最大也只能2048 bytes$/;"	d
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnfaultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
line	user/num.c	/^int line = 0;$/;"	v
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon14::__anon17
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultio.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnfaultio.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnfaultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon23
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon22
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE; \/\/因为栈向下增长？$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon29::__anon32
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon14
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon24
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon29
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon44	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon44	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon14::__anon20	typeref:struct:api_msg_msg::__anon14::__anon20::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon15
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/fs/fs.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testoutput.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultio.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/spawnfaultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnfaultio.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^	n = n > sizeof(fsipcbuf.write.req_buf) ? sizeof(fsipcbuf.write.req_buf):n;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here ，我傻了把，这么大一个冒号看不见?这里不就是函数内容嘛！！！*\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon36
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon29::__anon30	typeref:struct:tcpip_msg::__anon29::__anon30::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon29	typeref:struct:tcpip_msg::__anon29::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon24::__anon25	typeref:struct:netifapi_msg_msg::__anon24::__anon25::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnfaultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP(nextfree+n, PGSIZE);\/\/enough and multiple of PGSIZE$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnfaultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultio.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnfaultio.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultio.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnfaultio.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnfaultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page是一个专门记录着这个open file的基本信息的页面$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file应该是打开的那个文件的file pointer$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id。 The client uses file IDs to communicate with the server.$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	73;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnfaultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon29::__anon30	typeref:struct:tcpip_msg::__anon29::__anon30::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
packets	kern/e1000.h	/^struct packets{$/;"	s
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon27
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon28
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon13
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_e1000	kern/e1000.h	/^volatile uint32_t *pci_e1000;$/;"	v
pci_e1000	obj/kern/kernel.asm	/^	pci_e1000 = mmio_map_region(pcif->reg_base[0], pcif->reg_size[0]);$/;"	d
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnfaultio.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELF_Header + ELF_Header->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnfaultio.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon14::__anon17
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon14::__anon16
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^	pp = page_alloc(1); \/\/参数为1就是初始化页面内容为0。$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_free_list;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnfaultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnfaultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnfaultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnfaultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon14::__anon15
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(env->env_pgdir, (void *)i, 0);$/;"	d
pte	obj/kern/kernel.asm	/^	pte = (pte_t *)KADDR(PTE_ADDR(*pde));\/\/ The first address of the page table$/;"	d
pte	obj/net/ns.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnfaultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = pgdir_walk(thisenv->env_pgdir, addr, 0);傻了吧，不能用的*\/$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon19
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(e->env_pgdir, pp, va, perm);$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/net/ns.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/net/testinput.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/net/testoutput.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultio.asm	/^			r = 0;$/;"	d
r	obj/user/faultio.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/forktree.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primes.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sendpage.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/sh.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = 0;$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/spin.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(fu_id, (void *)addr, envid, (void *)addr, uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(fu_id, (void *)addr, fu_id, (void *)addr, PTE_COW|PTE_U);$/;"	d
r	obj/user/testshell.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_alloc(envid, (void *)PFTEMP, PTE_P|PTE_W|PTE_U);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fsipc(FSREQ_WRITE, NULL); \/\/error or success都在r中$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon13	typeref:struct:netconn::__anon13::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnfaultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_addrlen	inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid; \/\/想读取的那个目标文件id$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;  \/\/Read at most ipc->read.req_n bytes $/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnfaultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnfaultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnfaultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon8	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultio.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnfaultio.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"  (signature:署名，签名，信号)$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultio.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnfaultio.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^	uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
srcpp	obj/kern/kernel.asm	/^	srcpp = page_lookup(srce->env_pgdir, srcva, &srcpte);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnfaultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon37
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon24::__anon25
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultio.asm	/^static inline uint32_t$/;"	l
static	obj/user/faultio.asm	/^static inline void$/;"	l
static	obj/user/faultio.asm	/^static int$/;"	l
static	obj/user/faultio.asm	/^static long long$/;"	l
static	obj/user/faultio.asm	/^static ssize_t$/;"	l
static	obj/user/faultio.asm	/^static unsigned long long$/;"	l
static	obj/user/faultio.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnfaultio.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnfaultio.asm	/^static int$/;"	l
static	obj/user/spawnfaultio.asm	/^static long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static ssize_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^	uint8_t status;$/;"	m	struct:tx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnfaultio.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnfaultio.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_packet_try_send	kern/syscall.c	/^sys_packet_try_send(void *addr, uint32_t len){$/;"	f	file:
sys_packet_try_send	lib/syscall.c	/^sys_packet_try_send(void *data_va, int len)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon13	typeref:struct:netconn::__anon13::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultio	grade-lab5	/^def test_faultio():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnfaultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon35	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon29	typeref:struct:tcpip_msg::__anon29::__anon32
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
transmit_packets	kern/e1000.c	/^transmit_packets(void *addr, int length){$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_buf	kern/e1000.h	/^struct packets tx_buf[TX_MAX];$/;"	v	typeref:struct:packets
tx_desc	kern/e1000.h	/^struct tx_desc$/;"	s
tx_list	kern/e1000.h	/^struct tx_desc tx_list[TX_MAX];$/;"	v	typeref:struct:tx_desc
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon13	typeref:struct:netconn::__anon13::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnfaultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultio.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnfaultio.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (i < (uintptr_t)va? (uintptr_t)va : i);$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(tf->tf_esp - sizeof(struct UTrapframe) -4);$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon33	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnfaultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon43
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultio.asm	/^void *$/;"	l
void	obj/user/faultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultio.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnfaultio.asm	/^void *$/;"	l
void	obj/user/spawnfaultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnfaultio.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon24::__anon26
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon14	typeref:struct:api_msg_msg::__anon14::__anon18
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon33::__anon34	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/net/ns.asm	/^	who = sys_exofork();$/;"	d
who	obj/net/testinput.asm	/^	who = sys_exofork();$/;"	d
who	obj/net/testoutput.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
who	obj/user/forktree.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/pingpong.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/pingpongs.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/primes.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/primespipe.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/sendpage.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/sh.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/spin.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/stresssched.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testfdsharing.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpipe.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpiperace.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpiperace2.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testpteshare.asm	/^	who = sys_exofork();$/;"	d
who	obj/user/testshell.asm	/^	who = sys_exofork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultio.asm	/^				width = 0;$/;"	d
width	obj/user/faultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultio.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = 0;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon8	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
